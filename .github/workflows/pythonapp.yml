name: Python application

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  # Also trigger on page_build, as well as release created events
  page_build:
  release:
    types: # This configuration does not affect the page_build event above
      - created

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306
        env:
          MYSQL_USER: sc_user
          MYSQL_PASSWORD: sc_user
          MYSQL_DATABASE: scdb_dev
          MYSQL_ROOT_PASSWORD: sc_admin_pass
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - uses: actions/checkout@v2
      - name: Verify MariaDB connection
        env:
          PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done

      - name: Verify MySQL connection from host
        run: |
          mysql --host 127.0.0.1 --port 32768 -uroot -psc_admin_pass -e "CREATE DATABASE IF NOT EXISTS scdb_dev character set UTF8 collate utf8_bin"
          mysql --host 127.0.0.1 --port 32768 -uroot -psc_admin_pass -e "CREATE DATABASE IF NOT EXISTS scdb_test character set UTF8 collate utf8_bin"
          mysql --host 127.0.0.1 --port 32768 -uroot -psc_admin_pass -e "CREATE USER IF NOT EXISTS 'sc_user'@'localhost' IDENTIFIED BY 'sc_user'"
          mysql --host 127.0.0.1 --port 32768 -uroot -psc_admin_pass -e "GRANT ALL ON scdb_test.* TO 'sc_user'@'localhost'"
          mysql --host 127.0.0.1 --port 32768 -uroot -psc_admin_pass -e "GRANT ALL ON scdb_dev.* TO 'sc_user'@'localhost'"
          mysql --host 127.0.0.1 --port 32768 -uroot -psc_admin_pass -e "GRANT ALL ON scdb_test.* TO 'sc_user'@'%'"
          mysql --host 127.0.0.1 --port 32768 -uroot -psc_admin_pass -e "flush privileges"
          mysql --host 127.0.0.1 --port 32768 -usc_user -psc_user -e "SHOW DATABASES"
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: System Update
        run: |
          sudo apt-get install python3.7-dev
          sudo apt-get install default-libmysqlclient-dev
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Copying configurations
        run: |
          cp contrib/env-sample .env
      - name: Test with manage.py test
        run: |
          python manage.py makemigrations core
          python manage.py migrate core
          python manage.py test core --keepdb
