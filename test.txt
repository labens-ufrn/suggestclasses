Type 'yes' if you would like to try deleting the test database 'scdb_test', or 'no' to cancel: [*] Start mutation process:
   - targets: core.admin, core.apps, core.bo.curriculo, core.bo.curso, core.bo.discentes, core.bo.docente, core.bo.enquetes, core.bo.historico, core.bo.periodos, core.bo.requisitos, core.bo.sala, core.bo.sevices, core.bo.sistemas, core.bo.sugestao, core.bo.turma, core.dao.centro_dao, core.dao.componente_dao, core.dao.departamento_dao, core.filters, core.forms, core.migrations.0001_initial, core.migrations.0002_auto_20190509_1508, core.migrations.0003_auto_20190805_1144, core.migrations.0004_delete_profile, core.migrations.0005_auto_20190815_1213, core.migrations.0006_auto_20190825_2325, core.migrations.0007_auto_20190825_2345, core.migrations.0008_componentecurricular_requisitos, core.migrations.0009_auto_20190826_0013, core.migrations.0010_auto_20190826_0016, core.migrations.0011_auto_20190908_1207, core.migrations.0012_curso_grau, core.migrations.0013_auto_20190908_1219, core.migrations.0014_auto_20190908_1219, core.migrations.0015_auto_20190910_1029, core.migrations.0016_auto_20190910_1049, core.migrations.0017_auto_20190921_1849, core.migrations.0018_auto_20191003_1735, core.migrations.0019_auto_20191003_1810, core.migrations.0020_auto_20191003_1818, core.migrations.0021_auto_20191003_1902, core.migrations.0022_auto_20191024_0834, core.migrations.0023_auto_20191103_1214, core.migrations.0024_docente_turma, core.migrations.0025_auto_20191124_1125, core.migrations.0026_auto_20191124_1139, core.migrations.0027_auto_20191125_1917, core.migrations.0028_auto_20191125_1918, core.migrations.0029_auto_20191125_1926, core.migrations.0030_auto_20191125_1944, core.migrations.0031_auto_20191125_1946, core.migrations.0032_auto_20191125_2003, core.migrations.0033_auto_20191125_2007, core.migrations.0034_auto_20191125_2034, core.migrations.0035_auto_20191125_2056, core.migrations.0036_auto_20191125_2058, core.migrations.0037_auto_20191125_2103, core.migrations.0038_sugestaoturma, core.migrations.0039_auto_20200322_1138, core.migrations.0040_auto_20200324_1758, core.migrations.0041_auto_20200324_1934, core.migrations.0041_auto_20200325_2218, core.migrations.0042_auto_20200324_1935, core.migrations.0043_auto_20200324_1936, core.migrations.0044_auto_20200324_1945, core.migrations.0045_auto_20200324_1947, core.migrations.0046_merge_20200325_2224, core.migrations.0047_curso_coordenador, core.migrations.0048_auto_20200402_1613, core.migrations.0049_funcaogratificada_turmaestendida, core.migrations.0050_discente, core.migrations.0051_auto_20200413_1233, core.migrations.0052_auto_20200413_1257, core.migrations.0053_sugestaoturma_criada_por, core.migrations.0054_auto_20200413_2238, core.migrations.0055_auto_20200414_1839, core.migrations.0056_auto_20200414_2234, core.migrations.0057_sugestaoturma_horarios, core.migrations.0058_auto_20200421_2342, core.migrations.0059_auto_20200421_2358, core.migrations.0060_auto_20200422_2255, core.migrations.0061_auto_20200423_1821, core.migrations.0062_auto_20200425_2329, core.migrations.0063_auto_20200425_2349, core.migrations.0064_auto_20200426_0947, core.migrations.0065_auto_20200427_2041, core.migrations.0066_auto_20200427_2233, core.migrations.0067_turma_horarios, core.migrations.0068_auto_20200511_1949, core.migrations.0069_auto_20200511_2114, core.migrations.0070_auto_20200513_1723, core.migrations.0071_docente_departamento, core.migrations.0072_vinculodocente, core.migrations.0073_auto_20200520_1743, core.migrations.0074_delete_turmaestendida, core.migrations.0075_auto_20200531_1317, core.migrations.0076_periodoletivo, core.migrations.0077_enquete, core.migrations.0078_vototurma, core.migrations.0079_auto_20200604_0242, core.migrations.0080_auto_20200604_1142, core.migrations.0081_enquete_tipo, core.migrations.0082_auto_20200606_2235, core.migrations.0083_vinculodocentesugestao, core.migrations.0084_enquete_qtd_discentes_ativos, core.migrations.0085_historico, core.migrations.0086_estruturacurricular_status, core.migrations.0087_auto_20201130_2157, core.migrations.0088_auto_20210403_2348, core.migrations.0089_auto_20210421_1938, core.models, core.templatetags.sc_extras, core.tests.povoar_testes, core.tests.test_a_povoamento, core.tests.test_curriculo, core.tests.test_dao, core.tests.test_discente, core.tests.test_docente, core.tests.test_enquetes, core.tests.test_flow_view, core.tests.test_historico, core.tests.test_profile_view, core.tests.test_requisitos, core.tests.test_sugestao, core.tests.test_sugestao_geografia_view, core.tests.test_sugestao_view, core.tests.test_turma, core.tests.test_turma_view, core.tests.test_user_view, core.urls, core.views, core.visoes.enquete_view, core.visoes.flow_view, core.visoes.profile_view, core.visoes.sugestao_contabeis_view, core.visoes.sugestao_geografia_view, core.visoes.sugestao_historia_view, core.visoes.sugestao_letras_view, core.visoes.suggest_view, core.visoes.turma_view, core.visoes.user_view
   - tests: core.tests

Teste A
> povoando dados
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............
CurriculoTests
> povoando dados
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............
DAOTests
> povoando dados
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............
DiscenteTests
> povoando dados
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............
DocenteTests
> povoando dados
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............
EnqueteTests
> povoando dados
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............
FlowViewTests
> povoando dados
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............
DiscenteTests
> povoando dados
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60
<QuerySet [<Historico: DCT9999 - BANCO DE DADOS (Zé Silva)>]>
<QuerySet [<Historico: DCT9999 - BANCO DE DADOS (Zé Silva)>]>

> removendo dados
...............( ( BSI3102 ) OU ( DCT2305 ) ) E ( ( BSI1107 ) OU ( DCT1107 ) ) 
( ( True ) or ( False ) ) and ( ( False ) or ( True ) ) 
True
( ( BSI2301 ) OU ( DCT2301 ) ) E ( ( BSI2201 ) OU ( DCT2201 ) ) E ( ( BSI1109 ) OU ( DCT1109 ) ) 
( ( False ) or ( True ) ) and ( ( False ) or ( True ) ) and ( ( False ) or ( False ) ) 
False

SugestaoTests
> povoando dados
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............
SugestaoGeografiaViewTests
> povoando dados
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados

SugestaoViewTests
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados

TurmaBOTests
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............
TurmaViewTests
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............
UserViewTests
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
[*] 61 tests passed:
   - core.tests.povoar_testes [0.00005 s]
   - core.tests.test_a_povoamento [1.80460 s]
   - core.tests.test_curriculo [1.68077 s]
   - core.tests.test_dao [1.64191 s]
   - core.tests.test_discente [1.72498 s]
   - core.tests.test_docente [2.10141 s]
   - core.tests.test_enquetes [1.60855 s]
   - core.tests.test_flow_view [1.69262 s]
   - core.tests.test_historico [2.22509 s]
   - core.tests.test_profile_view [0.00004 s]
   - core.tests.test_requisitos [0.00195 s]
   - core.tests.test_sugestao [2.33060 s]
   - core.tests.test_sugestao_geografia_view [2.36439 s]
   - core.tests.test_sugestao_view [2.09937 s]
   - core.tests.test_turma [1.66827 s]
   - core.tests.test_turma_view [2.03459 s]
   - core.tests.test_user_view [2.65857 s]
   - core.tests.tests [0.06716 s]
[*] Start mutants generation and execution:
   - [#   1] IHD core.admin: 
--------------------------------------------------------------------------------
    5: 
    6: 
    7: 
    8: class SalaAdmin(admin.ModelAdmin):
-   9:     list_display = ('nome', 'sigla', 'bloco', 'centro', 'campus')
+   9:     pass
   10: 
   11: 
   12: class ComponenteCurricularAdmin(admin.ModelAdmin):
   13:     list_display = ('codigo', 'nome', 'departamento')
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#   2] IHD core.admin: 
--------------------------------------------------------------------------------
    9:     list_display = ('nome', 'sigla', 'bloco', 'centro', 'campus')
   10: 
   11: 
   12: class ComponenteCurricularAdmin(admin.ModelAdmin):
-  13:     list_display = ('codigo', 'nome', 'departamento')
+  13:     pass
   14:     search_fields = ['codigo', 'nome']
   15: 
   16: 
   17: class EstruturaCurricularAdmin(admin.ModelAdmin):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#   3] IHD core.admin: 
--------------------------------------------------------------------------------
   10: 
   11: 
   12: class ComponenteCurricularAdmin(admin.ModelAdmin):
   13:     list_display = ('codigo', 'nome', 'departamento')
-  14:     search_fields = ['codigo', 'nome']
+  14:     pass
   15: 
   16: 
   17: class EstruturaCurricularAdmin(admin.ModelAdmin):
   18:     list_display = ('codigo', 'nome', 'ch_total_minima', 'status')
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#   4] IHD core.admin: 
--------------------------------------------------------------------------------
   14:     search_fields = ['codigo', 'nome']
   15: 
   16: 
   17: class EstruturaCurricularAdmin(admin.ModelAdmin):
-  18:     list_display = ('codigo', 'nome', 'ch_total_minima', 'status')
+  18:     pass
   19:     search_fields = ['nome']
   20: 
   21: 
   22: class OrganizacaoCurricularAdmin(admin.ModelAdmin):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#   5] IHD core.admin: 
--------------------------------------------------------------------------------
   15: 
   16: 
   17: class EstruturaCurricularAdmin(admin.ModelAdmin):
   18:     list_display = ('codigo', 'nome', 'ch_total_minima', 'status')
-  19:     search_fields = ['nome']
+  19:     pass
   20: 
   21: 
   22: class OrganizacaoCurricularAdmin(admin.ModelAdmin):
   23:     list_display = ('id_curriculo_componente', 'componente', 'semestre', 'tipo_vinculo')
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#   6] IHD core.admin: 
--------------------------------------------------------------------------------
   19:     search_fields = ['nome']
   20: 
   21: 
   22: class OrganizacaoCurricularAdmin(admin.ModelAdmin):
-  23:     list_display = ('id_curriculo_componente', 'componente', 'semestre', 'tipo_vinculo')
+  23:     pass
   24:     list_filter = ['estrutura', 'semestre']
   25:     search_fields = ['id_curriculo_componente']
   26: 
   27: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#   7] IHD core.admin: 
--------------------------------------------------------------------------------
   20: 
   21: 
   22: class OrganizacaoCurricularAdmin(admin.ModelAdmin):
   23:     list_display = ('id_curriculo_componente', 'componente', 'semestre', 'tipo_vinculo')
-  24:     list_filter = ['estrutura', 'semestre']
+  24:     pass
   25:     search_fields = ['id_curriculo_componente']
   26: 
   27: 
   28: class DocenteAdmin(admin.ModelAdmin):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#   8] IHD core.admin: 
--------------------------------------------------------------------------------
   21: 
   22: class OrganizacaoCurricularAdmin(admin.ModelAdmin):
   23:     list_display = ('id_curriculo_componente', 'componente', 'semestre', 'tipo_vinculo')
   24:     list_filter = ['estrutura', 'semestre']
-  25:     search_fields = ['id_curriculo_componente']
+  25:     pass
   26: 
   27: 
   28: class DocenteAdmin(admin.ModelAdmin):
   29:     list_display = ('siape', 'nome', 'lotacao', 'usuario')
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#   9] IHD core.admin: 
--------------------------------------------------------------------------------
   25:     search_fields = ['id_curriculo_componente']
   26: 
   27: 
   28: class DocenteAdmin(admin.ModelAdmin):
-  29:     list_display = ('siape', 'nome', 'lotacao', 'usuario')
+  29:     pass
   30:     list_filter = ['lotacao']
   31:     search_fields = ['siape', 'nome']
   32: 
   33: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#  10] IHD core.admin: 
--------------------------------------------------------------------------------
   26: 
   27: 
   28: class DocenteAdmin(admin.ModelAdmin):
   29:     list_display = ('siape', 'nome', 'lotacao', 'usuario')
-  30:     list_filter = ['lotacao']
+  30:     pass
   31:     search_fields = ['siape', 'nome']
   32: 
   33: 
   34: class FuncaoGratificadaAdmin(admin.ModelAdmin):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#  11] IHD core.admin: 
--------------------------------------------------------------------------------
   27: 
   28: class DocenteAdmin(admin.ModelAdmin):
   29:     list_display = ('siape', 'nome', 'lotacao', 'usuario')
   30:     list_filter = ['lotacao']
-  31:     search_fields = ['siape', 'nome']
+  31:     pass
   32: 
   33: 
   34: class FuncaoGratificadaAdmin(admin.ModelAdmin):
   35:     list_display = ('siape', 'nome', 'lotacao', 'atividade', 'unidade_designacao')
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#  12] IHD core.admin: 
--------------------------------------------------------------------------------
   31:     search_fields = ['siape', 'nome']
   32: 
   33: 
   34: class FuncaoGratificadaAdmin(admin.ModelAdmin):
-  35:     list_display = ('siape', 'nome', 'lotacao', 'atividade', 'unidade_designacao')
+  35:     pass
   36:     list_filter = ['atividade']
   37:     search_fields = ['nome', 'atividade']
   38: 
   39: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#  13] IHD core.admin: 
--------------------------------------------------------------------------------
   32: 
   33: 
   34: class FuncaoGratificadaAdmin(admin.ModelAdmin):
   35:     list_display = ('siape', 'nome', 'lotacao', 'atividade', 'unidade_designacao')
-  36:     list_filter = ['atividade']
+  36:     pass
   37:     search_fields = ['nome', 'atividade']
   38: 
   39: 
   40: class DiscenteAdmin(admin.ModelAdmin):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#  14] IHD core.admin: 
--------------------------------------------------------------------------------
   33: 
   34: class FuncaoGratificadaAdmin(admin.ModelAdmin):
   35:     list_display = ('siape', 'nome', 'lotacao', 'atividade', 'unidade_designacao')
   36:     list_filter = ['atividade']
-  37:     search_fields = ['nome', 'atividade']
+  37:     pass
   38: 
   39: 
   40: class DiscenteAdmin(admin.ModelAdmin):
   41:     list_display = ('matricula', 'nome_discente', 'nome_curso', 'nome_unidade', 'status')
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#  15] IHD core.admin: 
--------------------------------------------------------------------------------
   37:     search_fields = ['nome', 'atividade']
   38: 
   39: 
   40: class DiscenteAdmin(admin.ModelAdmin):
-  41:     list_display = ('matricula', 'nome_discente', 'nome_curso', 'nome_unidade', 'status')
+  41:     pass
   42:     list_filter = ['ano_ingresso', 'periodo_ingresso', 'status', 'nome_curso']
   43:     search_fields = ['matricula', 'nome_discente']
   44: 
   45: class TurmaAdmin(admin.ModelAdmin):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#  16] IHD core.admin: 
--------------------------------------------------------------------------------
   38: 
   39: 
   40: class DiscenteAdmin(admin.ModelAdmin):
   41:     list_display = ('matricula', 'nome_discente', 'nome_curso', 'nome_unidade', 'status')
-  42:     list_filter = ['ano_ingresso', 'periodo_ingresso', 'status', 'nome_curso']
+  42:     pass
   43:     search_fields = ['matricula', 'nome_discente']
   44: 
   45: class TurmaAdmin(admin.ModelAdmin):
   46:     list_display = ('codigo_turma', 'componente', 'ano', 'periodo')
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#  17] IHD core.admin: 
--------------------------------------------------------------------------------
   39: 
   40: class DiscenteAdmin(admin.ModelAdmin):
   41:     list_display = ('matricula', 'nome_discente', 'nome_curso', 'nome_unidade', 'status')
   42:     list_filter = ['ano_ingresso', 'periodo_ingresso', 'status', 'nome_curso']
-  43:     search_fields = ['matricula', 'nome_discente']
+  43:     pass
   44: 
   45: class TurmaAdmin(admin.ModelAdmin):
   46:     list_display = ('codigo_turma', 'componente', 'ano', 'periodo')
   47:     list_filter = ['ano', 'periodo']
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#  18] IHD core.admin: 
--------------------------------------------------------------------------------
   42:     list_filter = ['ano_ingresso', 'periodo_ingresso', 'status', 'nome_curso']
   43:     search_fields = ['matricula', 'nome_discente']
   44: 
   45: class TurmaAdmin(admin.ModelAdmin):
-  46:     list_display = ('codigo_turma', 'componente', 'ano', 'periodo')
+  46:     pass
   47:     list_filter = ['ano', 'periodo']
   48:     search_fields = ['componente']
   49: 
   50: class PeriodoLetivoAdmin(admin.ModelAdmin):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#  19] IHD core.admin: 
--------------------------------------------------------------------------------
   43:     search_fields = ['matricula', 'nome_discente']
   44: 
   45: class TurmaAdmin(admin.ModelAdmin):
   46:     list_display = ('codigo_turma', 'componente', 'ano', 'periodo')
-  47:     list_filter = ['ano', 'periodo']
+  47:     pass
   48:     search_fields = ['componente']
   49: 
   50: class PeriodoLetivoAdmin(admin.ModelAdmin):
   51:     list_display = ('nome', 'ano', 'periodo', 'data_inicio', 'data_fim', 'status')
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#  20] IHD core.admin: 
--------------------------------------------------------------------------------
   44: 
   45: class TurmaAdmin(admin.ModelAdmin):
   46:     list_display = ('codigo_turma', 'componente', 'ano', 'periodo')
   47:     list_filter = ['ano', 'periodo']
-  48:     search_fields = ['componente']
+  48:     pass
   49: 
   50: class PeriodoLetivoAdmin(admin.ModelAdmin):
   51:     list_display = ('nome', 'ano', 'periodo', 'data_inicio', 'data_fim', 'status')
   52: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#  21] IHD core.admin: 
--------------------------------------------------------------------------------
   47:     list_filter = ['ano', 'periodo']
   48:     search_fields = ['componente']
   49: 
   50: class PeriodoLetivoAdmin(admin.ModelAdmin):
-  51:     list_display = ('nome', 'ano', 'periodo', 'data_inicio', 'data_fim', 'status')
+  51:     pass
   52: 
   53: 
   54: class EnqueteAdmin(admin.ModelAdmin):
   55:     list_display = ('nome', 'curso', 'numero_votos', 'periodo', 'data_hora_inicio', 'data_hora_fim', 'status')
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#  22] IHD core.admin: 
--------------------------------------------------------------------------------
   51:     list_display = ('nome', 'ano', 'periodo', 'data_inicio', 'data_fim', 'status')
   52: 
   53: 
   54: class EnqueteAdmin(admin.ModelAdmin):
-  55:     list_display = ('nome', 'curso', 'numero_votos', 'periodo', 'data_hora_inicio', 'data_hora_fim', 'status')
+  55:     pass
   56: 
   57: 
   58: class VotoTurmaAdmin(admin.ModelAdmin):
   59:     list_display = ('enquete', 'componente', 'get_matricula', 'get_nome', 'get_email')
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#  23] IHD core.admin: 
--------------------------------------------------------------------------------
   55:     list_display = ('nome', 'curso', 'numero_votos', 'periodo', 'data_hora_inicio', 'data_hora_fim', 'status')
   56: 
   57: 
   58: class VotoTurmaAdmin(admin.ModelAdmin):
-  59:     list_display = ('enquete', 'componente', 'get_matricula', 'get_nome', 'get_email')
+  59:     pass
   60:     list_filter = ['enquete', 'componente', 'discente__matricula']
   61:     
   62:     
   63:     def get_matricula(self, obj):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#  24] IHD core.admin: 
--------------------------------------------------------------------------------
   56: 
   57: 
   58: class VotoTurmaAdmin(admin.ModelAdmin):
   59:     list_display = ('enquete', 'componente', 'get_matricula', 'get_nome', 'get_email')
-  60:     list_filter = ['enquete', 'componente', 'discente__matricula']
+  60:     pass
   61:     
   62:     
   63:     def get_matricula(self, obj):
   64:         return obj.discente.matricula
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#  25] COI core.bo.curriculo: 
--------------------------------------------------------------------------------
   8:     :param id_componente_curricular: Identificador do Componente Curricular
   9:     :return: Um ou mais objetos de Organização Curricular
  10:     '''
  11:     curriculo = None
- 12:     if (id_componente_curricular != '' and \
- 13:         OrganizacaoCurricular.objects.filter(componente__id_componente=id_componente_curricular).exists()):
+ 12:     if not ((id_componente_curricular != '' and \
+ 13:         OrganizacaoCurricular.objects.filter(componente__id_componente=id_componente_curricular).exists())):
  14:         curriculo = OrganizacaoCurricular.objects.filter(componente__id_componente=id_componente_curricular)
  15:     return curriculo
  16: 
  17: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............
CurriculoTests
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[3.89476 s] killed by test_get_curriculo_by_cc (core.tests.test_curriculo.CurriculoTests)
   - [#  26] LCR core.bo.curriculo: 
--------------------------------------------------------------------------------
   8:     :param id_componente_curricular: Identificador do Componente Curricular
   9:     :return: Um ou mais objetos de Organização Curricular
  10:     '''
  11:     curriculo = None
- 12:     if (id_componente_curricular != '' and \
+ 12:     if (id_componente_curricular != '' or \
  13:         OrganizacaoCurricular.objects.filter(componente__id_componente=id_componente_curricular).exists()):
  14:         curriculo = OrganizacaoCurricular.objects.filter(componente__id_componente=id_componente_curricular)
  15:     return curriculo
  16: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............
CurriculoTests
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............
DAOTests
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............
DiscenteTests
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............
DocenteTests
> povoando dados
............................................................................................[30.13436 s] survived
   - [#  27] ROR core.bo.curriculo: 
--------------------------------------------------------------------------------
   8:     :param id_componente_curricular: Identificador do Componente Curricular
   9:     :return: Um ou mais objetos de Organização Curricular
  10:     '''
  11:     curriculo = None
- 12:     if (id_componente_curricular != '' and \
+ 12:     if (id_componente_curricular == '' and \
  13:         OrganizacaoCurricular.objects.filter(componente__id_componente=id_componente_curricular).exists()):
  14:         curriculo = OrganizacaoCurricular.objects.filter(componente__id_componente=id_componente_curricular)
  15:     return curriculo
  16: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............
CurriculoTests
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[3.64501 s] killed by test_get_curriculo_by_cc (core.tests.test_curriculo.CurriculoTests)
   - [#  28] COI core.bo.discentes: 
--------------------------------------------------------------------------------
  12: def get_discentes_by_centro(centro: Centro):
  13:     '''
  14:         Lista todos os discentes de um centro.
  15:     '''
- 16:     if centro:
+ 16:     if not centro:
  17:         return Discente.objects.filter(id_unidade=centro.id_unidade)
  18:     return get_discentes()
  19: 
  20: def get_discentes_ativos(curso: Curso = None, centro: Centro = None):
--------------------------------------------------------------------------------
[3.94660 s] killed by test_get_curriculo_by_cc (core.tests.test_curriculo.CurriculoTests)
   - [#  29] COI core.bo.discentes: 
--------------------------------------------------------------------------------
  23:     '''
  24:     query = Q(status='ATIVO')
  25:     query.add(Q(status='ATIVO - FORMANDO'), Q.OR)
  26:     
- 27:     if curso:
+ 27:     if not curso:
  28:         query.add(Q(id_curso=curso.codigo), Q.AND)
  29:     
  30:     if centro:
  31:         query.add(Q(id_unidade=centro.id_unidade), Q.AND)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.67684 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  30] COI core.bo.discentes: 
--------------------------------------------------------------------------------
  26:     
  27:     if curso:
  28:         query.add(Q(id_curso=curso.codigo), Q.AND)
  29:     
- 30:     if centro:
+ 30:     if not centro:
  31:         query.add(Q(id_unidade=centro.id_unidade), Q.AND)
  32:     
  33:     return Discente.objects.filter(query)
  34: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.78905 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  31] COI core.bo.discentes: 
--------------------------------------------------------------------------------
  39:     :param matricula: Matrícula do discente.
  40:     :return: Um objeto da classe @Discente.
  41:     '''
  42:     discente = None
- 43:     if (matricula != '' and Discente.objects.filter(matricula=matricula).exists()):
+ 43:     if not ((matricula != '' and Discente.objects.filter(matricula=matricula).exists())):
  44:         
  45:         discente = Discente.objects.get(matricula=matricula)
  46:     return discente
  47: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.63981 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  32] LCR core.bo.discentes: 
--------------------------------------------------------------------------------
  39:     :param matricula: Matrícula do discente.
  40:     :return: Um objeto da classe @Discente.
  41:     '''
  42:     discente = None
- 43:     if (matricula != '' and Discente.objects.filter(matricula=matricula).exists()):
+ 43:     if (matricula != '' or Discente.objects.filter(matricula=matricula).exists()):
  44:         
  45:         discente = Discente.objects.get(matricula=matricula)
  46:     return discente
  47: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............
CurriculoTests
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[3.15893 s] killed by test_get_curriculo_by_cc (core.tests.test_curriculo.CurriculoTests)
   - [#  33] ROR core.bo.discentes: 
--------------------------------------------------------------------------------
  39:     :param matricula: Matrícula do discente.
  40:     :return: Um objeto da classe @Discente.
  41:     '''
  42:     discente = None
- 43:     if (matricula != '' and Discente.objects.filter(matricula=matricula).exists()):
+ 43:     if (matricula == '' and Discente.objects.filter(matricula=matricula).exists()):
  44:         
  45:         discente = Discente.objects.get(matricula=matricula)
  46:     return discente
  47: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.83756 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  34] COI core.bo.docente: 
--------------------------------------------------------------------------------
  22:     :param siape: Matrícula siape do docente.
  23:     :return: Um objeto da classe @Docente.
  24:     '''
  25:     docente = None
- 26:     if (siape != '' and Docente.objects.filter(siape=siape).exists()):
+ 26:     if not ((siape != '' and Docente.objects.filter(siape=siape).exists())):
  27:         
  28:         docente = Docente.objects.get(siape=siape)
  29:     return docente
  30: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.88002 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  35] COI core.bo.docente: 
--------------------------------------------------------------------------------
  35:     :param nome: O nome completo do docente.
  36:     :return: Um objeto da classe @Docente.
  37:     '''
  38:     docente = None
- 39:     if (nome != '' and Docente.objects.filter(nome=nome).exists()):
+ 39:     if not ((nome != '' and Docente.objects.filter(nome=nome).exists())):
  40:         docente = Docente.objects.get(nome=nome)
  41:     return docente
  42: 
  43: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.68116 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  36] COI core.bo.docente: 
--------------------------------------------------------------------------------
  47:     :param siape: Matrícula siape do docente.
  48:     :return: Um objeto da classe @FuncaoGratificada.
  49:     '''
  50:     funcoes = []
- 51:     if (siape != '' and Docente.objects.filter(siape=siape).exists()):
+ 51:     if not ((siape != '' and Docente.objects.filter(siape=siape).exists())):
  52:         docente = Docente.objects.get(siape=siape)
  53:         hoje = date.today()
  54:         if FuncaoGratificada.objects.filter(siape=docente.siape, inicio__lte=hoje, fim__gt=hoje).exists():
  55:             fgs = FuncaoGratificada.objects.filter(siape=docente.siape, inicio__lte=hoje, fim__gt=hoje)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.54629 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  37] COI core.bo.docente: 
--------------------------------------------------------------------------------
  50:     funcoes = []
  51:     if (siape != '' and Docente.objects.filter(siape=siape).exists()):
  52:         docente = Docente.objects.get(siape=siape)
  53:         hoje = date.today()
- 54:         if FuncaoGratificada.objects.filter(siape=docente.siape, inicio__lte=hoje, fim__gt=hoje).exists():
+ 54:         if not (FuncaoGratificada.objects.filter(siape=docente.siape, inicio__lte=hoje, fim__gt=hoje).exists()):
  55:             fgs = FuncaoGratificada.objects.filter(siape=docente.siape, inicio__lte=hoje, fim__gt=hoje)
  56:             for fg in fgs:
  57:                 funcoes.append(fg)
  58:     return funcoes
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.98487 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  38] COI core.bo.docente: 
--------------------------------------------------------------------------------
  68:     turmas_por_horario = []
  69:     n = 7
  70:     turnos = ['M', 'T', 'N']
  71:     for turno in turnos:
- 72:         if turno == 'N':
+ 72:         if not (turno == 'N'):
  73:             n = 5
  74:         
  75:         for i in range(1, n):
  76:             horarios = Horario.objects.filter(turno=turno, ordem=i).order_by('dia')
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.60993 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  39] LCR core.bo.docente: 
--------------------------------------------------------------------------------
  22:     :param siape: Matrícula siape do docente.
  23:     :return: Um objeto da classe @Docente.
  24:     '''
  25:     docente = None
- 26:     if (siape != '' and Docente.objects.filter(siape=siape).exists()):
+ 26:     if (siape != '' or Docente.objects.filter(siape=siape).exists()):
  27:         
  28:         docente = Docente.objects.get(siape=siape)
  29:     return docente
  30: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.97697 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  40] LCR core.bo.docente: 
--------------------------------------------------------------------------------
  35:     :param nome: O nome completo do docente.
  36:     :return: Um objeto da classe @Docente.
  37:     '''
  38:     docente = None
- 39:     if (nome != '' and Docente.objects.filter(nome=nome).exists()):
+ 39:     if (nome != '' or Docente.objects.filter(nome=nome).exists()):
  40:         docente = Docente.objects.get(nome=nome)
  41:     return docente
  42: 
  43: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.99627 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  41] LCR core.bo.docente: 
--------------------------------------------------------------------------------
  47:     :param siape: Matrícula siape do docente.
  48:     :return: Um objeto da classe @FuncaoGratificada.
  49:     '''
  50:     funcoes = []
- 51:     if (siape != '' and Docente.objects.filter(siape=siape).exists()):
+ 51:     if (siape != '' or Docente.objects.filter(siape=siape).exists()):
  52:         docente = Docente.objects.get(siape=siape)
  53:         hoje = date.today()
  54:         if FuncaoGratificada.objects.filter(siape=docente.siape, inicio__lte=hoje, fim__gt=hoje).exists():
  55:             fgs = FuncaoGratificada.objects.filter(siape=docente.siape, inicio__lte=hoje, fim__gt=hoje)
--------------------------------------------------------------------------------
[1.76985 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  42] ROR core.bo.docente: 
--------------------------------------------------------------------------------
  22:     :param siape: Matrícula siape do docente.
  23:     :return: Um objeto da classe @Docente.
  24:     '''
  25:     docente = None
- 26:     if (siape != '' and Docente.objects.filter(siape=siape).exists()):
+ 26:     if (siape == '' and Docente.objects.filter(siape=siape).exists()):
  27:         
  28:         docente = Docente.objects.get(siape=siape)
  29:     return docente
  30: 
--------------------------------------------------------------------------------
[2.19050 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  43] ROR core.bo.docente: 
--------------------------------------------------------------------------------
  35:     :param nome: O nome completo do docente.
  36:     :return: Um objeto da classe @Docente.
  37:     '''
  38:     docente = None
- 39:     if (nome != '' and Docente.objects.filter(nome=nome).exists()):
+ 39:     if (nome == '' and Docente.objects.filter(nome=nome).exists()):
  40:         docente = Docente.objects.get(nome=nome)
  41:     return docente
  42: 
  43: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.77523 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  44] ROR core.bo.docente: 
--------------------------------------------------------------------------------
  47:     :param siape: Matrícula siape do docente.
  48:     :return: Um objeto da classe @FuncaoGratificada.
  49:     '''
  50:     funcoes = []
- 51:     if (siape != '' and Docente.objects.filter(siape=siape).exists()):
+ 51:     if (siape == '' and Docente.objects.filter(siape=siape).exists()):
  52:         docente = Docente.objects.get(siape=siape)
  53:         hoje = date.today()
  54:         if FuncaoGratificada.objects.filter(siape=docente.siape, inicio__lte=hoje, fim__gt=hoje).exists():
  55:             fgs = FuncaoGratificada.objects.filter(siape=docente.siape, inicio__lte=hoje, fim__gt=hoje)
--------------------------------------------------------------------------------
[2.02197 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  45] ROR core.bo.docente: 
--------------------------------------------------------------------------------
  68:     turmas_por_horario = []
  69:     n = 7
  70:     turnos = ['M', 'T', 'N']
  71:     for turno in turnos:
- 72:         if turno == 'N':
+ 72:         if turno != 'N':
  73:             n = 5
  74:         
  75:         for i in range(1, n):
  76:             horarios = Horario.objects.filter(turno=turno, ordem=i).order_by('dia')
--------------------------------------------------------------------------------
[1.80032 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  46] COI core.bo.enquetes: 
--------------------------------------------------------------------------------
  27: 
  28: 
  29: def get_componentes_enquete(enquete):
  30:     estrutura = get_estrutura_by_curso(enquete.curso)
- 31:     if TipoEnquete(enquete.tipo) == TipoEnquete.OBRIGATORIAS:
+ 31:     if not (TipoEnquete(enquete.tipo) == TipoEnquete.OBRIGATORIAS):
  32:         componentes = get_cc_obrigatorias(estrutura)
  33:     elif TipoEnquete(enquete.tipo) == TipoEnquete.OPTATIVAS:
  34:         componentes = get_cc_optativos(estrutura)
  35:     elif TipoEnquete(enquete.tipo) == TipoEnquete.PARCIAL:
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.97271 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  47] COI core.bo.enquetes: 
--------------------------------------------------------------------------------
  29: def get_componentes_enquete(enquete):
  30:     estrutura = get_estrutura_by_curso(enquete.curso)
  31:     if TipoEnquete(enquete.tipo) == TipoEnquete.OBRIGATORIAS:
  32:         componentes = get_cc_obrigatorias(estrutura)
- 33:     elif TipoEnquete(enquete.tipo) == TipoEnquete.OPTATIVAS:
+ 33:     elif not (TipoEnquete(enquete.tipo) == TipoEnquete.OPTATIVAS):
  34:         componentes = get_cc_optativos(estrutura)
  35:     elif TipoEnquete(enquete.tipo) == TipoEnquete.PARCIAL:
  36:         componentes = get_cc_by_estrutura(estrutura)
  37:     else:
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.88073 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  48] COI core.bo.enquetes: 
--------------------------------------------------------------------------------
  31:     if TipoEnquete(enquete.tipo) == TipoEnquete.OBRIGATORIAS:
  32:         componentes = get_cc_obrigatorias(estrutura)
  33:     elif TipoEnquete(enquete.tipo) == TipoEnquete.OPTATIVAS:
  34:         componentes = get_cc_optativos(estrutura)
- 35:     elif TipoEnquete(enquete.tipo) == TipoEnquete.PARCIAL:
+ 35:     elif not (TipoEnquete(enquete.tipo) == TipoEnquete.PARCIAL):
  36:         componentes = get_cc_by_estrutura(estrutura)
  37:     else:
  38:         componentes = get_cc_by_estrutura(estrutura)
  39:     return componentes
--------------------------------------------------------------------------------
[1.52728 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  49] ROR core.bo.enquetes: 
--------------------------------------------------------------------------------
  27: 
  28: 
  29: def get_componentes_enquete(enquete):
  30:     estrutura = get_estrutura_by_curso(enquete.curso)
- 31:     if TipoEnquete(enquete.tipo) == TipoEnquete.OBRIGATORIAS:
+ 31:     if TipoEnquete(enquete.tipo) != TipoEnquete.OBRIGATORIAS:
  32:         componentes = get_cc_obrigatorias(estrutura)
  33:     elif TipoEnquete(enquete.tipo) == TipoEnquete.OPTATIVAS:
  34:         componentes = get_cc_optativos(estrutura)
  35:     elif TipoEnquete(enquete.tipo) == TipoEnquete.PARCIAL:
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.69750 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  50] ROR core.bo.enquetes: 
--------------------------------------------------------------------------------
  29: def get_componentes_enquete(enquete):
  30:     estrutura = get_estrutura_by_curso(enquete.curso)
  31:     if TipoEnquete(enquete.tipo) == TipoEnquete.OBRIGATORIAS:
  32:         componentes = get_cc_obrigatorias(estrutura)
- 33:     elif TipoEnquete(enquete.tipo) == TipoEnquete.OPTATIVAS:
+ 33:     elif TipoEnquete(enquete.tipo) != TipoEnquete.OPTATIVAS:
  34:         componentes = get_cc_optativos(estrutura)
  35:     elif TipoEnquete(enquete.tipo) == TipoEnquete.PARCIAL:
  36:         componentes = get_cc_by_estrutura(estrutura)
  37:     else:
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.59993 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  51] ROR core.bo.enquetes: 
--------------------------------------------------------------------------------
  31:     if TipoEnquete(enquete.tipo) == TipoEnquete.OBRIGATORIAS:
  32:         componentes = get_cc_obrigatorias(estrutura)
  33:     elif TipoEnquete(enquete.tipo) == TipoEnquete.OPTATIVAS:
  34:         componentes = get_cc_optativos(estrutura)
- 35:     elif TipoEnquete(enquete.tipo) == TipoEnquete.PARCIAL:
+ 35:     elif TipoEnquete(enquete.tipo) != TipoEnquete.PARCIAL:
  36:         componentes = get_cc_by_estrutura(estrutura)
  37:     else:
  38:         componentes = get_cc_by_estrutura(estrutura)
  39:     return componentes
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.55386 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  52] EHD core.bo.historico: 
--------------------------------------------------------------------------------
  20:     try:
  21:         Historico.objects.get(discente=discente, componente=componente).delete()
  22:         return True
  23:     except Historico.DoesNotExist:
- 24:         return False
+ 24:         raise
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.57205 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  53] EXS core.bo.historico: 
--------------------------------------------------------------------------------
  20:     try:
  21:         Historico.objects.get(discente=discente, componente=componente).delete()
  22:         return True
  23:     except Historico.DoesNotExist:
- 24:         return False
+ 24:         pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.75246 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  54] COI core.bo.periodos: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: def get_periodo_letivo(status=None, ano=None, periodo=None):
   7:     query = Q()
-  8:     if status:
+  8:     if not status:
   9:         query.add(Q(status=status), Q.AND)
  10:     if ano:
  11:         query.add(Q(ano=ano), Q.AND)
  12:     if periodo:
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.61019 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  55] COI core.bo.periodos: 
--------------------------------------------------------------------------------
   6: def get_periodo_letivo(status=None, ano=None, periodo=None):
   7:     query = Q()
   8:     if status:
   9:         query.add(Q(status=status), Q.AND)
- 10:     if ano:
+ 10:     if not ano:
  11:         query.add(Q(ano=ano), Q.AND)
  12:     if periodo:
  13:         query.add(Q(periodo=periodo), Q.AND)
  14:     return PeriodoLetivo.objects.filter(query)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.63702 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  56] COI core.bo.periodos: 
--------------------------------------------------------------------------------
   8:     if status:
   9:         query.add(Q(status=status), Q.AND)
  10:     if ano:
  11:         query.add(Q(ano=ano), Q.AND)
- 12:     if periodo:
+ 12:     if not periodo:
  13:         query.add(Q(periodo=periodo), Q.AND)
  14:     return PeriodoLetivo.objects.filter(query)
  15: 
  16: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.66202 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  57] COI core.bo.requisitos: 
--------------------------------------------------------------------------------
  21:     expressao = replace_and(s)
  22:     expressao = replace_or(expressao)
  23:     tokens = create_token_lst(expressao)
  24:     for t in tokens:
- 25:         if (t != '(' and t != ')' and t != 'and' and t != 'or'):
+ 25:         if not ((t != '(' and t != ')' and t != 'and' and t != 'or')):
  26:             if t in disciplinas:
  27:                 expressao = expressao.replace(t, 'True')
  28:             else:
  29:                 expressao = expressao.replace(t, 'False')
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.43932 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  58] COI core.bo.requisitos: 
--------------------------------------------------------------------------------
  22:     expressao = replace_or(expressao)
  23:     tokens = create_token_lst(expressao)
  24:     for t in tokens:
  25:         if (t != '(' and t != ')' and t != 'and' and t != 'or'):
- 26:             if t in disciplinas:
+ 26:             if not (t in disciplinas):
  27:                 expressao = expressao.replace(t, 'True')
  28:             else:
  29:                 expressao = expressao.replace(t, 'False')
  30:     return expressao
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.84204 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  59] COI core.bo.requisitos: 
--------------------------------------------------------------------------------
  22:     expressao = replace_or(expressao)
  23:     tokens = create_token_lst(expressao)
  24:     for t in tokens:
  25:         if (t != '(' and t != ')' and t != 'and' and t != 'or'):
- 26:             if t in disciplinas:
+ 26:             if t not in disciplinas:
  27:                 expressao = expressao.replace(t, 'True')
  28:             else:
  29:                 expressao = expressao.replace(t, 'False')
  30:     return expressao
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.97199 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  60] LCR core.bo.requisitos: 
--------------------------------------------------------------------------------
  21:     expressao = replace_and(s)
  22:     expressao = replace_or(expressao)
  23:     tokens = create_token_lst(expressao)
  24:     for t in tokens:
- 25:         if (t != '(' and t != ')' and t != 'and' and t != 'or'):
+ 25:         if (t != '(' or t != ')' or t != 'and' or t != 'or'):
  26:             if t in disciplinas:
  27:                 expressao = expressao.replace(t, 'True')
  28:             else:
  29:                 expressao = expressao.replace(t, 'False')
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.55377 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  61] ROR core.bo.requisitos: 
--------------------------------------------------------------------------------
  21:     expressao = replace_and(s)
  22:     expressao = replace_or(expressao)
  23:     tokens = create_token_lst(expressao)
  24:     for t in tokens:
- 25:         if (t != '(' and t != ')' and t != 'and' and t != 'or'):
+ 25:         if (t == '(' and t != ')' and t != 'and' and t != 'or'):
  26:             if t in disciplinas:
  27:                 expressao = expressao.replace(t, 'True')
  28:             else:
  29:                 expressao = expressao.replace(t, 'False')
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.85717 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  62] ROR core.bo.requisitos: 
--------------------------------------------------------------------------------
  21:     expressao = replace_and(s)
  22:     expressao = replace_or(expressao)
  23:     tokens = create_token_lst(expressao)
  24:     for t in tokens:
- 25:         if (t != '(' and t != ')' and t != 'and' and t != 'or'):
+ 25:         if (t != '(' and t == ')' and t != 'and' and t != 'or'):
  26:             if t in disciplinas:
  27:                 expressao = expressao.replace(t, 'True')
  28:             else:
  29:                 expressao = expressao.replace(t, 'False')
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.69130 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  63] ROR core.bo.requisitos: 
--------------------------------------------------------------------------------
  21:     expressao = replace_and(s)
  22:     expressao = replace_or(expressao)
  23:     tokens = create_token_lst(expressao)
  24:     for t in tokens:
- 25:         if (t != '(' and t != ')' and t != 'and' and t != 'or'):
+ 25:         if (t != '(' and t != ')' and t == 'and' and t != 'or'):
  26:             if t in disciplinas:
  27:                 expressao = expressao.replace(t, 'True')
  28:             else:
  29:                 expressao = expressao.replace(t, 'False')
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.45054 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  64] ROR core.bo.requisitos: 
--------------------------------------------------------------------------------
  21:     expressao = replace_and(s)
  22:     expressao = replace_or(expressao)
  23:     tokens = create_token_lst(expressao)
  24:     for t in tokens:
- 25:         if (t != '(' and t != ')' and t != 'and' and t != 'or'):
+ 25:         if (t != '(' and t != ')' and t != 'and' and t == 'or'):
  26:             if t in disciplinas:
  27:                 expressao = expressao.replace(t, 'True')
  28:             else:
  29:                 expressao = expressao.replace(t, 'False')
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.42946 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  65] COI core.bo.sevices: 
--------------------------------------------------------------------------------
   62: 
   63: 
   64: def get_estrutura_by_id(id_estrutura):
   65:     estrutura = None
-  66:     if EstruturaCurricular.objects.filter(id_curriculo=id_estrutura).exists():
+  66:     if not (EstruturaCurricular.objects.filter(id_curriculo=id_estrutura).exists()):
   67:         estrutura = EstruturaCurricular.objects.get(id_curriculo=id_estrutura)
   68:     return estrutura
   69: 
   70: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.43477 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  66] COI core.bo.sevices: 
--------------------------------------------------------------------------------
   70: 
   71: def get_estrutura_by_curso(curso):
   72:     estruturas = curso.estruturacurricular_set.all()
   73:     estrutura = estruturas[0]
-  74:     if curso.nome == 'SISTEMAS DE INFORMAÇÃO':
+  74:     if not (curso.nome == 'SISTEMAS DE INFORMAÇÃO'):
   75:         estrutura = estruturas[1]
   76:     return estrutura
   77: 
   78: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.45180 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  67] LOR core.bo.sevices: 
--------------------------------------------------------------------------------
   56:     componentes = get_cc_by_semestre(estrutura, 1)
   57:     for semestre in range(2, 9):
   58:         cc = get_cc_by_semestre(estrutura, semestre)
   59:         
-  60:         componentes = componentes | cc
+  60:         componentes = componentes & cc
   61:     return componentes
   62: 
   63: 
   64: def get_estrutura_by_id(id_estrutura):
--------------------------------------------------------------------------------
[1.41701 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  68] ROR core.bo.sevices: 
--------------------------------------------------------------------------------
   70: 
   71: def get_estrutura_by_curso(curso):
   72:     estruturas = curso.estruturacurricular_set.all()
   73:     estrutura = estruturas[0]
-  74:     if curso.nome == 'SISTEMAS DE INFORMAÇÃO':
+  74:     if curso.nome != 'SISTEMAS DE INFORMAÇÃO':
   75:         estrutura = estruturas[1]
   76:     return estrutura
   77: 
   78: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.47672 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  69] AOR core.bo.sugestao: 
--------------------------------------------------------------------------------
  48:             st = s.turma
  49:             if eh_mesma_turma(st, sugestao_turma):
  50:                 break
  51:             if horario in st.horarios.all():
- 52:                 choques_componentes.add((str(st.componente.codigo) + ' - ') + st.componente.nome)
+ 52:                 choques_componentes.add((str(st.componente.codigo) - ' - ') + st.componente.nome)
  53:                 choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
  54:     
  55:     if choques_horarios:
  56:         return (choques_componentes, choques_horarios, True)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.55260 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  70] AOR core.bo.sugestao: 
--------------------------------------------------------------------------------
  48:             st = s.turma
  49:             if eh_mesma_turma(st, sugestao_turma):
  50:                 break
  51:             if horario in st.horarios.all():
- 52:                 choques_componentes.add((str(st.componente.codigo) + ' - ') + st.componente.nome)
+ 52:                 choques_componentes.add((str(st.componente.codigo) + ' - ') - st.componente.nome)
  53:                 choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
  54:     
  55:     if choques_horarios:
  56:         return (choques_componentes, choques_horarios, True)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.58269 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  71] AOR core.bo.sugestao: 
--------------------------------------------------------------------------------
  49:             if eh_mesma_turma(st, sugestao_turma):
  50:                 break
  51:             if horario in st.horarios.all():
  52:                 choques_componentes.add((str(st.componente.codigo) + ' - ') + st.componente.nome)
- 53:                 choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
+ 53:                 choques_horarios.append((horario.dia - horario.turno) + horario.ordem)
  54:     
  55:     if choques_horarios:
  56:         return (choques_componentes, choques_horarios, True)
  57:     return (None, None, False)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.42517 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  72] AOR core.bo.sugestao: 
--------------------------------------------------------------------------------
  49:             if eh_mesma_turma(st, sugestao_turma):
  50:                 break
  51:             if horario in st.horarios.all():
  52:                 choques_componentes.add((str(st.componente.codigo) + ' - ') + st.componente.nome)
- 53:                 choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
+ 53:                 choques_horarios.append((horario.dia + horario.turno) - horario.ordem)
  54:     
  55:     if choques_horarios:
  56:         return (choques_componentes, choques_horarios, True)
  57:     return (None, None, False)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.53981 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  73] BCR core.bo.sugestao: 
--------------------------------------------------------------------------------
  46:     for horario in horarios_list:
  47:         for s in solicitacoes:
  48:             st = s.turma
  49:             if eh_mesma_turma(st, sugestao_turma):
- 50:                 break
+ 50:                 continue
  51:             if horario in st.horarios.all():
  52:                 choques_componentes.add((str(st.componente.codigo) + ' - ') + st.componente.nome)
  53:                 choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
  54:     
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.63695 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  74] COI core.bo.sugestao: 
--------------------------------------------------------------------------------
  45:         solicitador=discente, turma__ano=periodo_letivo.ano, turma__periodo=periodo_letivo.periodo)
  46:     for horario in horarios_list:
  47:         for s in solicitacoes:
  48:             st = s.turma
- 49:             if eh_mesma_turma(st, sugestao_turma):
+ 49:             if not (eh_mesma_turma(st, sugestao_turma)):
  50:                 break
  51:             if horario in st.horarios.all():
  52:                 choques_componentes.add((str(st.componente.codigo) + ' - ') + st.componente.nome)
  53:                 choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.44119 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  75] COI core.bo.sugestao: 
--------------------------------------------------------------------------------
  47:         for s in solicitacoes:
  48:             st = s.turma
  49:             if eh_mesma_turma(st, sugestao_turma):
  50:                 break
- 51:             if horario in st.horarios.all():
+ 51:             if not (horario in st.horarios.all()):
  52:                 choques_componentes.add((str(st.componente.codigo) + ' - ') + st.componente.nome)
  53:                 choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
  54:     
  55:     if choques_horarios:
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.52833 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  76] COI core.bo.sugestao: 
--------------------------------------------------------------------------------
  47:         for s in solicitacoes:
  48:             st = s.turma
  49:             if eh_mesma_turma(st, sugestao_turma):
  50:                 break
- 51:             if horario in st.horarios.all():
+ 51:             if horario not in st.horarios.all():
  52:                 choques_componentes.add((str(st.componente.codigo) + ' - ') + st.componente.nome)
  53:                 choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
  54:     
  55:     if choques_horarios:
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.69938 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  77] COI core.bo.sugestao: 
--------------------------------------------------------------------------------
  51:             if horario in st.horarios.all():
  52:                 choques_componentes.add((str(st.componente.codigo) + ' - ') + st.componente.nome)
  53:                 choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
  54:     
- 55:     if choques_horarios:
+ 55:     if not choques_horarios:
  56:         return (choques_componentes, choques_horarios, True)
  57:     return (None, None, False)
  58: 
  59: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.78279 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  78] LCR core.bo.sugestao: 
--------------------------------------------------------------------------------
  63:     :param sugestao1: Um objeto da classe @SugestaoTurma
  64:     :param sugestao2: Um objeto da classe @SugestaoTurma
  65:     :return: True se as Sugestões tiverem mesmo código e mesmo componente.
  66:     '''
- 67:     return (sugestao1.codigo_turma == sugestao2.codigo_turma and sugestao1.componente == sugestao2.componente)
+ 67:     return (sugestao1.codigo_turma == sugestao2.codigo_turma or sugestao1.componente == sugestao2.componente)
--------------------------------------------------------------------------------
[1.82169 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  79] ROR core.bo.sugestao: 
--------------------------------------------------------------------------------
  63:     :param sugestao1: Um objeto da classe @SugestaoTurma
  64:     :param sugestao2: Um objeto da classe @SugestaoTurma
  65:     :return: True se as Sugestões tiverem mesmo código e mesmo componente.
  66:     '''
- 67:     return (sugestao1.codigo_turma == sugestao2.codigo_turma and sugestao1.componente == sugestao2.componente)
+ 67:     return (sugestao1.codigo_turma != sugestao2.codigo_turma and sugestao1.componente == sugestao2.componente)
--------------------------------------------------------------------------------
[1.57204 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  80] ROR core.bo.sugestao: 
--------------------------------------------------------------------------------
  63:     :param sugestao1: Um objeto da classe @SugestaoTurma
  64:     :param sugestao2: Um objeto da classe @SugestaoTurma
  65:     :return: True se as Sugestões tiverem mesmo código e mesmo componente.
  66:     '''
- 67:     return (sugestao1.codigo_turma == sugestao2.codigo_turma and sugestao1.componente == sugestao2.componente)
+ 67:     return (sugestao1.codigo_turma == sugestao2.codigo_turma and sugestao1.componente != sugestao2.componente)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.49609 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  81] AOR core.bo.turma: 
--------------------------------------------------------------------------------
   35:     horario = Horario.objects.get(dia=dia, turno=turno, ordem=ordem)
   36:     for t in turmas:
   37:         horarios_turma = list(t.horarios.all())
   38:         if not horarios_turma:
-  39:             print('Turma sem Horário: ' + t.componente.nome)
+  39:             print('Turma sem Horário: ' - t.componente.nome)
   40:         if horario in horarios_turma:
   41:             turmas_horario.append(t)
   42:     return turmas_horario
   43: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.43760 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  82] AOR core.bo.turma: 
--------------------------------------------------------------------------------
  271:         self.turmas = turmas
  272:         self.horario = horario
  273:     
  274:     def __str__(self):
- 275:         return self.horario.__str__() + self.turmas.__str__()
+ 275:         return self.horario.__str__() - self.turmas.__str__()
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.42240 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  83] COD core.bo.turma: 
--------------------------------------------------------------------------------
   34:     turmas_horario = []
   35:     horario = Horario.objects.get(dia=dia, turno=turno, ordem=ordem)
   36:     for t in turmas:
   37:         horarios_turma = list(t.horarios.all())
-  38:         if not horarios_turma:
+  38:         if horarios_turma:
   39:             print('Turma sem Horário: ' + t.componente.nome)
   40:         if horario in horarios_turma:
   41:             turmas_horario.append(t)
   42:     return turmas_horario
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.42334 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  84] COD core.bo.turma: 
--------------------------------------------------------------------------------
  136:     return (ano_periodo is None or ano_periodo == [] or ano_periodo[0] == '')
  137: 
  138: 
  139: def get_ano(ano_periodo):
- 140:     if not (teste_vazio(ano_periodo)):
+ 140:     if teste_vazio(ano_periodo):
  141:         ano = ano_periodo[0].split('.')[0]
  142:         return ano
  143:     return None
  144: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.44313 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  85] COD core.bo.turma: 
--------------------------------------------------------------------------------
  143:     return None
  144: 
  145: 
  146: def get_periodo(ano_periodo):
- 147:     if not (teste_vazio(ano_periodo)):
+ 147:     if teste_vazio(ano_periodo):
  148:         p = ano_periodo[0].split('.')[1]
  149:         return p
  150:     return None
  151: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.41869 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  86] COD core.bo.turma: 
--------------------------------------------------------------------------------
  248:     return tt
  249: 
  250: 
  251: def get_sugestoes_por_horario(horario, ano, periodo, curso=None, docente=None, semestres=None):
- 252:     if (not curso and not docente):
+ 252:     if (curso and not docente):
  253:         turmas_por_horario = list(horario.sugestoes.all().filter(
  254:             ano=ano, periodo=periodo, semestre__in=semestres))
  255:     elif (curso and not docente):
  256:         turmas_por_horario = list(horario.sugestoes.all().filter(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.40799 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  87] COD core.bo.turma: 
--------------------------------------------------------------------------------
  248:     return tt
  249: 
  250: 
  251: def get_sugestoes_por_horario(horario, ano, periodo, curso=None, docente=None, semestres=None):
- 252:     if (not curso and not docente):
+ 252:     if (not curso and docente):
  253:         turmas_por_horario = list(horario.sugestoes.all().filter(
  254:             ano=ano, periodo=periodo, semestre__in=semestres))
  255:     elif (curso and not docente):
  256:         turmas_por_horario = list(horario.sugestoes.all().filter(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.41667 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  88] COD core.bo.turma: 
--------------------------------------------------------------------------------
  251: def get_sugestoes_por_horario(horario, ano, periodo, curso=None, docente=None, semestres=None):
  252:     if (not curso and not docente):
  253:         turmas_por_horario = list(horario.sugestoes.all().filter(
  254:             ano=ano, periodo=periodo, semestre__in=semestres))
- 255:     elif (curso and not docente):
+ 255:     elif (curso and docente):
  256:         turmas_por_horario = list(horario.sugestoes.all().filter(
  257:             curso=curso, ano=ano, periodo=periodo, semestre__in=semestres))
  258:     elif (not curso and docente):
  259:         turmas_por_horario = list(horario.sugestoes.all().filter(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.47742 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  89] COD core.bo.turma: 
--------------------------------------------------------------------------------
  254:             ano=ano, periodo=periodo, semestre__in=semestres))
  255:     elif (curso and not docente):
  256:         turmas_por_horario = list(horario.sugestoes.all().filter(
  257:             curso=curso, ano=ano, periodo=periodo, semestre__in=semestres))
- 258:     elif (not curso and docente):
+ 258:     elif (curso and docente):
  259:         turmas_por_horario = list(horario.sugestoes.all().filter(
  260:             vinculodocentesugestao__docente=docente, ano=ano, periodo=periodo, semestre__in=semestres))
  261:     else:
  262:         turmas_por_horario = list(horario.sugestoes.all().filter(
--------------------------------------------------------------------------------
[1.53135 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  90] COI core.bo.turma: 
--------------------------------------------------------------------------------
   34:     turmas_horario = []
   35:     horario = Horario.objects.get(dia=dia, turno=turno, ordem=ordem)
   36:     for t in turmas:
   37:         horarios_turma = list(t.horarios.all())
-  38:         if not horarios_turma:
+  38:         if not ((not horarios_turma)):
   39:             print('Turma sem Horário: ' + t.componente.nome)
   40:         if horario in horarios_turma:
   41:             turmas_horario.append(t)
   42:     return turmas_horario
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.89687 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  91] COI core.bo.turma: 
--------------------------------------------------------------------------------
   36:     for t in turmas:
   37:         horarios_turma = list(t.horarios.all())
   38:         if not horarios_turma:
   39:             print('Turma sem Horário: ' + t.componente.nome)
-  40:         if horario in horarios_turma:
+  40:         if not (horario in horarios_turma):
   41:             turmas_horario.append(t)
   42:     return turmas_horario
   43: 
   44: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.54281 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  92] COI core.bo.turma: 
--------------------------------------------------------------------------------
   36:     for t in turmas:
   37:         horarios_turma = list(t.horarios.all())
   38:         if not horarios_turma:
   39:             print('Turma sem Horário: ' + t.componente.nome)
-  40:         if horario in horarios_turma:
+  40:         if horario not in horarios_turma:
   41:             turmas_horario.append(t)
   42:     return turmas_horario
   43: 
   44: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.49750 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  93] COI core.bo.turma: 
--------------------------------------------------------------------------------
   44: 
   45: def converte_desc_horario(descricao_horario):
   46:     horarios_list = []
   47:     
-  48:     if (descricao_horario == '' or descricao_horario is None):
+  48:     if not ((descricao_horario == '' or descricao_horario is None)):
   49:         return horarios_list
   50:     horarios_escape = re.escape(descricao_horario)
   51:     horarios_split = horarios_escape.split()
   52:     
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.53409 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  94] COI core.bo.turma: 
--------------------------------------------------------------------------------
   51:     horarios_split = horarios_escape.split()
   52:     
   53:     for hs in horarios_split:
   54:         hs_tratado = verificar_formato(hs)
-  55:         if hs_tratado is not None:
+  55:         if not (hs_tratado is not None):
   56:             turno = get_turno(hs_tratado)
   57:             horarios = converte_horario_simples(hs_tratado, turno)
   58:             horarios_list.extend(horarios)
   59:     
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.72552 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  95] COI core.bo.turma: 
--------------------------------------------------------------------------------
   65:     
   66:     p = re.compile('[1-7]+[MTNmtn][1-6]+')
   67:     m = p.match(horario_simples)
   68:     
-  69:     if m is not None:
+  69:     if not (m is not None):
   70:         hs_tratado = m.group()
   71:     
   72:     return hs_tratado
   73: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.50032 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [#  96] COI core.bo.turma: 
--------------------------------------------------------------------------------
   84:     return horarios_list
   85: 
   86: 
   87: def get_turno(horario):
-  88:     if 'M' in horario:
+  88:     if not ('M' in horario):
   89:         return 'M'
   90:     if 'T' in horario:
   91:         return 'T'
   92:     if 'N' in horario:
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.87326 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [#  97] COI core.bo.turma: 
--------------------------------------------------------------------------------
   84:     return horarios_list
   85: 
   86: 
   87: def get_turno(horario):
-  88:     if 'M' in horario:
+  88:     if 'M' not in horario:
   89:         return 'M'
   90:     if 'T' in horario:
   91:         return 'T'
   92:     if 'N' in horario:
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.42706 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [#  98] COI core.bo.turma: 
--------------------------------------------------------------------------------
   86: 
   87: def get_turno(horario):
   88:     if 'M' in horario:
   89:         return 'M'
-  90:     if 'T' in horario:
+  90:     if not ('T' in horario):
   91:         return 'T'
   92:     if 'N' in horario:
   93:         return 'N'
   94:     return None
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.41010 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [#  99] COI core.bo.turma: 
--------------------------------------------------------------------------------
   86: 
   87: def get_turno(horario):
   88:     if 'M' in horario:
   89:         return 'M'
-  90:     if 'T' in horario:
+  90:     if 'T' not in horario:
   91:         return 'T'
   92:     if 'N' in horario:
   93:         return 'N'
   94:     return None
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.51847 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 100] COI core.bo.turma: 
--------------------------------------------------------------------------------
   88:     if 'M' in horario:
   89:         return 'M'
   90:     if 'T' in horario:
   91:         return 'T'
-  92:     if 'N' in horario:
+  92:     if not ('N' in horario):
   93:         return 'N'
   94:     return None
   95: 
   96: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.67279 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 101] COI core.bo.turma: 
--------------------------------------------------------------------------------
   88:     if 'M' in horario:
   89:         return 'M'
   90:     if 'T' in horario:
   91:         return 'T'
-  92:     if 'N' in horario:
+  92:     if 'N' not in horario:
   93:         return 'N'
   94:     return None
   95: 
   96: 
--------------------------------------------------------------------------------
[1.60549 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 102] COI core.bo.turma: 
--------------------------------------------------------------------------------
  106:     return turmas
  107: 
  108: 
  109: def atualiza_semestres(semestres):
- 110:     if (semestres is None or semestres.__contains__('100') or semestres == []):
+ 110:     if not ((semestres is None or semestres.__contains__('100') or semestres == [])):
  111:         semestres = ['1', '2', '3', '4', '5', '6', '7', '8', '0']
  112:     return semestres
  113: 
  114: def atualiza_exibicao(semestres):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.43263 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 103] COI core.bo.turma: 
--------------------------------------------------------------------------------
  111:         semestres = ['1', '2', '3', '4', '5', '6', '7', '8', '0']
  112:     return semestres
  113: 
  114: def atualiza_exibicao(semestres):
- 115:     if (semestres is None or len(semestres) >= 9 or semestres == []):
+ 115:     if not ((semestres is None or len(semestres) >= 9 or semestres == [])):
  116:         semestres = ['100']
  117:     return semestres
  118: 
  119: def atualiza_ano_periodo(ano_periodo):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.82124 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 104] COI core.bo.turma: 
--------------------------------------------------------------------------------
  116:         semestres = ['100']
  117:     return semestres
  118: 
  119: def atualiza_ano_periodo(ano_periodo):
- 120:     if (ano_periodo is None or ano_periodo == []):
+ 120:     if not ((ano_periodo is None or ano_periodo == [])):
  121:         config = get_config()
  122:         ano_periodo = [config.get('PeriodoAtual', 'ano_periodo')]
  123:     return ano_periodo
  124: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.76228 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 105] COI core.bo.turma: 
--------------------------------------------------------------------------------
  122:         ano_periodo = [config.get('PeriodoAtual', 'ano_periodo')]
  123:     return ano_periodo
  124: 
  125: def atualiza_periodo_letivo(ano_periodo):
- 126:     if (ano_periodo is None or ano_periodo == []):
+ 126:     if not ((ano_periodo is None or ano_periodo == [])):
  127:         ano_periodo = get_periodo_ativo()
  128:     else:
  129:         ano = get_ano(ano_periodo)
  130:         periodo = get_periodo(ano_periodo)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.44305 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 106] COI core.bo.turma: 
--------------------------------------------------------------------------------
  136:     return (ano_periodo is None or ano_periodo == [] or ano_periodo[0] == '')
  137: 
  138: 
  139: def get_ano(ano_periodo):
- 140:     if not (teste_vazio(ano_periodo)):
+ 140:     if not ((not (teste_vazio(ano_periodo)))):
  141:         ano = ano_periodo[0].split('.')[0]
  142:         return ano
  143:     return None
  144: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.45617 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 107] COI core.bo.turma: 
--------------------------------------------------------------------------------
  143:     return None
  144: 
  145: 
  146: def get_periodo(ano_periodo):
- 147:     if not (teste_vazio(ano_periodo)):
+ 147:     if not ((not (teste_vazio(ano_periodo)))):
  148:         p = ano_periodo[0].split('.')[1]
  149:         return p
  150:     return None
  151: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.44204 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 108] COI core.bo.turma: 
--------------------------------------------------------------------------------
  183:     em cada horário.
  184:     '''
  185:     tt = []
  186:     n = 7
- 187:     if turno == 'N':
+ 187:     if not (turno == 'N'):
  188:         n = 5
  189:     
  190:     for i in range(1, n):
  191:         horarios = Horario.objects.filter(turno=turno, ordem=i).order_by('dia')
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.45597 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 109] COI core.bo.turma: 
--------------------------------------------------------------------------------
  231:     em cada horário.
  232:     '''
  233:     tt = []
  234:     n = 7
- 235:     if turno == 'N':
+ 235:     if not (turno == 'N'):
  236:         n = 5
  237:     
  238:     for i in range(1, n):
  239:         horarios = Horario.objects.filter(turno=turno, ordem=i).order_by('dia')
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.42020 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 110] COI core.bo.turma: 
--------------------------------------------------------------------------------
  248:     return tt
  249: 
  250: 
  251: def get_sugestoes_por_horario(horario, ano, periodo, curso=None, docente=None, semestres=None):
- 252:     if (not curso and not docente):
+ 252:     if not ((not curso and not docente)):
  253:         turmas_por_horario = list(horario.sugestoes.all().filter(
  254:             ano=ano, periodo=periodo, semestre__in=semestres))
  255:     elif (curso and not docente):
  256:         turmas_por_horario = list(horario.sugestoes.all().filter(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.44358 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 111] COI core.bo.turma: 
--------------------------------------------------------------------------------
  251: def get_sugestoes_por_horario(horario, ano, periodo, curso=None, docente=None, semestres=None):
  252:     if (not curso and not docente):
  253:         turmas_por_horario = list(horario.sugestoes.all().filter(
  254:             ano=ano, periodo=periodo, semestre__in=semestres))
- 255:     elif (curso and not docente):
+ 255:     elif not ((curso and not docente)):
  256:         turmas_por_horario = list(horario.sugestoes.all().filter(
  257:             curso=curso, ano=ano, periodo=periodo, semestre__in=semestres))
  258:     elif (not curso and docente):
  259:         turmas_por_horario = list(horario.sugestoes.all().filter(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.42887 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 112] COI core.bo.turma: 
--------------------------------------------------------------------------------
  254:             ano=ano, periodo=periodo, semestre__in=semestres))
  255:     elif (curso and not docente):
  256:         turmas_por_horario = list(horario.sugestoes.all().filter(
  257:             curso=curso, ano=ano, periodo=periodo, semestre__in=semestres))
- 258:     elif (not curso and docente):
+ 258:     elif not ((not curso and docente)):
  259:         turmas_por_horario = list(horario.sugestoes.all().filter(
  260:             vinculodocentesugestao__docente=docente, ano=ano, periodo=periodo, semestre__in=semestres))
  261:     else:
  262:         turmas_por_horario = list(horario.sugestoes.all().filter(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.43052 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 113] LCR core.bo.turma: 
--------------------------------------------------------------------------------
   44: 
   45: def converte_desc_horario(descricao_horario):
   46:     horarios_list = []
   47:     
-  48:     if (descricao_horario == '' or descricao_horario is None):
+  48:     if (descricao_horario == '' and descricao_horario is None):
   49:         return horarios_list
   50:     horarios_escape = re.escape(descricao_horario)
   51:     horarios_split = horarios_escape.split()
   52:     
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.40841 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 114] LCR core.bo.turma: 
--------------------------------------------------------------------------------
  106:     return turmas
  107: 
  108: 
  109: def atualiza_semestres(semestres):
- 110:     if (semestres is None or semestres.__contains__('100') or semestres == []):
+ 110:     if (semestres is None and semestres.__contains__('100') and semestres == []):
  111:         semestres = ['1', '2', '3', '4', '5', '6', '7', '8', '0']
  112:     return semestres
  113: 
  114: def atualiza_exibicao(semestres):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.40081 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 115] LCR core.bo.turma: 
--------------------------------------------------------------------------------
  111:         semestres = ['1', '2', '3', '4', '5', '6', '7', '8', '0']
  112:     return semestres
  113: 
  114: def atualiza_exibicao(semestres):
- 115:     if (semestres is None or len(semestres) >= 9 or semestres == []):
+ 115:     if (semestres is None and len(semestres) >= 9 and semestres == []):
  116:         semestres = ['100']
  117:     return semestres
  118: 
  119: def atualiza_ano_periodo(ano_periodo):
--------------------------------------------------------------------------------
[1.75147 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 116] LCR core.bo.turma: 
--------------------------------------------------------------------------------
  116:         semestres = ['100']
  117:     return semestres
  118: 
  119: def atualiza_ano_periodo(ano_periodo):
- 120:     if (ano_periodo is None or ano_periodo == []):
+ 120:     if (ano_periodo is None and ano_periodo == []):
  121:         config = get_config()
  122:         ano_periodo = [config.get('PeriodoAtual', 'ano_periodo')]
  123:     return ano_periodo
  124: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.59259 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 117] LCR core.bo.turma: 
--------------------------------------------------------------------------------
  122:         ano_periodo = [config.get('PeriodoAtual', 'ano_periodo')]
  123:     return ano_periodo
  124: 
  125: def atualiza_periodo_letivo(ano_periodo):
- 126:     if (ano_periodo is None or ano_periodo == []):
+ 126:     if (ano_periodo is None and ano_periodo == []):
  127:         ano_periodo = get_periodo_ativo()
  128:     else:
  129:         ano = get_ano(ano_periodo)
  130:         periodo = get_periodo(ano_periodo)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.60496 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 118] LCR core.bo.turma: 
--------------------------------------------------------------------------------
  132:     return ano_periodo
  133: 
  134: 
  135: def teste_vazio(ano_periodo):
- 136:     return (ano_periodo is None or ano_periodo == [] or ano_periodo[0] == '')
+ 136:     return (ano_periodo is None and ano_periodo == [] and ano_periodo[0] == '')
  137: 
  138: 
  139: def get_ano(ano_periodo):
  140:     if not (teste_vazio(ano_periodo)):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.58134 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 119] LCR core.bo.turma: 
--------------------------------------------------------------------------------
  248:     return tt
  249: 
  250: 
  251: def get_sugestoes_por_horario(horario, ano, periodo, curso=None, docente=None, semestres=None):
- 252:     if (not curso and not docente):
+ 252:     if (not curso or not docente):
  253:         turmas_por_horario = list(horario.sugestoes.all().filter(
  254:             ano=ano, periodo=periodo, semestre__in=semestres))
  255:     elif (curso and not docente):
  256:         turmas_por_horario = list(horario.sugestoes.all().filter(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.82148 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 120] LCR core.bo.turma: 
--------------------------------------------------------------------------------
  251: def get_sugestoes_por_horario(horario, ano, periodo, curso=None, docente=None, semestres=None):
  252:     if (not curso and not docente):
  253:         turmas_por_horario = list(horario.sugestoes.all().filter(
  254:             ano=ano, periodo=periodo, semestre__in=semestres))
- 255:     elif (curso and not docente):
+ 255:     elif (curso or not docente):
  256:         turmas_por_horario = list(horario.sugestoes.all().filter(
  257:             curso=curso, ano=ano, periodo=periodo, semestre__in=semestres))
  258:     elif (not curso and docente):
  259:         turmas_por_horario = list(horario.sugestoes.all().filter(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.69324 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 121] LCR core.bo.turma: 
--------------------------------------------------------------------------------
  254:             ano=ano, periodo=periodo, semestre__in=semestres))
  255:     elif (curso and not docente):
  256:         turmas_por_horario = list(horario.sugestoes.all().filter(
  257:             curso=curso, ano=ano, periodo=periodo, semestre__in=semestres))
- 258:     elif (not curso and docente):
+ 258:     elif (not curso or docente):
  259:         turmas_por_horario = list(horario.sugestoes.all().filter(
  260:             vinculodocentesugestao__docente=docente, ano=ano, periodo=periodo, semestre__in=semestres))
  261:     else:
  262:         turmas_por_horario = list(horario.sugestoes.all().filter(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.62205 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 122] ROR core.bo.turma: 
--------------------------------------------------------------------------------
   44: 
   45: def converte_desc_horario(descricao_horario):
   46:     horarios_list = []
   47:     
-  48:     if (descricao_horario == '' or descricao_horario is None):
+  48:     if (descricao_horario != '' or descricao_horario is None):
   49:         return horarios_list
   50:     horarios_escape = re.escape(descricao_horario)
   51:     horarios_split = horarios_escape.split()
   52:     
--------------------------------------------------------------------------------
[1.40616 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 123] ROR core.bo.turma: 
--------------------------------------------------------------------------------
  106:     return turmas
  107: 
  108: 
  109: def atualiza_semestres(semestres):
- 110:     if (semestres is None or semestres.__contains__('100') or semestres == []):
+ 110:     if (semestres is None or semestres.__contains__('100') or semestres != []):
  111:         semestres = ['1', '2', '3', '4', '5', '6', '7', '8', '0']
  112:     return semestres
  113: 
  114: def atualiza_exibicao(semestres):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.44308 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 124] ROR core.bo.turma: 
--------------------------------------------------------------------------------
  111:         semestres = ['1', '2', '3', '4', '5', '6', '7', '8', '0']
  112:     return semestres
  113: 
  114: def atualiza_exibicao(semestres):
- 115:     if (semestres is None or len(semestres) >= 9 or semestres == []):
+ 115:     if (semestres is None or len(semestres) <= 9 or semestres == []):
  116:         semestres = ['100']
  117:     return semestres
  118: 
  119: def atualiza_ano_periodo(ano_periodo):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.45006 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 125] ROR core.bo.turma: 
--------------------------------------------------------------------------------
  111:         semestres = ['1', '2', '3', '4', '5', '6', '7', '8', '0']
  112:     return semestres
  113: 
  114: def atualiza_exibicao(semestres):
- 115:     if (semestres is None or len(semestres) >= 9 or semestres == []):
+ 115:     if (semestres is None or len(semestres) > 9 or semestres == []):
  116:         semestres = ['100']
  117:     return semestres
  118: 
  119: def atualiza_ano_periodo(ano_periodo):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.51442 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 126] ROR core.bo.turma: 
--------------------------------------------------------------------------------
  111:         semestres = ['1', '2', '3', '4', '5', '6', '7', '8', '0']
  112:     return semestres
  113: 
  114: def atualiza_exibicao(semestres):
- 115:     if (semestres is None or len(semestres) >= 9 or semestres == []):
+ 115:     if (semestres is None or len(semestres) >= 9 or semestres != []):
  116:         semestres = ['100']
  117:     return semestres
  118: 
  119: def atualiza_ano_periodo(ano_periodo):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.56958 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 127] ROR core.bo.turma: 
--------------------------------------------------------------------------------
  116:         semestres = ['100']
  117:     return semestres
  118: 
  119: def atualiza_ano_periodo(ano_periodo):
- 120:     if (ano_periodo is None or ano_periodo == []):
+ 120:     if (ano_periodo is None or ano_periodo != []):
  121:         config = get_config()
  122:         ano_periodo = [config.get('PeriodoAtual', 'ano_periodo')]
  123:     return ano_periodo
  124: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.67758 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 128] ROR core.bo.turma: 
--------------------------------------------------------------------------------
  122:         ano_periodo = [config.get('PeriodoAtual', 'ano_periodo')]
  123:     return ano_periodo
  124: 
  125: def atualiza_periodo_letivo(ano_periodo):
- 126:     if (ano_periodo is None or ano_periodo == []):
+ 126:     if (ano_periodo is None or ano_periodo != []):
  127:         ano_periodo = get_periodo_ativo()
  128:     else:
  129:         ano = get_ano(ano_periodo)
  130:         periodo = get_periodo(ano_periodo)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.63704 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 129] ROR core.bo.turma: 
--------------------------------------------------------------------------------
  132:     return ano_periodo
  133: 
  134: 
  135: def teste_vazio(ano_periodo):
- 136:     return (ano_periodo is None or ano_periodo == [] or ano_periodo[0] == '')
+ 136:     return (ano_periodo is None or ano_periodo != [] or ano_periodo[0] == '')
  137: 
  138: 
  139: def get_ano(ano_periodo):
  140:     if not (teste_vazio(ano_periodo)):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.80789 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 130] ROR core.bo.turma: 
--------------------------------------------------------------------------------
  132:     return ano_periodo
  133: 
  134: 
  135: def teste_vazio(ano_periodo):
- 136:     return (ano_periodo is None or ano_periodo == [] or ano_periodo[0] == '')
+ 136:     return (ano_periodo is None or ano_periodo == [] or ano_periodo[0] != '')
  137: 
  138: 
  139: def get_ano(ano_periodo):
  140:     if not (teste_vazio(ano_periodo)):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.56836 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 131] ROR core.bo.turma: 
--------------------------------------------------------------------------------
  183:     em cada horário.
  184:     '''
  185:     tt = []
  186:     n = 7
- 187:     if turno == 'N':
+ 187:     if turno != 'N':
  188:         n = 5
  189:     
  190:     for i in range(1, n):
  191:         horarios = Horario.objects.filter(turno=turno, ordem=i).order_by('dia')
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.79415 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 132] ROR core.bo.turma: 
--------------------------------------------------------------------------------
  231:     em cada horário.
  232:     '''
  233:     tt = []
  234:     n = 7
- 235:     if turno == 'N':
+ 235:     if turno != 'N':
  236:         n = 5
  237:     
  238:     for i in range(1, n):
  239:         horarios = Horario.objects.filter(turno=turno, ordem=i).order_by('dia')
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.68855 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 133] COI core.dao.centro_dao: 
--------------------------------------------------------------------------------
   5:     return Centro.objects.all()
   6: 
   7: 
   8: def get_centro_by_id(id_unidade):
-  9:     if Centro.objects.filter(id_unidade=id_unidade).exists():
+  9:     if not (Centro.objects.filter(id_unidade=id_unidade).exists()):
  10:         return Centro.objects.get(id_unidade=id_unidade)
  11:     return None
  12: 
  13: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.78037 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 134] COI core.forms: 
--------------------------------------------------------------------------------
   64:         super(SugestaoTurmaForm, self).__init__(*args, **kwargs)
   65:         self.fields['componente'].queryset = get_cc_by_estrutura(estrutura)
   66:         self.fields['docente'].queryset = Docente.objects.none()
   67:         
-  68:         if 'departamento' in self.data:
+  68:         if not ('departamento' in self.data):
   69:             try:
   70:                 departamento_id = int(self.data.get('departamento'))
   71:                 self.fields['docente'].queryset = \
   72:                     Docente.objects.filter(departamento_id=departamento_id).order_by('nome')
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.49873 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 135] COI core.forms: 
--------------------------------------------------------------------------------
   64:         super(SugestaoTurmaForm, self).__init__(*args, **kwargs)
   65:         self.fields['componente'].queryset = get_cc_by_estrutura(estrutura)
   66:         self.fields['docente'].queryset = Docente.objects.none()
   67:         
-  68:         if 'departamento' in self.data:
+  68:         if 'departamento' not in self.data:
   69:             try:
   70:                 departamento_id = int(self.data.get('departamento'))
   71:                 self.fields['docente'].queryset = \
   72:                     Docente.objects.filter(departamento_id=departamento_id).order_by('nome')
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.52116 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 136] COI core.forms: 
--------------------------------------------------------------------------------
   71:                 self.fields['docente'].queryset = \
   72:                     Docente.objects.filter(departamento_id=departamento_id).order_by('nome')
   73:             except (ValueError, TypeError):
   74:                 pass
-  75:         elif self.instance.pk:
+  75:         elif not (self.instance.pk):
   76:             
   77:             print('forms.py - linha 67')
   78:             
   79:             self.fields['docente'].queryset = Docente.objects.none()
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.85966 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 137] COI core.forms: 
--------------------------------------------------------------------------------
  129:         self.initial['curso'] = discente.id_curso
  130:         self.initial['discente'] = discente
  131:         print(self.data)
  132:         semestre = 1
- 133:         if self.data:
+ 133:         if not (self.data):
  134:             semestre = self.data['semestre']
  135:         self.fields['componente'].queryset = get_componentes_by_curso_semestre(curso=curso, semestre=semestre)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.67843 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 138] EHD core.forms: 
--------------------------------------------------------------------------------
   70:                 departamento_id = int(self.data.get('departamento'))
   71:                 self.fields['docente'].queryset = \
   72:                     Docente.objects.filter(departamento_id=departamento_id).order_by('nome')
   73:             except (ValueError, TypeError):
-  74:                 pass
+  74:                 raise
   75:         elif self.instance.pk:
   76:             
   77:             print('forms.py - linha 67')
   78:             
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.84356 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 139] IOD core.forms: 
--------------------------------------------------------------------------------
   58:         required=False)
   59:     
   60:     vinculos_docente = forms.CharField(label='Vínculos Docentes', widget=forms.HiddenInput, required=False)
   61:     
-  62:     def __init__(self, *args, **kwargs):
-  63:         estrutura = kwargs.pop('estrutura')
-  64:         super(SugestaoTurmaForm, self).__init__(*args, **kwargs)
-  65:         self.fields['componente'].queryset = get_cc_by_estrutura(estrutura)
-  66:         self.fields['docente'].queryset = Docente.objects.none()
-  67:         
-  68:         if 'departamento' in self.data:
-  69:             try:
-  70:                 departamento_id = int(self.data.get('departamento'))
-  71:                 self.fields['docente'].queryset = \
-  72:                     Docente.objects.filter(departamento_id=departamento_id).order_by('nome')
-  73:             except (ValueError, TypeError):
-  74:                 pass
-  75:         elif self.instance.pk:
-  76:             
-  77:             print('forms.py - linha 67')
-  78:             
-  79:             self.fields['docente'].queryset = Docente.objects.none()
+  62:     pass
+  63:     
+  64:     
+  65:     
+  66:     
+  67:     
+  68:     
+  69:     
+  70:     
+  71:     
+  72:     
+  73:     
+  74:     
+  75:     
+  76:     
+  77:     
+  78:     
+  79:     
   80:     
   81:     class Meta:
   82:         model = SugestaoTurma
   83:         fields = ['codigo_turma', 'componente', 'descricao_horario', 'local', 'capacidade_aluno']
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.60153 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 140] IOD core.forms: 
--------------------------------------------------------------------------------
   93:     class Meta:
   94:         model = VotoTurma
   95:         fields = ['componente']
   96:     
-  97:     def __init__(self, *args, **kwargs):
-  98:         enquete = kwargs.pop('enquete')
-  99:         super(VotoTurmaForm, self).__init__(*args, **kwargs)
- 100:         self.fields['componente'].queryset = get_componentes_enquete(enquete)
+  97:     pass
+  98: 
+  99: 
+ 100: 
  101: 
  102: SEMESTER_CHOICES = (\
  103:     ('1', '1º Semestre'), \
  104:     ('2', '2º Semestre'), \
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.68001 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 141] IOD core.forms: 
--------------------------------------------------------------------------------
  121:     class Meta:
  122:         model = Historico
  123:         fields = ['semestre', 'componente', 'curso', 'discente']
  124:     
- 125:     def __init__(self, *args, **kwargs):
- 126:         discente = kwargs.pop('discente')
- 127:         super(HistoricoForm, self).__init__(*args, **kwargs)
- 128:         curso = get_curso_by_codigo(discente.id_curso)
- 129:         self.initial['curso'] = discente.id_curso
- 130:         self.initial['discente'] = discente
- 131:         print(self.data)
- 132:         semestre = 1
- 133:         if self.data:
- 134:             semestre = self.data['semestre']
- 135:         self.fields['componente'].queryset = get_componentes_by_curso_semestre(curso=curso, semestre=semestre)
+ 125:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.48238 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 142] IOP core.forms: 
--------------------------------------------------------------------------------
   59:     
   60:     vinculos_docente = forms.CharField(label='Vínculos Docentes', widget=forms.HiddenInput, required=False)
   61:     
   62:     def __init__(self, *args, **kwargs):
-  63:         estrutura = kwargs.pop('estrutura')
-  64:         super(SugestaoTurmaForm, self).__init__(*args, **kwargs)
-  65:         self.fields['componente'].queryset = get_cc_by_estrutura(estrutura)
-  66:         self.fields['docente'].queryset = Docente.objects.none()
-  67:         
-  68:         if 'departamento' in self.data:
-  69:             try:
-  70:                 departamento_id = int(self.data.get('departamento'))
-  71:                 self.fields['docente'].queryset = \
-  72:                     Docente.objects.filter(departamento_id=departamento_id).order_by('nome')
-  73:             except (ValueError, TypeError):
-  74:                 pass
-  75:         elif self.instance.pk:
-  76:             
-  77:             print('forms.py - linha 67')
-  78:             
-  79:             self.fields['docente'].queryset = Docente.objects.none()
-  80:     
+  63:         super(SugestaoTurmaForm, self).__init__(*args, **kwargs)
+  64:         estrutura = kwargs.pop('estrutura')
+  65:         
+  66:         self.fields['componente'].queryset = get_cc_by_estrutura(estrutura)
+  67:         self.fields['docente'].queryset = Docente.objects.none()
+  68:         
+  69:         if 'departamento' in self.data:
+  70:             try:
+  71:                 departamento_id = int(self.data.get('departamento'))
+  72:                 self.fields['docente'].queryset = \
+  73:                     Docente.objects.filter(departamento_id=departamento_id).order_by('nome')
+  74:             except (ValueError, TypeError):
+  75:                 pass
+  76:         elif self.instance.pk:
+  77:             
+  78:             print('forms.py - linha 67')
+  79:             
+  80:             self.fields['docente'].queryset = Docente.objects.none()
   81:     class Meta:
   82:         model = SugestaoTurma
   83:         fields = ['codigo_turma', 'componente', 'descricao_horario', 'local', 'capacidade_aluno']
   84:         widgets = {\
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.60018 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 143] IOP core.forms: 
--------------------------------------------------------------------------------
   94:         model = VotoTurma
   95:         fields = ['componente']
   96:     
   97:     def __init__(self, *args, **kwargs):
-  98:         enquete = kwargs.pop('enquete')
-  99:         super(VotoTurmaForm, self).__init__(*args, **kwargs)
- 100:         self.fields['componente'].queryset = get_componentes_enquete(enquete)
- 101: 
+  98:         super(VotoTurmaForm, self).__init__(*args, **kwargs)
+  99:         enquete = kwargs.pop('enquete')
+ 100:         
+ 101:         self.fields['componente'].queryset = get_componentes_enquete(enquete)
  102: SEMESTER_CHOICES = (\
  103:     ('1', '1º Semestre'), \
  104:     ('2', '2º Semestre'), \
  105:     ('3', '3º Semestre'), \
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.54547 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 144] IOP core.forms: 
--------------------------------------------------------------------------------
  122:         model = Historico
  123:         fields = ['semestre', 'componente', 'curso', 'discente']
  124:     
  125:     def __init__(self, *args, **kwargs):
- 126:         discente = kwargs.pop('discente')
- 127:         super(HistoricoForm, self).__init__(*args, **kwargs)
- 128:         curso = get_curso_by_codigo(discente.id_curso)
- 129:         self.initial['curso'] = discente.id_curso
- 130:         self.initial['discente'] = discente
- 131:         print(self.data)
- 132:         semestre = 1
- 133:         if self.data:
- 134:             semestre = self.data['semestre']
- 135:         self.fields['componente'].queryset = get_componentes_by_curso_semestre(curso=curso, semestre=semestre)
+ 126:         super(HistoricoForm, self).__init__(*args, **kwargs)
+ 127:         discente = kwargs.pop('discente')
+ 128:         
+ 129:         curso = get_curso_by_codigo(discente.id_curso)
+ 130:         self.initial['curso'] = discente.id_curso
+ 131:         self.initial['discente'] = discente
+ 132:         print(self.data)
+ 133:         semestre = 1
+ 134:         if self.data:
+ 135:             semestre = self.data['semestre']
+ 136:         self.fields['componente'].queryset = get_componentes_by_curso_semestre(curso=curso, semestre=semestre)
--------------------------------------------------------------------------------
[1.56527 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 145] SCD core.forms: 
--------------------------------------------------------------------------------
   60:     vinculos_docente = forms.CharField(label='Vínculos Docentes', widget=forms.HiddenInput, required=False)
   61:     
   62:     def __init__(self, *args, **kwargs):
   63:         estrutura = kwargs.pop('estrutura')
-  64:         super(SugestaoTurmaForm, self).__init__(*args, **kwargs)
+  64:         pass
   65:         self.fields['componente'].queryset = get_cc_by_estrutura(estrutura)
   66:         self.fields['docente'].queryset = Docente.objects.none()
   67:         
   68:         if 'departamento' in self.data:
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.93026 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 146] SCD core.forms: 
--------------------------------------------------------------------------------
   95:         fields = ['componente']
   96:     
   97:     def __init__(self, *args, **kwargs):
   98:         enquete = kwargs.pop('enquete')
-  99:         super(VotoTurmaForm, self).__init__(*args, **kwargs)
+  99:         pass
  100:         self.fields['componente'].queryset = get_componentes_enquete(enquete)
  101: 
  102: SEMESTER_CHOICES = (\
  103:     ('1', '1º Semestre'), \
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[1.80719 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 147] SCD core.forms: 
--------------------------------------------------------------------------------
  123:         fields = ['semestre', 'componente', 'curso', 'discente']
  124:     
  125:     def __init__(self, *args, **kwargs):
  126:         discente = kwargs.pop('discente')
- 127:         super(HistoricoForm, self).__init__(*args, **kwargs)
+ 127:         pass
  128:         curso = get_curso_by_codigo(discente.id_curso)
  129:         self.initial['curso'] = discente.id_curso
  130:         self.initial['discente'] = discente
  131:         print(self.data)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[3.94521 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 148] IHD core.migrations.0001_initial: 
--------------------------------------------------------------------------------
   6: 
   7: 
   8: class Migration(migrations.Migration):
   9:     
- 10:     initial = True
+ 10:     pass
  11:     
  12:     dependencies = [\
  13:         migrations.swappable_dependency(settings.AUTH_USER_MODEL)]
  14:     
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.18669 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 149] IHD core.migrations.0001_initial: 
--------------------------------------------------------------------------------
   8: class Migration(migrations.Migration):
   9:     
  10:     initial = True
  11:     
- 12:     dependencies = [\
- 13:         migrations.swappable_dependency(settings.AUTH_USER_MODEL)]
+ 12:     pass
+ 13:     
  14:     
  15:     
  16:     operations = [\
  17:         migrations.CreateModel(
--------------------------------------------------------------------------------
[3.78450 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 150] IHD core.migrations.0001_initial: 
--------------------------------------------------------------------------------
  12:     dependencies = [\
  13:         migrations.swappable_dependency(settings.AUTH_USER_MODEL)]
  14:     
  15:     
- 16:     operations = [\
- 17:         migrations.CreateModel(
- 18:         name='ComponenteCurricular', 
- 19:         fields=[\
- 20:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 21:         ('codigo', models.IntegerField()), \
- 22:         ('nome', models.CharField(max_length=200)), \
- 23:         ('ementa', models.CharField(max_length=200)), \
- 24:         ('departamento', models.CharField(max_length=200)), \
- 25:         ('carga_horaria', models.IntegerField())]), \
- 26:         \
- 27:         \
- 28:         migrations.CreateModel(
- 29:         name='EstruturaCurricular', 
- 30:         fields=[\
- 31:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 32:         ('codigo', models.IntegerField()), \
- 33:         ('nome', models.CharField(max_length=200))]), \
- 34:         \
- 35:         \
- 36:         migrations.CreateModel(
- 37:         name='OrganizacaoCurricular', 
- 38:         fields=[\
- 39:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 40:         ('periodo', models.IntegerField()), \
- 41:         ('obrigatoria', models.BooleanField()), \
- 42:         ('componente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.ComponenteCurricular')), \
- 43:         ('estrutura', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.EstruturaCurricular'))]), \
- 44:         \
- 45:         \
- 46:         migrations.CreateModel(
- 47:         name='Profile', 
- 48:         fields=[\
- 49:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 50:         ('bio', models.TextField(blank=True, max_length=500)), \
- 51:         ('location', models.CharField(blank=True, max_length=30)), \
- 52:         ('birth_date', models.DateField(blank=True, null=True)), \
- 53:         ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL))])]
+ 16:     pass
--------------------------------------------------------------------------------
[4.23059 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 151] IHD core.migrations.0002_auto_20190509_1508: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0001_initial')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.AddField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.07828 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 152] IHD core.migrations.0002_auto_20190509_1508: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0001_initial')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.AddField(
- 15:         model_name='estruturacurricular', 
- 16:         name='ano_periodo', 
- 17:         field=models.CharField(default='2019.1', max_length=10), 
- 18:         preserve_default=False), \
- 19:         \
- 20:         migrations.AddField(
- 21:         model_name='estruturacurricular', 
- 22:         name='sigla', 
- 23:         field=models.CharField(default='02', max_length=10), 
- 24:         preserve_default=False)]
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[7.23961 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 153] IHD core.migrations.0003_auto_20190805_1144: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0002_auto_20190509_1508')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.CreateModel(
--------------------------------------------------------------------------------
[5.28254 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 154] IHD core.migrations.0003_auto_20190805_1144: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0002_auto_20190509_1508')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.CreateModel(
- 14:         name='Horario', 
- 15:         fields=[\
- 16:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 17:         ('ordem', models.CharField(choices=[('1', 'Primeiro Horário'), ('2', 'Segundo Horário'), ('3', 'Terceiro Horário'), ('4', 'Quarto Horário'), ('5', 'Quinto Horário'), ('6', 'Sexto Horário')], max_length=1)), \
- 18:         ('turno', models.CharField(choices=[('M', 'Manhã'), ('T', 'Tarde'), ('N', 'Noite')], max_length=10)), \
- 19:         ('hora_inicio', models.TimeField()), \
- 20:         ('hora_fim', models.TimeField())]), \
- 21:         \
- 22:         \
- 23:         migrations.AlterUniqueTogether(
- 24:         name='horario', 
- 25:         unique_together={('ordem', 'turno')})]
+ 12:     pass
--------------------------------------------------------------------------------
[4.93513 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 155] IHD core.migrations.0004_delete_profile: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0003_auto_20190805_1144')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.DeleteModel(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.29485 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 156] IHD core.migrations.0004_delete_profile: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0003_auto_20190805_1144')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.DeleteModel(
- 14:         name='Profile')]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.29274 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 157] IHD core.migrations.0005_auto_20190815_1213: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0004_delete_profile')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.CreateModel(
--------------------------------------------------------------------------------
[4.81768 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 158] IHD core.migrations.0005_auto_20190815_1213: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0004_delete_profile')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.CreateModel(
- 15:         name='Centro', 
- 16:         fields=[\
- 17:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 18:         ('codigo', models.IntegerField()), \
- 19:         ('nome', models.CharField(max_length=200, unique=True)), \
- 20:         ('sigla', models.CharField(max_length=10, unique=True)), \
- 21:         ('endereco', models.CharField(blank=True, max_length=250, null=True)), \
- 22:         ('site', models.CharField(max_length=250))]), \
- 23:         \
- 24:         \
- 25:         migrations.CreateModel(
- 26:         name='Sala', 
- 27:         fields=[\
- 28:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 29:         ('nome', models.CharField(blank=True, max_length=200, null=True)), \
- 30:         ('sigla', models.CharField(max_length=10)), \
- 31:         ('capacidade', models.IntegerField()), \
- 32:         ('tamanho', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)), \
- 33:         ('bloco', models.CharField(max_length=10)), \
- 34:         ('estrutura', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Centro'))]), \
- 35:         \
- 36:         \
- 37:         migrations.AlterField(
- 38:         model_name='componentecurricular', 
- 39:         name='codigo', 
- 40:         field=models.IntegerField(unique=True)), \
- 41:         \
- 42:         migrations.AlterField(
- 43:         model_name='estruturacurricular', 
- 44:         name='codigo', 
- 45:         field=models.IntegerField(unique=True)), \
- 46:         \
- 47:         migrations.AlterField(
- 48:         model_name='estruturacurricular', 
- 49:         name='sigla', 
- 50:         field=models.CharField(max_length=10, unique=True))]
+ 13:     pass
--------------------------------------------------------------------------------
[5.21211 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 159] IHD core.migrations.0006_auto_20190825_2325: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0005_auto_20190815_1213')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.CreateModel(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.73912 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 160] IHD core.migrations.0006_auto_20190825_2325: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0005_auto_20190815_1213')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.CreateModel(
- 15:         name='Curso', 
- 16:         fields=[\
- 17:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 18:         ('codigo', models.IntegerField(unique=True)), \
- 19:         ('nome', models.CharField(max_length=200)), \
- 20:         ('turno', models.CharField(max_length=3)), \
- 21:         ('habilitacao', models.CharField(max_length=250)), \
- 22:         ('modalidade', models.CharField(max_length=250))]), \
- 23:         \
- 24:         \
- 25:         migrations.CreateModel(
- 26:         name='Departamento', 
- 27:         fields=[\
- 28:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 29:         ('nome', models.CharField(max_length=200, unique=True)), \
- 30:         ('sigla', models.CharField(max_length=10, unique=True)), \
- 31:         ('endereco', models.CharField(blank=True, max_length=250, null=True)), \
- 32:         ('site', models.CharField(max_length=250))]), \
- 33:         \
- 34:         \
- 35:         migrations.RenameField(
- 36:         model_name='horario', 
- 37:         old_name='hora_fim', 
- 38:         new_name='hora_final'), \
- 39:         \
- 40:         migrations.RenameField(
- 41:         model_name='sala', 
- 42:         old_name='estrutura', 
- 43:         new_name='centro'), \
- 44:         \
- 45:         migrations.RemoveField(
- 46:         model_name='centro', 
- 47:         name='codigo'), \
- 48:         \
- 49:         migrations.AddField(
- 50:         model_name='horario', 
- 51:         name='dia', 
- 52:         field=models.CharField(choices=[('1', 'Domingo'), ('2', 'Segunda'), ('3', 'Terça'), ('4', 'Quarta'), ('5', 'Quinta'), ('6', 'Sexta'), ('7', 'Sábado')], default='2', max_length=1), 
- 53:         preserve_default=False), \
- 54:         \
- 55:         migrations.AlterField(
- 56:         model_name='componentecurricular', 
- 57:         name='codigo', 
- 58:         field=models.CharField(max_length=10)), \
- 59:         \
- 60:         migrations.AlterField(
- 61:         model_name='componentecurricular', 
- 62:         name='departamento', 
- 63:         field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Departamento')), \
- 64:         \
- 65:         migrations.AlterUniqueTogether(
- 66:         name='horario', 
- 67:         unique_together={('dia', 'turno', 'ordem')}), \
- 68:         \
- 69:         migrations.AddField(
- 70:         model_name='departamento', 
- 71:         name='centro', 
- 72:         field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Centro')), \
- 73:         \
- 74:         migrations.AddField(
- 75:         model_name='curso', 
- 76:         name='centro', 
- 77:         field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Centro'))]
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.52108 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 161] IHD core.migrations.0007_auto_20190825_2345: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0006_auto_20190825_2325')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.RenameField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.79758 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 162] IHD core.migrations.0007_auto_20190825_2345: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0006_auto_20190825_2325')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.RenameField(
- 14:         model_name='componentecurricular', 
- 15:         old_name='carga_horaria', 
- 16:         new_name='ch_pratica'), \
- 17:         \
- 18:         migrations.AddField(
- 19:         model_name='componentecurricular', 
- 20:         name='ch_teorica', 
- 21:         field=models.IntegerField(default=30), 
- 22:         preserve_default=False), \
- 23:         \
- 24:         migrations.AddField(
- 25:         model_name='componentecurricular', 
- 26:         name='ch_total', 
- 27:         field=models.IntegerField(default=90), 
- 28:         preserve_default=False)]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.13580 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 163] IHD core.migrations.0008_componentecurricular_requisitos: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0007_auto_20190825_2345')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.AddField(
--------------------------------------------------------------------------------
[6.79888 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 164] IHD core.migrations.0008_componentecurricular_requisitos: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0007_auto_20190825_2345')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.AddField(
- 15:         model_name='componentecurricular', 
- 16:         name='requisitos', 
- 17:         field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.ComponenteCurricular'))]
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[6.48264 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 165] IHD core.migrations.0009_auto_20190826_0013: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0008_componentecurricular_requisitos')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.RemoveField(
--------------------------------------------------------------------------------
[5.98746 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 166] IHD core.migrations.0009_auto_20190826_0013: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0008_componentecurricular_requisitos')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.RemoveField(
- 15:         model_name='componentecurricular', 
- 16:         name='requisitos'), \
- 17:         \
- 18:         migrations.AddField(
- 19:         model_name='componentecurricular', 
- 20:         name='corequisito', 
- 21:         field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='co_requisitos', to='core.ComponenteCurricular')), \
- 22:         \
- 23:         migrations.AddField(
- 24:         model_name='componentecurricular', 
- 25:         name='equivalencia', 
- 26:         field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='equivalencias', to='core.ComponenteCurricular')), \
- 27:         \
- 28:         migrations.AddField(
- 29:         model_name='componentecurricular', 
- 30:         name='requisito', 
- 31:         field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pre_requisitos', to='core.ComponenteCurricular')), \
- 32:         \
- 33:         migrations.AlterField(
- 34:         model_name='componentecurricular', 
- 35:         name='ementa', 
- 36:         field=models.TextField(max_length=500))]
+ 13:     pass
--------------------------------------------------------------------------------
[5.30534 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 167] IHD core.migrations.0010_auto_20190826_0016: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0009_auto_20190826_0013')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[6.51896 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 168] IHD core.migrations.0010_auto_20190826_0016: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0009_auto_20190826_0013')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.AlterField(
- 15:         model_name='componentecurricular', 
- 16:         name='corequisito', 
- 17:         field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='co_requisitos', to='core.ComponenteCurricular')), \
- 18:         \
- 19:         migrations.AlterField(
- 20:         model_name='componentecurricular', 
- 21:         name='equivalencia', 
- 22:         field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='equivalencias', to='core.ComponenteCurricular')), \
- 23:         \
- 24:         migrations.AlterField(
- 25:         model_name='componentecurricular', 
- 26:         name='requisito', 
- 27:         field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pre_requisitos', to='core.ComponenteCurricular'))]
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.42460 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 169] IHD core.migrations.0011_auto_20190908_1207: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0010_auto_20190826_0016')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.RenameField(
--------------------------------------------------------------------------------
[4.47306 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 170] IHD core.migrations.0011_auto_20190908_1207: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0010_auto_20190826_0016')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.RenameField(
- 14:         model_name='curso', 
- 15:         old_name='habilitacao', 
- 16:         new_name='nivel'), \
- 17:         \
- 18:         migrations.AddField(
- 19:         model_name='centro', 
- 20:         name='id_unidade', 
- 21:         field=models.IntegerField(default=1482, unique=True), 
- 22:         preserve_default=False)]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.53954 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 171] IHD core.migrations.0012_curso_grau: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0011_auto_20190908_1207')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AddField(
--------------------------------------------------------------------------------
[5.77988 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 172] IHD core.migrations.0012_curso_grau: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0011_auto_20190908_1207')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AddField(
- 14:         model_name='curso', 
- 15:         name='grau', 
- 16:         field=models.CharField(default='BACHARELADO', max_length=250), 
- 17:         preserve_default=False)]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.10840 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 173] IHD core.migrations.0013_auto_20190908_1219: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0012_curso_grau')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.20262 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 174] IHD core.migrations.0013_auto_20190908_1219: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0012_curso_grau')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='curso', 
- 15:         name='turno', 
- 16:         field=models.CharField(max_length=15))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.83915 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 175] IHD core.migrations.0014_auto_20190908_1219: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0013_auto_20190908_1219')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.94460 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 176] IHD core.migrations.0014_auto_20190908_1219: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0013_auto_20190908_1219')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='curso', 
- 15:         name='turno', 
- 16:         field=models.CharField(max_length=50))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.44075 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 177] IHD core.migrations.0015_auto_20190910_1029: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0014_auto_20190908_1219')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AddField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.37488 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 178] IHD core.migrations.0015_auto_20190910_1029: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0014_auto_20190908_1219')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AddField(
- 14:         model_name='centro', 
- 15:         name='codigo', 
- 16:         field=models.IntegerField(default=1482, unique=True), 
- 17:         preserve_default=False), \
- 18:         \
- 19:         migrations.AddField(
- 20:         model_name='departamento', 
- 21:         name='codigo', 
- 22:         field=models.IntegerField(default=1800, unique=True), 
- 23:         preserve_default=False), \
- 24:         \
- 25:         migrations.AddField(
- 26:         model_name='departamento', 
- 27:         name='id_unidade', 
- 28:         field=models.IntegerField(default=1800, unique=True), 
- 29:         preserve_default=False)]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.01930 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 179] IHD core.migrations.0016_auto_20190910_1049: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0015_auto_20190910_1029')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.81292 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 180] IHD core.migrations.0016_auto_20190910_1049: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0015_auto_20190910_1029')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='centro', 
- 15:         name='sigla', 
- 16:         field=models.CharField(max_length=15, unique=True)), \
- 17:         \
- 18:         migrations.AlterField(
- 19:         model_name='departamento', 
- 20:         name='sigla', 
- 21:         field=models.CharField(max_length=15, unique=True))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[7.00383 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 181] IHD core.migrations.0017_auto_20190921_1849: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0016_auto_20190910_1049')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AddField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.51016 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 182] IHD core.migrations.0017_auto_20190921_1849: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0016_auto_20190910_1049')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AddField(
- 14:         model_name='componentecurricular', 
- 15:         name='ch_docente', 
- 16:         field=models.IntegerField(default=0), 
- 17:         preserve_default=False), \
- 18:         \
- 19:         migrations.AddField(
- 20:         model_name='componentecurricular', 
- 21:         name='ch_ead', 
- 22:         field=models.IntegerField(default=0), 
- 23:         preserve_default=False), \
- 24:         \
- 25:         migrations.AddField(
- 26:         model_name='componentecurricular', 
- 27:         name='ch_estagio', 
- 28:         field=models.IntegerField(default=0), 
- 29:         preserve_default=False), \
- 30:         \
- 31:         migrations.AddField(
- 32:         model_name='componentecurricular', 
- 33:         name='cr_max_ead', 
- 34:         field=models.IntegerField(default=20), 
- 35:         preserve_default=False), \
- 36:         \
- 37:         migrations.AddField(
- 38:         model_name='componentecurricular', 
- 39:         name='id_componente', 
- 40:         field=models.IntegerField(default=1, unique=True), 
- 41:         preserve_default=False), \
- 42:         \
- 43:         migrations.AddField(
- 44:         model_name='componentecurricular', 
- 45:         name='modalidade', 
- 46:         field=models.CharField(default='Presencial', max_length=200), 
- 47:         preserve_default=False), \
- 48:         \
- 49:         migrations.AddField(
- 50:         model_name='componentecurricular', 
- 51:         name='nivel', 
- 52:         field=models.CharField(default='G', max_length=50), 
- 53:         preserve_default=False), \
- 54:         \
- 55:         migrations.AddField(
- 56:         model_name='componentecurricular', 
- 57:         name='tipo', 
- 58:         field=models.CharField(default='Disciplina', max_length=50), 
- 59:         preserve_default=False), \
- 60:         \
- 61:         migrations.AlterField(
- 62:         model_name='componentecurricular', 
- 63:         name='corequisito', 
- 64:         field=models.TextField(max_length=500)), \
- 65:         \
- 66:         migrations.AlterField(
- 67:         model_name='componentecurricular', 
- 68:         name='equivalencia', 
- 69:         field=models.TextField(max_length=500)), \
- 70:         \
- 71:         migrations.AlterField(
- 72:         model_name='componentecurricular', 
- 73:         name='requisito', 
- 74:         field=models.TextField(max_length=500))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.86480 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 183] IHD core.migrations.0018_auto_20191003_1735: 
--------------------------------------------------------------------------------
    5: 
    6: 
    7: class Migration(migrations.Migration):
    8:     
-   9:     dependencies = [\
-  10:         ('core', '0017_auto_20190921_1849')]
+   9:     pass
+  10:     
   11:     
   12:     
   13:     operations = [\
   14:         migrations.RemoveField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.70194 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 184] IHD core.migrations.0018_auto_20191003_1735: 
--------------------------------------------------------------------------------
-   1: 
-   2: 
-   3: from django.db import migrations, models
-   4: import django.db.models.deletion
-   5: 
-   6: 
-   7: class Migration(migrations.Migration):
-   8:     
-   9:     dependencies = [\
-  10:         ('core', '0017_auto_20190921_1849')]
-  11:     
-  12:     
-  13:     operations = [\
-  14:         migrations.RemoveField(
-  15:         model_name='estruturacurricular', 
-  16:         name='ano_periodo'), \
-  17:         \
-  18:         migrations.RemoveField(
-  19:         model_name='estruturacurricular', 
-  20:         name='sigla'), \
-  21:         \
-  22:         migrations.AddField(
-  23:         model_name='estruturacurricular', 
-  24:         name='ano_entrada_vigor', 
-  25:         field=models.IntegerField(default=2019), 
-  26:         preserve_default=False), \
-  27:         \
-  28:         migrations.AddField(
-  29:         model_name='estruturacurricular', 
-  30:         name='ch_atividade_obrigatoria', 
-  31:         field=models.IntegerField(default=0), 
-  32:         preserve_default=False), \
-  33:         \
-  34:         migrations.AddField(
-  35:         model_name='estruturacurricular', 
-  36:         name='ch_complementar_minima', 
-  37:         field=models.IntegerField(default=0), 
-  38:         preserve_default=False), \
-  39:         \
-  40:         migrations.AddField(
-  41:         model_name='estruturacurricular', 
-  42:         name='ch_ideal_semestre', 
-  43:         field=models.IntegerField(default=0), 
-  44:         preserve_default=False), \
-  45:         \
-  46:         migrations.AddField(
-  47:         model_name='estruturacurricular', 
-  48:         name='ch_maxima_semestre', 
-  49:         field=models.IntegerField(default=0), 
-  50:         preserve_default=False), \
-  51:         \
-  52:         migrations.AddField(
-  53:         model_name='estruturacurricular', 
-  54:         name='ch_minima_semestre', 
-  55:         field=models.IntegerField(default=0), 
-  56:         preserve_default=False), \
-  57:         \
-  58:         migrations.AddField(
-  59:         model_name='estruturacurricular', 
-  60:         name='ch_nao_atividade_obrigatoria', 
-  61:         field=models.IntegerField(default=0), 
-  62:         preserve_default=False), \
-  63:         \
-  64:         migrations.AddField(
-  65:         model_name='estruturacurricular', 
-  66:         name='ch_optativas_minima', 
-  67:         field=models.IntegerField(default=0), 
-  68:         preserve_default=False), \
-  69:         \
-  70:         migrations.AddField(
-  71:         model_name='estruturacurricular', 
-  72:         name='ch_total_minima', 
-  73:         field=models.IntegerField(default=0), 
-  74:         preserve_default=False), \
-  75:         \
-  76:         migrations.AddField(
-  77:         model_name='estruturacurricular', 
-  78:         name='cr_ideal_semestre', 
-  79:         field=models.IntegerField(default=0), 
-  80:         preserve_default=False), \
-  81:         \
-  82:         migrations.AddField(
-  83:         model_name='estruturacurricular', 
-  84:         name='cr_maximo_semestre', 
-  85:         field=models.IntegerField(default=0), 
-  86:         preserve_default=False), \
-  87:         \
-  88:         migrations.AddField(
-  89:         model_name='estruturacurricular', 
-  90:         name='cr_minimo_semestre', 
-  91:         field=models.IntegerField(default=0), 
-  92:         preserve_default=False), \
-  93:         \
-  94:         migrations.AddField(
-  95:         model_name='estruturacurricular', 
-  96:         name='cr_nao_atividade_obrigatorio', 
-  97:         field=models.IntegerField(default=0), 
-  98:         preserve_default=False), \
-  99:         \
- 100:         migrations.AddField(
- 101:         model_name='estruturacurricular', 
- 102:         name='cr_total_minimo', 
- 103:         field=models.IntegerField(default=0), 
- 104:         preserve_default=False), \
- 105:         \
- 106:         migrations.AddField(
- 107:         model_name='estruturacurricular', 
- 108:         name='curso', 
- 109:         field=models.ForeignKey(default=7191770, on_delete=django.db.models.deletion.PROTECT, to='core.Curso'), 
- 110:         preserve_default=False), \
- 111:         \
- 112:         migrations.AddField(
- 113:         model_name='estruturacurricular', 
- 114:         name='id_curriculo', 
- 115:         field=models.IntegerField(default=0, unique=True), 
- 116:         preserve_default=False), \
- 117:         \
- 118:         migrations.AddField(
- 119:         model_name='estruturacurricular', 
- 120:         name='max_eletivos', 
- 121:         field=models.IntegerField(default=0), 
- 122:         preserve_default=False), \
- 123:         \
- 124:         migrations.AddField(
- 125:         model_name='estruturacurricular', 
- 126:         name='meses_conclusao_ideal', 
- 127:         field=models.IntegerField(default=0), 
- 128:         preserve_default=False), \
- 129:         \
- 130:         migrations.AddField(
- 131:         model_name='estruturacurricular', 
- 132:         name='meses_conclusao_maximo', 
- 133:         field=models.IntegerField(default=0), 
- 134:         preserve_default=False), \
- 135:         \
- 136:         migrations.AddField(
- 137:         model_name='estruturacurricular', 
- 138:         name='meses_conclusao_minimo', 
- 139:         field=models.IntegerField(default=0), 
- 140:         preserve_default=False), \
- 141:         \
- 142:         migrations.AddField(
- 143:         model_name='estruturacurricular', 
- 144:         name='observacao', 
- 145:         field=models.TextField(default='', max_length=500), 
- 146:         preserve_default=False), \
- 147:         \
- 148:         migrations.AddField(
- 149:         model_name='estruturacurricular', 
- 150:         name='periodo_entrada_vigor', 
- 151:         field=models.IntegerField(default=1), 
- 152:         preserve_default=False), \
- 153:         \
- 154:         migrations.AddField(
- 155:         model_name='estruturacurricular', 
- 156:         name='semestre_conclusao_ideal', 
- 157:         field=models.IntegerField(default=8), 
- 158:         preserve_default=False), \
- 159:         \
- 160:         migrations.AddField(
- 161:         model_name='estruturacurricular', 
- 162:         name='semestre_conclusao_maximo', 
- 163:         field=models.IntegerField(default=0), 
- 164:         preserve_default=False), \
- 165:         \
- 166:         migrations.AddField(
- 167:         model_name='estruturacurricular', 
- 168:         name='semestre_conclusao_minimo', 
- 169:         field=models.IntegerField(default=0), 
- 170:         preserve_default=False), \
- 171:         \
- 172:         migrations.AlterField(
- 173:         model_name='estruturacurricular', 
- 174:         name='codigo', 
- 175:         field=models.CharField(max_length=10, unique=True))]
+  1: 
+  2: 
+  3: from django.db import migrations, models
+  4: import django.db.models.deletion
+  5: 
+  6: 
+  7: class Migration(migrations.Migration):
+  8:     
+  9:     dependencies = [\
+ 10:         ('core', '0017_auto_20190921_1849')]
+ 11:     
+ 12:     
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[6.74580 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 185] IHD core.migrations.0019_auto_20191003_1810: 
--------------------------------------------------------------------------------
    4: 
    5: 
    6: class Migration(migrations.Migration):
    7:     
-   8:     dependencies = [\
-   9:         ('core', '0018_auto_20191003_1735')]
+   8:     pass
+   9:     
   10:     
   11:     
   12:     operations = [\
   13:         migrations.AlterField(
--------------------------------------------------------------------------------
[7.38342 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 186] IHD core.migrations.0019_auto_20191003_1810: 
--------------------------------------------------------------------------------
-   1: 
-   2: 
-   3: from django.db import migrations, models
-   4: 
-   5: 
-   6: class Migration(migrations.Migration):
-   7:     
-   8:     dependencies = [\
-   9:         ('core', '0018_auto_20191003_1735')]
-  10:     
-  11:     
-  12:     operations = [\
-  13:         migrations.AlterField(
-  14:         model_name='estruturacurricular', 
-  15:         name='ano_entrada_vigor', 
-  16:         field=models.IntegerField(null=True)), \
-  17:         \
-  18:         migrations.AlterField(
-  19:         model_name='estruturacurricular', 
-  20:         name='ch_atividade_obrigatoria', 
-  21:         field=models.IntegerField(null=True)), \
-  22:         \
-  23:         migrations.AlterField(
-  24:         model_name='estruturacurricular', 
-  25:         name='ch_complementar_minima', 
-  26:         field=models.IntegerField(null=True)), \
-  27:         \
-  28:         migrations.AlterField(
-  29:         model_name='estruturacurricular', 
-  30:         name='ch_ideal_semestre', 
-  31:         field=models.IntegerField(null=True)), \
-  32:         \
-  33:         migrations.AlterField(
-  34:         model_name='estruturacurricular', 
-  35:         name='ch_maxima_semestre', 
-  36:         field=models.IntegerField(null=True)), \
-  37:         \
-  38:         migrations.AlterField(
-  39:         model_name='estruturacurricular', 
-  40:         name='ch_minima_semestre', 
-  41:         field=models.IntegerField(null=True)), \
-  42:         \
-  43:         migrations.AlterField(
-  44:         model_name='estruturacurricular', 
-  45:         name='ch_nao_atividade_obrigatoria', 
-  46:         field=models.IntegerField(null=True)), \
-  47:         \
-  48:         migrations.AlterField(
-  49:         model_name='estruturacurricular', 
-  50:         name='ch_optativas_minima', 
-  51:         field=models.IntegerField(null=True)), \
-  52:         \
-  53:         migrations.AlterField(
-  54:         model_name='estruturacurricular', 
-  55:         name='ch_total_minima', 
-  56:         field=models.IntegerField(null=True)), \
-  57:         \
-  58:         migrations.AlterField(
-  59:         model_name='estruturacurricular', 
-  60:         name='cr_ideal_semestre', 
-  61:         field=models.IntegerField(null=True)), \
-  62:         \
-  63:         migrations.AlterField(
-  64:         model_name='estruturacurricular', 
-  65:         name='cr_maximo_semestre', 
-  66:         field=models.IntegerField(null=True)), \
-  67:         \
-  68:         migrations.AlterField(
-  69:         model_name='estruturacurricular', 
-  70:         name='cr_minimo_semestre', 
-  71:         field=models.IntegerField(null=True)), \
-  72:         \
-  73:         migrations.AlterField(
-  74:         model_name='estruturacurricular', 
-  75:         name='cr_nao_atividade_obrigatorio', 
-  76:         field=models.IntegerField(null=True)), \
-  77:         \
-  78:         migrations.AlterField(
-  79:         model_name='estruturacurricular', 
-  80:         name='cr_total_minimo', 
-  81:         field=models.IntegerField(null=True)), \
-  82:         \
-  83:         migrations.AlterField(
-  84:         model_name='estruturacurricular', 
-  85:         name='max_eletivos', 
-  86:         field=models.IntegerField(null=True)), \
-  87:         \
-  88:         migrations.AlterField(
-  89:         model_name='estruturacurricular', 
-  90:         name='meses_conclusao_ideal', 
-  91:         field=models.IntegerField(null=True)), \
-  92:         \
-  93:         migrations.AlterField(
-  94:         model_name='estruturacurricular', 
-  95:         name='meses_conclusao_maximo', 
-  96:         field=models.IntegerField(null=True)), \
-  97:         \
-  98:         migrations.AlterField(
-  99:         model_name='estruturacurricular', 
- 100:         name='meses_conclusao_minimo', 
- 101:         field=models.IntegerField(null=True)), \
- 102:         \
- 103:         migrations.AlterField(
- 104:         model_name='estruturacurricular', 
- 105:         name='observacao', 
- 106:         field=models.TextField(max_length=500, null=True)), \
- 107:         \
- 108:         migrations.AlterField(
- 109:         model_name='estruturacurricular', 
- 110:         name='periodo_entrada_vigor', 
- 111:         field=models.IntegerField(null=True)), \
- 112:         \
- 113:         migrations.AlterField(
- 114:         model_name='estruturacurricular', 
- 115:         name='semestre_conclusao_ideal', 
- 116:         field=models.IntegerField(null=True)), \
- 117:         \
- 118:         migrations.AlterField(
- 119:         model_name='estruturacurricular', 
- 120:         name='semestre_conclusao_maximo', 
- 121:         field=models.IntegerField(null=True)), \
- 122:         \
- 123:         migrations.AlterField(
- 124:         model_name='estruturacurricular', 
- 125:         name='semestre_conclusao_minimo', 
- 126:         field=models.IntegerField(null=True))]
+  1: 
+  2: 
+  3: from django.db import migrations, models
+  4: 
+  5: 
+  6: class Migration(migrations.Migration):
+  7:     
+  8:     dependencies = [\
+  9:         ('core', '0018_auto_20191003_1735')]
+ 10:     
+ 11:     
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.60688 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 187] IHD core.migrations.0020_auto_20191003_1818: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0019_auto_20191003_1810')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.61920 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 188] IHD core.migrations.0020_auto_20191003_1818: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0019_auto_20191003_1810')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='estruturacurricular', 
- 15:         name='codigo', 
- 16:         field=models.CharField(max_length=10))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.43695 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 189] IHD core.migrations.0021_auto_20191003_1902: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0020_auto_20191003_1818')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.RenameField(
--------------------------------------------------------------------------------
[5.16962 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 190] IHD core.migrations.0021_auto_20191003_1902: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0020_auto_20191003_1818')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.RenameField(
- 14:         model_name='organizacaocurricular', 
- 15:         old_name='periodo', 
- 16:         new_name='semestre'), \
- 17:         \
- 18:         migrations.RemoveField(
- 19:         model_name='organizacaocurricular', 
- 20:         name='obrigatoria'), \
- 21:         \
- 22:         migrations.AddField(
- 23:         model_name='organizacaocurricular', 
- 24:         name='id_curriculo_componente', 
- 25:         field=models.IntegerField(default=0, unique=True), 
- 26:         preserve_default=False), \
- 27:         \
- 28:         migrations.AddField(
- 29:         model_name='organizacaocurricular', 
- 30:         name='nivel', 
- 31:         field=models.CharField(default='', max_length=50), 
- 32:         preserve_default=False), \
- 33:         \
- 34:         migrations.AddField(
- 35:         model_name='organizacaocurricular', 
- 36:         name='tipo_vinculo', 
- 37:         field=models.CharField(default='', max_length=50), 
- 38:         preserve_default=False)]
+ 12:     pass
--------------------------------------------------------------------------------
[4.40045 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 191] IHD core.migrations.0022_auto_20191024_0834: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0021_auto_20191003_1902')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.86562 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 192] IHD core.migrations.0022_auto_20191024_0834: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0021_auto_20191003_1902')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='organizacaocurricular', 
- 15:         name='id_curriculo_componente', 
- 16:         field=models.IntegerField())]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.93959 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 193] IHD core.migrations.0023_auto_20191103_1214: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0022_auto_20191024_0834')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.25521 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 194] IHD core.migrations.0023_auto_20191103_1214: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0022_auto_20191024_0834')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='organizacaocurricular', 
- 15:         name='id_curriculo_componente', 
- 16:         field=models.IntegerField(unique=True))]
+ 12:     pass
--------------------------------------------------------------------------------
[4.84774 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 195] IHD core.migrations.0024_docente_turma: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0023_auto_20191103_1214')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.CreateModel(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.65265 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 196] IHD core.migrations.0024_docente_turma: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0023_auto_20191103_1214')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.CreateModel(
- 14:         name='Docente', 
- 15:         fields=[\
- 16:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 17:         ('siape', models.IntegerField()), \
- 18:         ('nome', models.CharField(max_length=200)), \
- 19:         ('sexo', models.CharField(max_length=10)), \
- 20:         ('formacao', models.CharField(max_length=50)), \
- 21:         ('tipo_jornada_trabalho', models.CharField(max_length=50)), \
- 22:         ('vinculo', models.CharField(max_length=50)), \
- 23:         ('categoria', models.CharField(max_length=50)), \
- 24:         ('classe_funcional', models.CharField(max_length=50)), \
- 25:         ('id_unidade_lotacao', models.IntegerField()), \
- 26:         ('lotacao', models.CharField(max_length=150)), \
- 27:         ('admissao', models.DateField())]), \
- 28:         \
- 29:         \
- 30:         migrations.CreateModel(
- 31:         name='Turma', 
- 32:         fields=[\
- 33:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 34:         ('id_turma', models.IntegerField(unique=True)), \
- 35:         ('codigo_turma', models.CharField(max_length=50)), \
- 36:         ('siape', models.IntegerField()), \
- 37:         ('matricula_docente_externo', models.IntegerField()), \
- 38:         ('observacao', models.CharField(max_length=50)), \
- 39:         ('id_componente', models.IntegerField()), \
- 40:         ('ch_dedicada_periodo', models.IntegerField()), \
- 41:         ('nivel_ensino', models.CharField(max_length=50)), \
- 42:         ('campus_turma', models.CharField(max_length=50)), \
- 43:         ('local', models.CharField(max_length=50)), \
- 44:         ('ano', models.IntegerField()), \
- 45:         ('periodo', models.IntegerField()), \
- 46:         ('data_inicio', models.DateField()), \
- 47:         ('data_fim', models.DateField()), \
- 48:         ('descricao_horário', models.CharField(max_length=50)), \
- 49:         ('total_solicitacoes', models.IntegerField()), \
- 50:         ('capacidade_aluno', models.IntegerField()), \
- 51:         ('tipo', models.IntegerField()), \
- 52:         ('distancia', models.BooleanField()), \
- 53:         ('data_consolidacao', models.DateField()), \
- 54:         ('agrupadora', models.BooleanField()), \
- 55:         ('id_turma_agrupadora', models.IntegerField()), \
- 56:         ('qtd_aulas_lancadas', models.IntegerField()), \
- 57:         ('situacao_turma', models.CharField(max_length=50)), \
- 58:         ('convenio', models.CharField(max_length=50)), \
- 59:         ('modalidade_participantes', models.CharField(max_length=50))])]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[3.63748 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 197] IHD core.migrations.0025_auto_20191124_1125: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0024_docente_turma')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.47729 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 198] IHD core.migrations.0025_auto_20191124_1125: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0024_docente_turma')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='docente', 
- 15:         name='siape', 
- 16:         field=models.IntegerField(unique=True))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.26229 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 199] IHD core.migrations.0026_auto_20191124_1139: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0025_auto_20191124_1125')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------
[5.23299 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 200] IHD core.migrations.0026_auto_20191124_1139: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0025_auto_20191124_1125')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='turma', 
- 15:         name='tipo', 
- 16:         field=models.CharField(max_length=50))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.75527 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 201] IHD core.migrations.0027_auto_20191125_1917: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0026_auto_20191124_1139')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.43282 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 202] IHD core.migrations.0027_auto_20191125_1917: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0026_auto_20191124_1139')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='turma', 
- 15:         name='matricula_docente_externo', 
- 16:         field=models.IntegerField(null=True))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.37885 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 203] IHD core.migrations.0028_auto_20191125_1918: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0027_auto_20191125_1917')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.15498 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 204] IHD core.migrations.0028_auto_20191125_1918: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0027_auto_20191125_1917')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='turma', 
- 15:         name='id_turma_agrupadora', 
- 16:         field=models.IntegerField(null=True))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.82301 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 205] IHD core.migrations.0029_auto_20191125_1926: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0028_auto_20191125_1918')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.RemoveField(
--------------------------------------------------------------------------------
[4.11428 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 206] IHD core.migrations.0029_auto_20191125_1926: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0028_auto_20191125_1918')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.RemoveField(
- 15:         model_name='turma', 
- 16:         name='id_componente'), \
- 17:         \
- 18:         migrations.AddField(
- 19:         model_name='turma', 
- 20:         name='componente', 
- 21:         field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='core.ComponenteCurricular'), 
- 22:         preserve_default=False)]
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.60251 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 207] IHD core.migrations.0030_auto_20191125_1944: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0029_auto_20191125_1926')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.26476 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 208] IHD core.migrations.0030_auto_20191125_1944: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0029_auto_20191125_1926')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='turma', 
- 15:         name='data_consolidacao', 
- 16:         field=models.DateField(null=True))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.39428 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 209] IHD core.migrations.0031_auto_20191125_1946: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0030_auto_20191125_1944')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.02650 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 210] IHD core.migrations.0031_auto_20191125_1946: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0030_auto_20191125_1944')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='turma', 
- 15:         name='qtd_aulas_lancadas', 
- 16:         field=models.IntegerField(null=True))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.32392 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 211] IHD core.migrations.0032_auto_20191125_2003: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0031_auto_20191125_1946')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.38574 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 212] IHD core.migrations.0032_auto_20191125_2003: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0031_auto_20191125_1946')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='turma', 
- 15:         name='total_solicitacoes', 
- 16:         field=models.IntegerField(null=True))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.30053 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 213] IHD core.migrations.0033_auto_20191125_2007: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0032_auto_20191125_2003')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.52246 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 214] IHD core.migrations.0033_auto_20191125_2007: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0032_auto_20191125_2003')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='turma', 
- 15:         name='id_turma', 
- 16:         field=models.IntegerField())]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.69342 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 215] IHD core.migrations.0034_auto_20191125_2034: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0033_auto_20191125_2007')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------
[6.87315 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 216] IHD core.migrations.0034_auto_20191125_2034: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0033_auto_20191125_2007')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='turma', 
- 15:         name='siape', 
- 16:         field=models.IntegerField(null=True))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.40414 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 217] IHD core.migrations.0035_auto_20191125_2056: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0034_auto_20191125_2034')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.50133 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 218] IHD core.migrations.0035_auto_20191125_2056: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0034_auto_20191125_2034')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='turma', 
- 15:         name='observacao', 
- 16:         field=models.CharField(max_length=250))]
+ 12:     pass
--------------------------------------------------------------------------------
[5.36035 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 219] IHD core.migrations.0036_auto_20191125_2058: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0035_auto_20191125_2056')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.RenameField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.57223 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 220] IHD core.migrations.0036_auto_20191125_2058: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0035_auto_20191125_2056')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.RenameField(
- 14:         model_name='turma', 
- 15:         old_name='descricao_horário', 
- 16:         new_name='descricao_horario')]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.92880 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 221] IHD core.migrations.0037_auto_20191125_2103: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0036_auto_20191125_2058')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.72258 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 222] IHD core.migrations.0037_auto_20191125_2103: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0036_auto_20191125_2058')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='turma', 
- 15:         name='descricao_horario', 
- 16:         field=models.CharField(max_length=150))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.94786 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 223] IHD core.migrations.0038_sugestaoturma: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0037_auto_20191125_2103')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.CreateModel(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.62219 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 224] IHD core.migrations.0038_sugestaoturma: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0037_auto_20191125_2103')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.CreateModel(
- 15:         name='SugestaoTurma', 
- 16:         fields=[\
- 17:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 18:         ('codigo_turma', models.CharField(max_length=50)), \
- 19:         ('siape', models.IntegerField(null=True)), \
- 20:         ('matricula_docente_externo', models.IntegerField(null=True)), \
- 21:         ('campus_turma', models.CharField(max_length=50)), \
- 22:         ('local', models.CharField(max_length=50)), \
- 23:         ('ano', models.IntegerField()), \
- 24:         ('periodo', models.IntegerField()), \
- 25:         ('descricao_horario', models.CharField(max_length=150)), \
- 26:         ('capacidade_aluno', models.IntegerField()), \
- 27:         ('tipo', models.CharField(max_length=50)), \
- 28:         ('componente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.ComponenteCurricular'))])]
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.44192 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 225] IHD core.migrations.0039_auto_20200322_1138: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0038_sugestaoturma')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.87567 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 226] IHD core.migrations.0039_auto_20200322_1138: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0038_sugestaoturma')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='componentecurricular', 
- 15:         name='codigo', 
- 16:         field=models.CharField(max_length=25))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.52828 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 227] IHD core.migrations.0040_auto_20200324_1758: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0039_auto_20200322_1138')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.RemoveField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.69598 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 228] IHD core.migrations.0040_auto_20200324_1758: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0039_auto_20200322_1138')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.RemoveField(
- 15:         model_name='turma', 
- 16:         name='siape'), \
- 17:         \
- 18:         migrations.AddField(
- 19:         model_name='turma', 
- 20:         name='docente', 
- 21:         field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Docente'))]
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.30640 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 229] IHD core.migrations.0041_auto_20200324_1934: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0040_auto_20200324_1758')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.23354 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 230] IHD core.migrations.0041_auto_20200324_1934: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0040_auto_20200324_1758')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.AlterField(
- 15:         model_name='turma', 
- 16:         name='agrupadora', 
- 17:         field=models.BooleanField(blank=True)), \
- 18:         \
- 19:         migrations.AlterField(
- 20:         model_name='turma', 
- 21:         name='docente', 
- 22:         field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.PROTECT, to='core.Docente'), 
- 23:         preserve_default=False), \
- 24:         \
- 25:         migrations.AlterField(
- 26:         model_name='turma', 
- 27:         name='id_turma_agrupadora', 
- 28:         field=models.IntegerField(blank=True, null=True)), \
- 29:         \
- 30:         migrations.AlterField(
- 31:         model_name='turma', 
- 32:         name='observacao', 
- 33:         field=models.CharField(blank=True, max_length=250))]
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.31166 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 231] IHD core.migrations.0041_auto_20200325_2218: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0040_auto_20200324_1758')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.RemoveField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[7.26204 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 232] IHD core.migrations.0041_auto_20200325_2218: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0040_auto_20200324_1758')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.RemoveField(
- 15:         model_name='sugestaoturma', 
- 16:         name='siape'), \
- 17:         \
- 18:         migrations.AddField(
- 19:         model_name='sala', 
- 20:         name='campus', 
- 21:         field=models.CharField(blank=True, max_length=50, null=True)), \
- 22:         \
- 23:         migrations.AddField(
- 24:         model_name='sugestaoturma', 
- 25:         name='docente', 
- 26:         field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Docente')), \
- 27:         \
- 28:         migrations.AlterField(
- 29:         model_name='sugestaoturma', 
- 30:         name='local', 
- 31:         field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Sala')), \
- 32:         \
- 33:         migrations.AlterField(
- 34:         model_name='sugestaoturma', 
- 35:         name='matricula_docente_externo', 
- 36:         field=models.IntegerField(blank=True, null=True)), \
- 37:         \
- 38:         migrations.AlterField(
- 39:         model_name='sugestaoturma', 
- 40:         name='tipo', 
- 41:         field=models.CharField(blank=True, max_length=50, null=True)), \
- 42:         \
- 43:         migrations.AlterField(
- 44:         model_name='turma', 
- 45:         name='agrupadora', 
- 46:         field=models.BooleanField(blank=True)), \
- 47:         \
- 48:         migrations.AlterField(
- 49:         model_name='turma', 
- 50:         name='convenio', 
- 51:         field=models.CharField(blank=True, max_length=50, null=True)), \
- 52:         \
- 53:         migrations.AlterField(
- 54:         model_name='turma', 
- 55:         name='docente', 
- 56:         field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Docente')), \
- 57:         \
- 58:         migrations.AlterField(
- 59:         model_name='turma', 
- 60:         name='id_turma_agrupadora', 
- 61:         field=models.IntegerField(blank=True, null=True)), \
- 62:         \
- 63:         migrations.AlterField(
- 64:         model_name='turma', 
- 65:         name='matricula_docente_externo', 
- 66:         field=models.IntegerField(blank=True, null=True)), \
- 67:         \
- 68:         migrations.AlterField(
- 69:         model_name='turma', 
- 70:         name='observacao', 
- 71:         field=models.CharField(blank=True, max_length=250))]
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.47359 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 233] IHD core.migrations.0042_auto_20200324_1935: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0041_auto_20200324_1934')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.90483 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 234] IHD core.migrations.0042_auto_20200324_1935: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0041_auto_20200324_1934')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.AlterField(
- 15:         model_name='turma', 
- 16:         name='docente', 
- 17:         field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Docente'))]
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[7.13528 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 235] IHD core.migrations.0043_auto_20200324_1936: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0042_auto_20200324_1935')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[8.25173 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 236] IHD core.migrations.0043_auto_20200324_1936: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0042_auto_20200324_1935')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='turma', 
- 15:         name='matricula_docente_externo', 
- 16:         field=models.IntegerField(blank=True, null=True))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[6.15574 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 237] IHD core.migrations.0044_auto_20200324_1945: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0043_auto_20200324_1936')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[6.31438 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 238] IHD core.migrations.0044_auto_20200324_1945: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0043_auto_20200324_1936')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='turma', 
- 15:         name='convenio', 
- 16:         field=models.CharField(max_length=50, null=True))]
+ 12:     pass
--------------------------------------------------------------------------------
[5.47044 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 239] IHD core.migrations.0045_auto_20200324_1947: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0044_auto_20200324_1945')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[6.03882 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 240] IHD core.migrations.0045_auto_20200324_1947: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0044_auto_20200324_1945')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='turma', 
- 15:         name='convenio', 
- 16:         field=models.CharField(blank=True, max_length=50, null=True))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[8.11208 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 241] IHD core.migrations.0046_merge_20200325_2224: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0041_auto_20200325_2218'), \
- 10:         ('core', '0045_auto_20200324_1947')]
+  8:     pass
+  9:     
+ 10:     
  11:     
  12:     
  13:     operations = []
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[3.88928 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 242] IHD core.migrations.0046_merge_20200325_2224: 
--------------------------------------------------------------------------------
   9:         ('core', '0041_auto_20200325_2218'), \
  10:         ('core', '0045_auto_20200324_1947')]
  11:     
  12:     
- 13:     operations = []
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.95312 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 243] IHD core.migrations.0047_curso_coordenador: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0046_merge_20200325_2224')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.AddField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.12609 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 244] IHD core.migrations.0047_curso_coordenador: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0046_merge_20200325_2224')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.AddField(
- 15:         model_name='curso', 
- 16:         name='coordenador', 
- 17:         field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Docente'))]
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.14429 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 245] IHD core.migrations.0048_auto_20200402_1613: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0047_curso_coordenador')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterModelOptions(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.56143 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 246] IHD core.migrations.0048_auto_20200402_1613: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0047_curso_coordenador')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterModelOptions(
- 14:         name='componentecurricular', 
- 15:         options={'verbose_name': 'componente curricular', 'verbose_name_plural': 'componentes curriculares'}), \
- 16:         \
- 17:         migrations.AlterModelOptions(
- 18:         name='estruturacurricular', 
- 19:         options={'verbose_name': 'estrutura curricular', 'verbose_name_plural': 'estruturas curriculares'}), \
- 20:         \
- 21:         migrations.AlterModelOptions(
- 22:         name='organizacaocurricular', 
- 23:         options={'verbose_name': 'organização curricular', 'verbose_name_plural': 'organizações curriculares'}), \
- 24:         \
- 25:         migrations.AlterModelOptions(
- 26:         name='sugestaoturma', 
- 27:         options={'verbose_name': 'sugestão de turma', 'verbose_name_plural': 'sugestões de turmas'}), \
- 28:         \
- 29:         migrations.AlterUniqueTogether(
- 30:         name='sugestaoturma', 
- 31:         unique_together={('codigo_turma', 'componente', 'ano', 'periodo')}), \
- 32:         \
- 33:         migrations.AlterUniqueTogether(
- 34:         name='turma', 
- 35:         unique_together={('codigo_turma', 'componente', 'ano', 'periodo')})]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.03753 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 247] IHD core.migrations.0049_funcaogratificada_turmaestendida: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0048_auto_20200402_1613')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.CreateModel(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.22081 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 248] IHD core.migrations.0049_funcaogratificada_turmaestendida: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0048_auto_20200402_1613')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.CreateModel(
- 15:         name='FuncaoGratificada', 
- 16:         fields=[\
- 17:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 18:         ('siape', models.IntegerField()), \
- 19:         ('nome', models.CharField(max_length=200)), \
- 20:         ('situacao_servidor', models.CharField(max_length=25)), \
- 21:         ('id_unidade', models.IntegerField()), \
- 22:         ('lotacao', models.CharField(max_length=200)), \
- 23:         ('sigla', models.CharField(max_length=15)), \
- 24:         ('inicio', models.DateField()), \
- 25:         ('fim', models.DateField(null=True)), \
- 26:         ('id_unidade_designacao', models.IntegerField()), \
- 27:         ('unidade_designacao', models.CharField(max_length=200)), \
- 28:         ('atividade', models.CharField(max_length=100)), \
- 29:         ('observacoes', models.CharField(max_length=200, null=True))]), \
- 30:         \
- 31:         \
- 32:         migrations.CreateModel(
- 33:         name='TurmaEstendida', 
- 34:         fields=[\
- 35:         ('turma_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Turma'))], 
- 36:         
- 37:         bases=('core.turma',))]
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.06350 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 249] IHD core.migrations.0050_discente: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0049_funcaogratificada_turmaestendida')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.CreateModel(
--------------------------------------------------------------------------------
[4.42731 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 250] IHD core.migrations.0050_discente: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0049_funcaogratificada_turmaestendida')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.CreateModel(
- 14:         name='Discente', 
- 15:         fields=[\
- 16:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 17:         ('matricula', models.IntegerField()), \
- 18:         ('nome_discente', models.CharField(max_length=200)), \
- 19:         ('sexo', models.CharField(max_length=1)), \
- 20:         ('ano_ingresso', models.IntegerField()), \
- 21:         ('periodo_ingresso', models.IntegerField()), \
- 22:         ('forma_ingresso', models.CharField(max_length=100)), \
- 23:         ('tipo_discente', models.CharField(max_length=100)), \
- 24:         ('status', models.CharField(max_length=100)), \
- 25:         ('sigla_nivel_ensino', models.CharField(max_length=5)), \
- 26:         ('nivel_ensino', models.CharField(max_length=50)), \
- 27:         ('id_curso', models.CharField(max_length=100)), \
- 28:         ('nome_curso', models.CharField(max_length=200)), \
- 29:         ('modalidade_educacao', models.CharField(max_length=50)), \
- 30:         ('id_unidade', models.IntegerField()), \
- 31:         ('nome_unidade', models.CharField(max_length=200)), \
- 32:         ('id_unidade_gestora', models.IntegerField()), \
- 33:         ('nome_unidade_gestora', models.CharField(max_length=200))])]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.23934 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 251] IHD core.migrations.0051_auto_20200413_1233: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0050_discente')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.14696 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 252] IHD core.migrations.0051_auto_20200413_1233: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0050_discente')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='discente', 
- 15:         name='matricula', 
- 16:         field=models.IntegerField(unique=True))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.87750 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 253] IHD core.migrations.0052_auto_20200413_1257: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0051_auto_20200413_1233')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.60877 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 254] IHD core.migrations.0052_auto_20200413_1257: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0051_auto_20200413_1233')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='discente', 
- 15:         name='matricula', 
- 16:         field=models.CharField(max_length=15, unique=True))]
+ 12:     pass
--------------------------------------------------------------------------------
[4.48282 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 255] IHD core.migrations.0053_sugestaoturma_criada_por: 
--------------------------------------------------------------------------------
   6: 
   7: 
   8: class Migration(migrations.Migration):
   9:     
- 10:     dependencies = [\
- 11:         migrations.swappable_dependency(settings.AUTH_USER_MODEL), \
- 12:         ('core', '0052_auto_20200413_1257')]
+ 10:     pass
+ 11:     
+ 12:     
  13:     
  14:     
  15:     operations = [\
  16:         migrations.AddField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[3.84641 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 256] IHD core.migrations.0053_sugestaoturma_criada_por: 
--------------------------------------------------------------------------------
  11:         migrations.swappable_dependency(settings.AUTH_USER_MODEL), \
  12:         ('core', '0052_auto_20200413_1257')]
  13:     
  14:     
- 15:     operations = [\
- 16:         migrations.AddField(
- 17:         model_name='sugestaoturma', 
- 18:         name='criada_por', 
- 19:         field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL))]
+ 15:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.15484 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 257] IHD core.migrations.0054_auto_20200413_2238: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0053_sugestaoturma_criada_por')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.RenameField(
--------------------------------------------------------------------------------
[7.08284 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 258] IHD core.migrations.0054_auto_20200413_2238: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0053_sugestaoturma_criada_por')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.RenameField(
- 14:         model_name='sugestaoturma', 
- 15:         old_name='criada_por', 
- 16:         new_name='criador')]
+ 12:     pass
--------------------------------------------------------------------------------
[6.21782 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 259] IHD core.migrations.0055_auto_20200414_1839: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0054_auto_20200413_2238')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.CreateModel(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[7.41176 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 260] IHD core.migrations.0055_auto_20200414_1839: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0054_auto_20200413_2238')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.CreateModel(
- 15:         name='SugestaoTurmaEstendida', 
- 16:         fields=[\
- 17:         ('sugestaoturma_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.SugestaoTurma'))], 
- 18:         
- 19:         bases=('core.sugestaoturma',)), \
- 20:         \
- 21:         migrations.AddField(
- 22:         model_name='sugestaoturma', 
- 23:         name='total_solicitacoes', 
- 24:         field=models.IntegerField(null=True))]
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.70205 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 261] IHD core.migrations.0056_auto_20200414_2234: 
--------------------------------------------------------------------------------
   6: 
   7: 
   8: class Migration(migrations.Migration):
   9:     
- 10:     dependencies = [\
- 11:         migrations.swappable_dependency(settings.AUTH_USER_MODEL), \
- 12:         ('core', '0055_auto_20200414_1839')]
+ 10:     pass
+ 11:     
+ 12:     
  13:     
  14:     
  15:     operations = [\
  16:         migrations.AddField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.01664 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 262] IHD core.migrations.0056_auto_20200414_2234: 
--------------------------------------------------------------------------------
  11:         migrations.swappable_dependency(settings.AUTH_USER_MODEL), \
  12:         ('core', '0055_auto_20200414_1839')]
  13:     
  14:     
- 15:     operations = [\
- 16:         migrations.AddField(
- 17:         model_name='discente', 
- 18:         name='usuario', 
- 19:         field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)), \
- 20:         \
- 21:         migrations.AddField(
- 22:         model_name='docente', 
- 23:         name='usuario', 
- 24:         field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL))]
+ 15:     pass
--------------------------------------------------------------------------------
[7.33190 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 263] IHD core.migrations.0057_sugestaoturma_horarios: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0056_auto_20200414_2234')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.AddField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.43336 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 264] IHD core.migrations.0057_sugestaoturma_horarios: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0056_auto_20200414_2234')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.AddField(
- 15:         model_name='sugestaoturma', 
- 16:         name='horarios', 
- 17:         field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Horario'))]
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.29430 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 265] IHD core.migrations.0058_auto_20200421_2342: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0057_sugestaoturma_horarios')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.RemoveField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.55361 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 266] IHD core.migrations.0058_auto_20200421_2342: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0057_sugestaoturma_horarios')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.RemoveField(
- 14:         model_name='sugestaoturma', 
- 15:         name='horarios'), \
- 16:         \
- 17:         migrations.AddField(
- 18:         model_name='sugestaoturma', 
- 19:         name='horarios', 
- 20:         field=models.ManyToManyField(to='core.Horario'))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.50279 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 267] IHD core.migrations.0059_auto_20200421_2358: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0058_auto_20200421_2342')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.06476 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 268] IHD core.migrations.0059_auto_20200421_2358: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0058_auto_20200421_2342')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='sugestaoturma', 
- 15:         name='horarios', 
- 16:         field=models.ManyToManyField(related_name='sugestoes', to='core.Horario'))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.01486 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 269] IHD core.migrations.0060_auto_20200422_2255: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0059_auto_20200421_2358')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterUniqueTogether(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.75417 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 270] IHD core.migrations.0060_auto_20200422_2255: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0059_auto_20200421_2358')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterUniqueTogether(
- 14:         name='funcaogratificada', 
- 15:         unique_together={('siape', 'id_unidade', 'inicio', 'atividade')}), \
- 16:         \
- 17:         migrations.AlterUniqueTogether(
- 18:         name='sala', 
- 19:         unique_together={('sigla', 'bloco', 'centro', 'campus')})]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[7.03236 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 271] IHD core.migrations.0061_auto_20200423_1821: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0060_auto_20200422_2255')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.78522 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 272] IHD core.migrations.0061_auto_20200423_1821: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0060_auto_20200422_2255')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='sala', 
- 15:         name='campus', 
- 16:         field=models.CharField(blank=True, choices=[('1', 'Campus Caicó'), ('2', 'Campus Currais Novos')], max_length=50, null=True))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.67076 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 273] IHD core.migrations.0062_auto_20200425_2329: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0061_auto_20200423_1821')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.RenameField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.18052 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 274] IHD core.migrations.0062_auto_20200425_2329: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0061_auto_20200423_1821')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.RenameField(
- 14:         model_name='sugestaoturma', 
- 15:         old_name='horarios', 
- 16:         new_name='horarios_set')]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.52218 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 275] IHD core.migrations.0063_auto_20200425_2349: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0062_auto_20200425_2329')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.RenameField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.05121 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 276] IHD core.migrations.0063_auto_20200425_2349: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0062_auto_20200425_2329')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.RenameField(
- 14:         model_name='sugestaoturma', 
- 15:         old_name='horarios_set', 
- 16:         new_name='horarios')]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.23214 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 277] IHD core.migrations.0064_auto_20200426_0947: 
--------------------------------------------------------------------------------
   6: 
   7: 
   8: class Migration(migrations.Migration):
   9:     
- 10:     dependencies = [\
- 11:         ('core', '0063_auto_20200425_2349')]
+ 10:     pass
+ 11:     
  12:     
  13:     
  14:     operations = [\
  15:         migrations.AddField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.28713 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 278] IHD core.migrations.0064_auto_20200426_0947: 
--------------------------------------------------------------------------------
  10:     dependencies = [\
  11:         ('core', '0063_auto_20200425_2349')]
  12:     
  13:     
- 14:     operations = [\
- 15:         migrations.AddField(
- 16:         model_name='sugestaoturma', 
- 17:         name='criada_em', 
- 18:         field=models.DateField(auto_now_add=True, default=django.utils.timezone.now), 
- 19:         preserve_default=False), \
- 20:         \
- 21:         migrations.AddField(
- 22:         model_name='sugestaoturma', 
- 23:         name='curso', 
- 24:         field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Curso')), \
- 25:         \
- 26:         migrations.AddField(
- 27:         model_name='sugestaoturma', 
- 28:         name='semestre', 
- 29:         field=models.IntegerField(blank=True, null=True)), \
- 30:         \
- 31:         migrations.AddField(
- 32:         model_name='sugestaoturma', 
- 33:         name='tipo_vinculo', 
- 34:         field=models.CharField(blank=True, max_length=50, null=True))]
+ 14:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.71303 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 279] IHD core.migrations.0065_auto_20200427_2041: 
--------------------------------------------------------------------------------
   6: 
   7: 
   8: class Migration(migrations.Migration):
   9:     
- 10:     dependencies = [\
- 11:         migrations.swappable_dependency(settings.AUTH_USER_MODEL), \
- 12:         ('core', '0064_auto_20200426_0947')]
+ 10:     pass
+ 11:     
+ 12:     
  13:     
  14:     
  15:     operations = [\
  16:         migrations.CreateModel(
--------------------------------------------------------------------------------
[6.40140 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 280] IHD core.migrations.0065_auto_20200427_2041: 
--------------------------------------------------------------------------------
  11:         migrations.swappable_dependency(settings.AUTH_USER_MODEL), \
  12:         ('core', '0064_auto_20200426_0947')]
  13:     
  14:     
- 15:     operations = [\
- 16:         migrations.CreateModel(
- 17:         name='SolicitacaoTurma', 
- 18:         fields=[\
- 19:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 20:         ('criada_em', models.DateTimeField(auto_now_add=True)), \
- 21:         ('solicitador', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Discente')), \
- 22:         ('turma', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.SugestaoTurma')), \
- 23:         ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL))], 
- 24:         
- 25:         options={\
- 26:         'unique_together': {('solicitador', 'turma')}}), \
- 27:         \
- 28:         \
- 29:         migrations.DeleteModel(
- 30:         name='SugestaoTurmaEstendida')]
+ 15:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.21679 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 281] IHD core.migrations.0066_auto_20200427_2233: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0065_auto_20200427_2041')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[6.13207 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 282] IHD core.migrations.0066_auto_20200427_2233: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0065_auto_20200427_2041')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='sugestaoturma', 
- 15:         name='criada_em', 
- 16:         field=models.DateTimeField(auto_now_add=True))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[6.63555 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 283] IHD core.migrations.0067_turma_horarios: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0066_auto_20200427_2233')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AddField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[6.13912 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 284] IHD core.migrations.0067_turma_horarios: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0066_auto_20200427_2233')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AddField(
- 14:         model_name='turma', 
- 15:         name='horarios', 
- 16:         field=models.ManyToManyField(related_name='turmas', to='core.Horario'))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.75174 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 285] IHD core.migrations.0068_auto_20200511_1949: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0067_turma_horarios')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.10948 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 286] IHD core.migrations.0068_auto_20200511_1949: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0067_turma_horarios')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='sala', 
- 15:         name='campus', 
- 16:         field=models.CharField(blank=True, choices=[('1', 'Campus Caicó'), ('2', 'Campus Currais Novos')], max_length=1, null=True))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.16674 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 287] IHD core.migrations.0069_auto_20200511_2114: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0068_auto_20200511_1949')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.85641 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 288] IHD core.migrations.0069_auto_20200511_2114: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0068_auto_20200511_1949')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='funcaogratificada', 
- 15:         name='observacoes', 
- 16:         field=models.CharField(max_length=500, null=True))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.27694 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 289] IHD core.migrations.0070_auto_20200513_1723: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0069_auto_20200511_2114')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------
[5.68999 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 290] IHD core.migrations.0070_auto_20200513_1723: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0069_auto_20200511_2114')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='departamento', 
- 15:         name='site', 
- 16:         field=models.CharField(blank=True, max_length=250, null=True)), \
- 17:         \
- 18:         migrations.AlterField(
- 19:         model_name='discente', 
- 20:         name='sexo', 
- 21:         field=models.CharField(blank=True, max_length=1))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.11746 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 291] IHD core.migrations.0071_docente_departamento: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0070_auto_20200513_1723')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.AddField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.73908 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 292] IHD core.migrations.0071_docente_departamento: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0070_auto_20200513_1723')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.AddField(
- 15:         model_name='docente', 
- 16:         name='departamento', 
- 17:         field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Departamento'))]
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.68066 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 293] IHD core.migrations.0072_vinculodocente: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0071_docente_departamento')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.CreateModel(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[6.15957 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 294] IHD core.migrations.0072_vinculodocente: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0071_docente_departamento')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.CreateModel(
- 15:         name='VinculoDocente', 
- 16:         fields=[\
- 17:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 18:         ('carga_horaria', models.IntegerField()), \
- 19:         ('criada_em', models.DateTimeField(auto_now_add=True)), \
- 20:         ('docente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Docente')), \
- 21:         ('horarios', models.ManyToManyField(related_name='vinculos', to='core.Horario')), \
- 22:         ('turma', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Turma'))], 
- 23:         
- 24:         options={\
- 25:         'unique_together': {('docente', 'turma')}})]
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.81765 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 295] IHD core.migrations.0073_auto_20200520_1743: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0072_vinculodocente')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.65534 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 296] IHD core.migrations.0073_auto_20200520_1743: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0072_vinculodocente')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='docente', 
- 15:         name='admissao', 
- 16:         field=models.DateField(blank=True, null=True)), \
- 17:         \
- 18:         migrations.AlterField(
- 19:         model_name='docente', 
- 20:         name='sexo', 
- 21:         field=models.CharField(blank=True, max_length=1, null=True))]
+ 12:     pass
--------------------------------------------------------------------------------
[5.48963 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 297] IHD core.migrations.0074_delete_turmaestendida: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0073_auto_20200520_1743')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.DeleteModel(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.80091 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 298] IHD core.migrations.0074_delete_turmaestendida: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0073_auto_20200520_1743')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.DeleteModel(
- 14:         name='TurmaEstendida')]
+ 12:     pass
--------------------------------------------------------------------------------
[5.57833 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 299] IHD core.migrations.0075_auto_20200531_1317: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0074_delete_turmaestendida')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.66609 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 300] IHD core.migrations.0075_auto_20200531_1317: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0074_delete_turmaestendida')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='sala', 
- 15:         name='bloco', 
- 16:         field=models.CharField(max_length=25)), \
- 17:         \
- 18:         migrations.AlterField(
- 19:         model_name='sala', 
- 20:         name='sigla', 
- 21:         field=models.CharField(max_length=25))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.45536 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 301] IHD core.migrations.0076_periodoletivo: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0075_auto_20200531_1317')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.CreateModel(
--------------------------------------------------------------------------------
[5.76271 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 302] IHD core.migrations.0076_periodoletivo: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0075_auto_20200531_1317')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.CreateModel(
- 14:         name='PeriodoLetivo', 
- 15:         fields=[\
- 16:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 17:         ('nome', models.CharField(max_length=50)), \
- 18:         ('ano', models.IntegerField()), \
- 19:         ('periodo', models.IntegerField()), \
- 20:         ('data_inicio', models.DateField()), \
- 21:         ('data_fim', models.DateField()), \
- 22:         ('data_consolidacao', models.DateField()), \
- 23:         ('status', models.CharField(choices=[('1', 'Consolidado'), ('2', 'Ativo'), ('3', 'Planejado'), ('4', 'Suspenso'), ('5', 'Cancelado')], max_length=1)), \
- 24:         ('observacoes', models.CharField(blank=True, max_length=500, null=True))])]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.96933 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 303] IHD core.migrations.0077_enquete: 
--------------------------------------------------------------------------------
   6: 
   7: 
   8: class Migration(migrations.Migration):
   9:     
- 10:     dependencies = [\
- 11:         migrations.swappable_dependency(settings.AUTH_USER_MODEL), \
- 12:         ('core', '0076_periodoletivo')]
+ 10:     pass
+ 11:     
+ 12:     
  13:     
  14:     
  15:     operations = [\
  16:         migrations.CreateModel(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.69079 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 304] IHD core.migrations.0077_enquete: 
--------------------------------------------------------------------------------
  11:         migrations.swappable_dependency(settings.AUTH_USER_MODEL), \
  12:         ('core', '0076_periodoletivo')]
  13:     
  14:     
- 15:     operations = [\
- 16:         migrations.CreateModel(
- 17:         name='Enquete', 
- 18:         fields=[\
- 19:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 20:         ('nome', models.CharField(max_length=200)), \
- 21:         ('descricao', models.CharField(max_length=500, null=True)), \
- 22:         ('numero_votos', models.IntegerField()), \
- 23:         ('data_hora_inicio', models.DateTimeField()), \
- 24:         ('data_hora_fim', models.DateTimeField(blank=True, null=True)), \
- 25:         ('status', models.CharField(choices=[('1', 'Cadastrada'), ('2', 'Ativa'), ('3', 'Fechada')], max_length=1)), \
- 26:         ('criada_em', models.DateTimeField(auto_now_add=True)), \
- 27:         ('curso', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Curso')), \
- 28:         ('periodo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.PeriodoLetivo')), \
- 29:         ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL))], 
- 30:         
- 31:         options={\
- 32:         'unique_together': {('nome', 'curso')}})]
+ 15:     pass
--------------------------------------------------------------------------------
[6.35465 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 305] IHD core.migrations.0078_vototurma: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0077_enquete')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.CreateModel(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[6.15762 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 306] IHD core.migrations.0078_vototurma: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0077_enquete')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.CreateModel(
- 15:         name='VotoTurma', 
- 16:         fields=[\
- 17:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 18:         ('criado_em', models.DateTimeField(auto_now_add=True)), \
- 19:         ('componente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.ComponenteCurricular')), \
- 20:         ('discente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Discente')), \
- 21:         ('enquete', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='votos', to='core.Enquete')), \
- 22:         ('horarios', models.ManyToManyField(to='core.Horario'))], 
- 23:         
- 24:         options={\
- 25:         'unique_together': {('componente', 'discente')}})]
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.94582 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 307] IHD core.migrations.0079_auto_20200604_0242: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0078_vototurma')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterUniqueTogether(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.77686 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 308] IHD core.migrations.0079_auto_20200604_0242: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0078_vototurma')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterUniqueTogether(
- 14:         name='vototurma', 
- 15:         unique_together={('enquete', 'discente', 'componente')})]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[6.18164 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 309] IHD core.migrations.0080_auto_20200604_1142: 
--------------------------------------------------------------------------------
   6: 
   7: 
   8: class Migration(migrations.Migration):
   9:     
- 10:     dependencies = [\
- 11:         migrations.swappable_dependency(settings.AUTH_USER_MODEL), \
- 12:         ('core', '0079_auto_20200604_0242')]
+ 10:     pass
+ 11:     
+ 12:     
  13:     
  14:     
  15:     operations = [\
  16:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.31712 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 310] IHD core.migrations.0080_auto_20200604_1142: 
--------------------------------------------------------------------------------
  11:         migrations.swappable_dependency(settings.AUTH_USER_MODEL), \
  12:         ('core', '0079_auto_20200604_0242')]
  13:     
  14:     
- 15:     operations = [\
- 16:         migrations.AlterField(
- 17:         model_name='discente', 
- 18:         name='usuario', 
- 19:         field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL))]
+ 15:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.89494 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 311] IHD core.migrations.0081_enquete_tipo: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0080_auto_20200604_1142')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AddField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[6.18495 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 312] IHD core.migrations.0081_enquete_tipo: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0080_auto_20200604_1142')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AddField(
- 14:         model_name='enquete', 
- 15:         name='tipo', 
- 16:         field=models.CharField(choices=[('1', 'Completa'), ('2', 'Obrigatórias'), ('3', 'Optativas'), ('4', 'Parcial')], default='1', max_length=1), 
- 17:         preserve_default=False)]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[3.98302 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 313] IHD core.migrations.0082_auto_20200606_2235: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0081_enquete_tipo')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.AddField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[3.89804 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 314] IHD core.migrations.0082_auto_20200606_2235: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0081_enquete_tipo')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.AddField(
- 15:         model_name='vototurma', 
- 16:         name='tipo', 
- 17:         field=models.CharField(choices=[('1', 'Válido'), ('2', 'Abstenção')], default='1', max_length=1), 
- 18:         preserve_default=False), \
- 19:         \
- 20:         migrations.AlterField(
- 21:         model_name='vototurma', 
- 22:         name='componente', 
- 23:         field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.ComponenteCurricular'))]
+ 13:     pass
--------------------------------------------------------------------------------
[4.21314 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 315] IHD core.migrations.0083_vinculodocentesugestao: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0082_auto_20200606_2235')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.CreateModel(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.15729 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 316] IHD core.migrations.0083_vinculodocentesugestao: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0082_auto_20200606_2235')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.CreateModel(
- 15:         name='VinculoDocenteSugestao', 
- 16:         fields=[\
- 17:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 18:         ('carga_horaria', models.IntegerField()), \
- 19:         ('descricao_horario', models.CharField(max_length=150)), \
- 20:         ('criada_em', models.DateTimeField(auto_now_add=True)), \
- 21:         ('docente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Docente')), \
- 22:         ('horarios', models.ManyToManyField(related_name='vinculos_sugestao', to='core.Horario')), \
- 23:         ('sugestao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.SugestaoTurma'))], 
- 24:         
- 25:         options={\
- 26:         'unique_together': {('docente', 'sugestao')}})]
+ 13:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.38251 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 317] IHD core.migrations.0084_enquete_qtd_discentes_ativos: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0083_vinculodocentesugestao')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AddField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.46410 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 318] IHD core.migrations.0084_enquete_qtd_discentes_ativos: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0083_vinculodocentesugestao')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AddField(
- 14:         model_name='enquete', 
- 15:         name='qtd_discentes_ativos', 
- 16:         field=models.IntegerField(blank=True, null=True))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.87839 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 319] IHD core.migrations.0085_historico: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: class Migration(migrations.Migration):
   8:     
-  9:     dependencies = [\
- 10:         ('core', '0084_enquete_qtd_discentes_ativos')]
+  9:     pass
+ 10:     
  11:     
  12:     
  13:     operations = [\
  14:         migrations.CreateModel(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.42572 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 320] IHD core.migrations.0085_historico: 
--------------------------------------------------------------------------------
   9:     dependencies = [\
  10:         ('core', '0084_enquete_qtd_discentes_ativos')]
  11:     
  12:     
- 13:     operations = [\
- 14:         migrations.CreateModel(
- 15:         name='Historico', 
- 16:         fields=[\
- 17:         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \
- 18:         ('criado_em', models.DateTimeField(auto_now_add=True)), \
- 19:         ('componente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.componentecurricular')), \
- 20:         ('discente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.discente'))], 
- 21:         
- 22:         options={\
- 23:         'unique_together': {('discente', 'componente')}})]
+ 13:     pass
--------------------------------------------------------------------------------
[5.37240 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 321] IHD core.migrations.0086_estruturacurricular_status: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0085_historico')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AddField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[6.81914 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 322] IHD core.migrations.0086_estruturacurricular_status: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0085_historico')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AddField(
- 14:         model_name='estruturacurricular', 
- 15:         name='status', 
- 16:         field=models.CharField(choices=[('1', 'Ativa'), ('2', 'Inativa')], max_length=1, null=True))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[4.22243 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 323] IHD core.migrations.0087_auto_20201130_2157: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: class Migration(migrations.Migration):
   7:     
-  8:     dependencies = [\
-  9:         ('core', '0086_estruturacurricular_status')]
+  8:     pass
+  9:     
  10:     
  11:     
  12:     operations = [\
  13:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[6.06139 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 324] IHD core.migrations.0087_auto_20201130_2157: 
--------------------------------------------------------------------------------
   8:     dependencies = [\
   9:         ('core', '0086_estruturacurricular_status')]
  10:     
  11:     
- 12:     operations = [\
- 13:         migrations.AlterField(
- 14:         model_name='estruturacurricular', 
- 15:         name='ch_atividade_obrigatoria', 
- 16:         field=models.IntegerField(blank=True, null=True)), \
- 17:         \
- 18:         migrations.AlterField(
- 19:         model_name='estruturacurricular', 
- 20:         name='ch_complementar_minima', 
- 21:         field=models.IntegerField(blank=True, null=True)), \
- 22:         \
- 23:         migrations.AlterField(
- 24:         model_name='estruturacurricular', 
- 25:         name='ch_ideal_semestre', 
- 26:         field=models.IntegerField(blank=True, null=True)), \
- 27:         \
- 28:         migrations.AlterField(
- 29:         model_name='estruturacurricular', 
- 30:         name='ch_maxima_semestre', 
- 31:         field=models.IntegerField(blank=True, null=True)), \
- 32:         \
- 33:         migrations.AlterField(
- 34:         model_name='estruturacurricular', 
- 35:         name='ch_minima_semestre', 
- 36:         field=models.IntegerField(blank=True, null=True)), \
- 37:         \
- 38:         migrations.AlterField(
- 39:         model_name='estruturacurricular', 
- 40:         name='ch_nao_atividade_obrigatoria', 
- 41:         field=models.IntegerField(blank=True, null=True)), \
- 42:         \
- 43:         migrations.AlterField(
- 44:         model_name='estruturacurricular', 
- 45:         name='cr_ideal_semestre', 
- 46:         field=models.IntegerField(blank=True, null=True)), \
- 47:         \
- 48:         migrations.AlterField(
- 49:         model_name='estruturacurricular', 
- 50:         name='cr_maximo_semestre', 
- 51:         field=models.IntegerField(blank=True, null=True)), \
- 52:         \
- 53:         migrations.AlterField(
- 54:         model_name='estruturacurricular', 
- 55:         name='cr_minimo_semestre', 
- 56:         field=models.IntegerField(blank=True, null=True)), \
- 57:         \
- 58:         migrations.AlterField(
- 59:         model_name='estruturacurricular', 
- 60:         name='cr_nao_atividade_obrigatorio', 
- 61:         field=models.IntegerField(blank=True, null=True)), \
- 62:         \
- 63:         migrations.AlterField(
- 64:         model_name='estruturacurricular', 
- 65:         name='cr_total_minimo', 
- 66:         field=models.IntegerField(blank=True, null=True)), \
- 67:         \
- 68:         migrations.AlterField(
- 69:         model_name='estruturacurricular', 
- 70:         name='max_eletivos', 
- 71:         field=models.IntegerField(blank=True, null=True)), \
- 72:         \
- 73:         migrations.AlterField(
- 74:         model_name='estruturacurricular', 
- 75:         name='meses_conclusao_ideal', 
- 76:         field=models.IntegerField(blank=True, null=True)), \
- 77:         \
- 78:         migrations.AlterField(
- 79:         model_name='estruturacurricular', 
- 80:         name='meses_conclusao_maximo', 
- 81:         field=models.IntegerField(blank=True, null=True)), \
- 82:         \
- 83:         migrations.AlterField(
- 84:         model_name='estruturacurricular', 
- 85:         name='meses_conclusao_minimo', 
- 86:         field=models.IntegerField(blank=True, null=True)), \
- 87:         \
- 88:         migrations.AlterField(
- 89:         model_name='estruturacurricular', 
- 90:         name='observacao', 
- 91:         field=models.TextField(blank=True, max_length=500, null=True))]
+ 12:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[6.08619 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 325] IHD core.migrations.0088_auto_20210403_2348: 
--------------------------------------------------------------------------------
   6: 
   7: 
   8: class Migration(migrations.Migration):
   9:     
- 10:     dependencies = [\
- 11:         ('core', '0087_auto_20201130_2157')]
+ 10:     pass
+ 11:     
  12:     
  13:     
  14:     operations = [\
  15:         migrations.AddField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.65802 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 326] IHD core.migrations.0088_auto_20210403_2348: 
--------------------------------------------------------------------------------
  10:     dependencies = [\
  11:         ('core', '0087_auto_20201130_2157')]
  12:     
  13:     
- 14:     operations = [\
- 15:         migrations.AddField(
- 16:         model_name='historico', 
- 17:         name='semestre', 
- 18:         field=models.CharField(max_length=1), 
- 19:         preserve_default=False), \
- 20:         \
- 21:         migrations.AlterField(
- 22:         model_name='historico', 
- 23:         name='componente', 
- 24:         field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.componentecurricular'), 
- 25:         preserve_default=False)]
+ 14:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.35846 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 327] IHD core.migrations.0089_auto_20210421_1938: 
--------------------------------------------------------------------------------
   6: 
   7: 
   8: class Migration(migrations.Migration):
   9:     
- 10:     dependencies = [\
- 11:         migrations.swappable_dependency(settings.AUTH_USER_MODEL), \
- 12:         ('core', '0088_auto_20210403_2348')]
+ 10:     pass
+ 11:     
+ 12:     
  13:     
  14:     
  15:     operations = [\
  16:         migrations.AlterField(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[6.00343 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 328] IHD core.migrations.0089_auto_20210421_1938: 
--------------------------------------------------------------------------------
  11:         migrations.swappable_dependency(settings.AUTH_USER_MODEL), \
  12:         ('core', '0088_auto_20210403_2348')]
  13:     
  14:     
- 15:     operations = [\
- 16:         migrations.AlterField(
- 17:         model_name='docente', 
- 18:         name='usuario', 
- 19:         field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL))]
+ 15:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9999 - BANCO DE DADOS - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9998 - ENGENHARIA DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 1 (9999999) - DCT9997 - TESTE DE SOFTWARE - 60
Add Vínculo Docente: Nome Docente Teste 2 (9999997) - DCT9997 - TESTE DE SOFTWARE - 60

> removendo dados
...............[5.43477 s] killed by test_get_discentes_by_matricula (core.tests.test_a_povoamento.ATests)
   - [# 329] AOR core.models: 
--------------------------------------------------------------------------------
   14:     endereco = models.CharField(max_length=250, blank=True, null=True)
   15:     site = models.CharField(max_length=250)
   16:     
   17:     def __str__(self):
-  18:         return (self.nome + ' - ') + self.sigla
+  18:         return (self.nome - ' - ') + self.sigla
   19: 
   20: 
   21: class Departamento(models.Model):
   22:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[4.43083 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 330] AOR core.models: 
--------------------------------------------------------------------------------
   14:     endereco = models.CharField(max_length=250, blank=True, null=True)
   15:     site = models.CharField(max_length=250)
   16:     
   17:     def __str__(self):
-  18:         return (self.nome + ' - ') + self.sigla
+  18:         return (self.nome + ' - ') - self.sigla
   19: 
   20: 
   21: class Departamento(models.Model):
   22:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[4.39549 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 331] AOR core.models: 
--------------------------------------------------------------------------------
   30:     site = models.CharField(max_length=250, blank=True, null=True)
   31:     centro = models.ForeignKey(Centro, on_delete=models.PROTECT)
   32:     
   33:     def __str__(self):
-  34:         return (((self.nome + ' - ') + self.sigla) + '/') + self.centro.sigla
+  34:         return (((self.nome - ' - ') + self.sigla) + '/') + self.centro.sigla
   35: 
   36: 
   37: class Docente(models.Model):
   38:     siape = models.IntegerField(unique=True)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[5.02311 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 332] AOR core.models: 
--------------------------------------------------------------------------------
   30:     site = models.CharField(max_length=250, blank=True, null=True)
   31:     centro = models.ForeignKey(Centro, on_delete=models.PROTECT)
   32:     
   33:     def __str__(self):
-  34:         return (((self.nome + ' - ') + self.sigla) + '/') + self.centro.sigla
+  34:         return (((self.nome + ' - ') - self.sigla) + '/') + self.centro.sigla
   35: 
   36: 
   37: class Docente(models.Model):
   38:     siape = models.IntegerField(unique=True)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[4.50703 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 333] AOR core.models: 
--------------------------------------------------------------------------------
   30:     site = models.CharField(max_length=250, blank=True, null=True)
   31:     centro = models.ForeignKey(Centro, on_delete=models.PROTECT)
   32:     
   33:     def __str__(self):
-  34:         return (((self.nome + ' - ') + self.sigla) + '/') + self.centro.sigla
+  34:         return (((self.nome + ' - ') + self.sigla) - '/') + self.centro.sigla
   35: 
   36: 
   37: class Docente(models.Model):
   38:     siape = models.IntegerField(unique=True)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[3.86979 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 334] AOR core.models: 
--------------------------------------------------------------------------------
   30:     site = models.CharField(max_length=250, blank=True, null=True)
   31:     centro = models.ForeignKey(Centro, on_delete=models.PROTECT)
   32:     
   33:     def __str__(self):
-  34:         return (((self.nome + ' - ') + self.sigla) + '/') + self.centro.sigla
+  34:         return (((self.nome + ' - ') + self.sigla) + '/') - self.centro.sigla
   35: 
   36: 
   37: class Docente(models.Model):
   38:     siape = models.IntegerField(unique=True)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[4.02629 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 335] AOR core.models: 
--------------------------------------------------------------------------------
   59:     
   60:     def siglas_str(self):
   61:         siglas = ''
   62:         if self.departamento:
-  63:             siglas = ' - ' + self.departamento.sigla
+  63:             siglas = ' - ' - self.departamento.sigla
   64:             if self.departamento.centro:
   65:                 siglas = (siglas + '/') + self.departamento.centro.sigla
   66:         return siglas
   67:     
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[5.45815 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 336] AOR core.models: 
--------------------------------------------------------------------------------
   61:         siglas = ''
   62:         if self.departamento:
   63:             siglas = ' - ' + self.departamento.sigla
   64:             if self.departamento.centro:
-  65:                 siglas = (siglas + '/') + self.departamento.centro.sigla
+  65:                 siglas = (siglas - '/') + self.departamento.centro.sigla
   66:         return siglas
   67:     
   68:     def __str__(self):
   69:         return (((self.nome + ' (') + str(self.siape)) + ')') + self.siglas_str()
--------------------------------------------------------------------------------
[5.77845 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 337] AOR core.models: 
--------------------------------------------------------------------------------
   61:         siglas = ''
   62:         if self.departamento:
   63:             siglas = ' - ' + self.departamento.sigla
   64:             if self.departamento.centro:
-  65:                 siglas = (siglas + '/') + self.departamento.centro.sigla
+  65:                 siglas = (siglas + '/') - self.departamento.centro.sigla
   66:         return siglas
   67:     
   68:     def __str__(self):
   69:         return (((self.nome + ' (') + str(self.siape)) + ')') + self.siglas_str()
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[6.26709 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 338] AOR core.models: 
--------------------------------------------------------------------------------
   65:                 siglas = (siglas + '/') + self.departamento.centro.sigla
   66:         return siglas
   67:     
   68:     def __str__(self):
-  69:         return (((self.nome + ' (') + str(self.siape)) + ')') + self.siglas_str()
+  69:         return (((self.nome - ' (') + str(self.siape)) + ')') + self.siglas_str()
   70: 
   71: 
   72: class Curso(models.Model):
   73:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[4.09981 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 339] AOR core.models: 
--------------------------------------------------------------------------------
   65:                 siglas = (siglas + '/') + self.departamento.centro.sigla
   66:         return siglas
   67:     
   68:     def __str__(self):
-  69:         return (((self.nome + ' (') + str(self.siape)) + ')') + self.siglas_str()
+  69:         return (((self.nome + ' (') - str(self.siape)) + ')') + self.siglas_str()
   70: 
   71: 
   72: class Curso(models.Model):
   73:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[3.48691 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 340] AOR core.models: 
--------------------------------------------------------------------------------
   65:                 siglas = (siglas + '/') + self.departamento.centro.sigla
   66:         return siglas
   67:     
   68:     def __str__(self):
-  69:         return (((self.nome + ' (') + str(self.siape)) + ')') + self.siglas_str()
+  69:         return (((self.nome + ' (') + str(self.siape)) - ')') + self.siglas_str()
   70: 
   71: 
   72: class Curso(models.Model):
   73:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[4.44961 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 341] AOR core.models: 
--------------------------------------------------------------------------------
   65:                 siglas = (siglas + '/') + self.departamento.centro.sigla
   66:         return siglas
   67:     
   68:     def __str__(self):
-  69:         return (((self.nome + ' (') + str(self.siape)) + ')') + self.siglas_str()
+  69:         return (((self.nome + ' (') + str(self.siape)) + ')') - self.siglas_str()
   70: 
   71: 
   72: class Curso(models.Model):
   73:     '''
--------------------------------------------------------------------------------
[5.44584 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 342] AOR core.models: 
--------------------------------------------------------------------------------
   82:     turno = models.CharField(max_length=50)
   83:     centro = models.ForeignKey(Centro, on_delete=models.PROTECT)
   84:     
   85:     def __str__(self):
-  86:         return (((self.nome + ' - ') + self.grau) + ' - ') + self.centro.sigla
+  86:         return (((self.nome - ' - ') + self.grau) + ' - ') + self.centro.sigla
   87: 
   88: 
   89: class Sala(models.Model):
   90:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[5.32018 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 343] AOR core.models: 
--------------------------------------------------------------------------------
   82:     turno = models.CharField(max_length=50)
   83:     centro = models.ForeignKey(Centro, on_delete=models.PROTECT)
   84:     
   85:     def __str__(self):
-  86:         return (((self.nome + ' - ') + self.grau) + ' - ') + self.centro.sigla
+  86:         return (((self.nome + ' - ') - self.grau) + ' - ') + self.centro.sigla
   87: 
   88: 
   89: class Sala(models.Model):
   90:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[5.88112 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 344] AOR core.models: 
--------------------------------------------------------------------------------
   82:     turno = models.CharField(max_length=50)
   83:     centro = models.ForeignKey(Centro, on_delete=models.PROTECT)
   84:     
   85:     def __str__(self):
-  86:         return (((self.nome + ' - ') + self.grau) + ' - ') + self.centro.sigla
+  86:         return (((self.nome + ' - ') + self.grau) - ' - ') + self.centro.sigla
   87: 
   88: 
   89: class Sala(models.Model):
   90:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[5.06044 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 345] AOR core.models: 
--------------------------------------------------------------------------------
   82:     turno = models.CharField(max_length=50)
   83:     centro = models.ForeignKey(Centro, on_delete=models.PROTECT)
   84:     
   85:     def __str__(self):
-  86:         return (((self.nome + ' - ') + self.grau) + ' - ') + self.centro.sigla
+  86:         return (((self.nome + ' - ') + self.grau) + ' - ') - self.centro.sigla
   87: 
   88: 
   89: class Sala(models.Model):
   90:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[4.74965 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 346] AOR core.models: 
--------------------------------------------------------------------------------
  106:     class Meta:
  107:         unique_together = ('sigla', 'bloco', 'centro', 'campus')
  108:     
  109:     def __str__(self):
- 110:         return ((((((self.nome + ' (') + self.capacidade.__str__()) + ')') + ' - ') + \
+ 110:         return ((((((self.nome - ' (') + self.capacidade.__str__()) + ')') + ' - ') + \
  111:             self.bloco) + ' - ') + self.get_campus_display()
  112: 
  113: 
  114: class ComponenteCurricular(models.Model):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................
CurriculoTests
> povoando dados
[138.63079 s] timeout
   - [# 347] AOR core.models: 
--------------------------------------------------------------------------------
  106:     class Meta:
  107:         unique_together = ('sigla', 'bloco', 'centro', 'campus')
  108:     
  109:     def __str__(self):
- 110:         return ((((((self.nome + ' (') + self.capacidade.__str__()) + ')') + ' - ') + \
+ 110:         return ((((((self.nome + ' (') - self.capacidade.__str__()) + ')') + ' - ') + \
  111:             self.bloco) + ' - ') + self.get_campus_display()
  112: 
  113: 
  114: class ComponenteCurricular(models.Model):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................
CurriculoTests
> povoando dados
[138.57829 s] timeout
   - [# 348] AOR core.models: 
--------------------------------------------------------------------------------
  106:     class Meta:
  107:         unique_together = ('sigla', 'bloco', 'centro', 'campus')
  108:     
  109:     def __str__(self):
- 110:         return ((((((self.nome + ' (') + self.capacidade.__str__()) + ')') + ' - ') + \
+ 110:         return ((((((self.nome + ' (') + self.capacidade.__str__()) - ')') + ' - ') + \
  111:             self.bloco) + ' - ') + self.get_campus_display()
  112: 
  113: 
  114: class ComponenteCurricular(models.Model):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................
CurriculoTests
> povoando dados
[138.63550 s] timeout
   - [# 349] AOR core.models: 
--------------------------------------------------------------------------------
  106:     class Meta:
  107:         unique_together = ('sigla', 'bloco', 'centro', 'campus')
  108:     
  109:     def __str__(self):
- 110:         return ((((((self.nome + ' (') + self.capacidade.__str__()) + ')') + ' - ') + \
+ 110:         return ((((((self.nome + ' (') + self.capacidade.__str__()) + ')') - ' - ') + \
  111:             self.bloco) + ' - ') + self.get_campus_display()
  112: 
  113: 
  114: class ComponenteCurricular(models.Model):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................
CurriculoTests
> povoando dados
[138.63268 s] timeout
   - [# 350] AOR core.models: 
--------------------------------------------------------------------------------
  106:     class Meta:
  107:         unique_together = ('sigla', 'bloco', 'centro', 'campus')
  108:     
  109:     def __str__(self):
- 110:         return ((((((self.nome + ' (') + self.capacidade.__str__()) + ')') + ' - ') + \
+ 110:         return ((((((self.nome + ' (') + self.capacidade.__str__()) + ')') + ' - ') - \
  111:             self.bloco) + ' - ') + self.get_campus_display()
  112: 
  113: 
  114: class ComponenteCurricular(models.Model):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................
CurriculoTests
> povoando dados
[138.62808 s] timeout
   - [# 351] AOR core.models: 
--------------------------------------------------------------------------------
  107:         unique_together = ('sigla', 'bloco', 'centro', 'campus')
  108:     
  109:     def __str__(self):
  110:         return ((((((self.nome + ' (') + self.capacidade.__str__()) + ')') + ' - ') + \
- 111:             self.bloco) + ' - ') + self.get_campus_display()
+ 111:             self.bloco) - ' - ') + self.get_campus_display()
  112: 
  113: 
  114: class ComponenteCurricular(models.Model):
  115:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................
CurriculoTests
> povoando dados
[138.62836 s] timeout
   - [# 352] AOR core.models: 
--------------------------------------------------------------------------------
  107:         unique_together = ('sigla', 'bloco', 'centro', 'campus')
  108:     
  109:     def __str__(self):
  110:         return ((((((self.nome + ' (') + self.capacidade.__str__()) + ')') + ' - ') + \
- 111:             self.bloco) + ' - ') + self.get_campus_display()
+ 111:             self.bloco) + ' - ') - self.get_campus_display()
  112: 
  113: 
  114: class ComponenteCurricular(models.Model):
  115:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................
CurriculoTests
> povoando dados
[138.62846 s] timeout
   - [# 353] AOR core.models: 
--------------------------------------------------------------------------------
  139:         verbose_name = 'componente curricular'
  140:         verbose_name_plural = 'componentes curriculares'
  141:     
  142:     def __str__(self):
- 143:         return (self.codigo + ' - ') + self.nome
+ 143:         return (self.codigo - ' - ') + self.nome
  144: 
  145: 
  146: class EstruturaCurricular(models.Model):
  147:     id_curriculo = models.IntegerField(unique=True)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.35779 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 354] AOR core.models: 
--------------------------------------------------------------------------------
  139:         verbose_name = 'componente curricular'
  140:         verbose_name_plural = 'componentes curriculares'
  141:     
  142:     def __str__(self):
- 143:         return (self.codigo + ' - ') + self.nome
+ 143:         return (self.codigo + ' - ') - self.nome
  144: 
  145: 
  146: class EstruturaCurricular(models.Model):
  147:     id_curriculo = models.IntegerField(unique=True)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.96271 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 355] AOR core.models: 
--------------------------------------------------------------------------------
  184:         verbose_name = 'estrutura curricular'
  185:         verbose_name_plural = 'estruturas curriculares'
  186:     
  187:     def __str__(self):
- 188:         return (self.codigo + ' - ') + self.nome
+ 188:         return (self.codigo - ' - ') + self.nome
  189: 
  190: 
  191: class OrganizacaoCurricular(models.Model):
  192:     id_curriculo_componente = models.IntegerField(unique=True)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.30448 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 356] AOR core.models: 
--------------------------------------------------------------------------------
  184:         verbose_name = 'estrutura curricular'
  185:         verbose_name_plural = 'estruturas curriculares'
  186:     
  187:     def __str__(self):
- 188:         return (self.codigo + ' - ') + self.nome
+ 188:         return (self.codigo + ' - ') - self.nome
  189: 
  190: 
  191: class OrganizacaoCurricular(models.Model):
  192:     id_curriculo_componente = models.IntegerField(unique=True)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.70246 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 357] AOR core.models: 
--------------------------------------------------------------------------------
  200:         verbose_name = 'organização curricular'
  201:         verbose_name_plural = 'organizações curriculares'
  202:     
  203:     def __str__(self):
- 204:         return (self.componente.nome + ' - ') + self.estrutura.nome
+ 204:         return (self.componente.nome - ' - ') + self.estrutura.nome
  205: 
  206: 
  207: class Horario(models.Model):
  208:     DIAS = (\
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.87531 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 358] AOR core.models: 
--------------------------------------------------------------------------------
  200:         verbose_name = 'organização curricular'
  201:         verbose_name_plural = 'organizações curriculares'
  202:     
  203:     def __str__(self):
- 204:         return (self.componente.nome + ' - ') + self.estrutura.nome
+ 204:         return (self.componente.nome + ' - ') - self.estrutura.nome
  205: 
  206: 
  207: class Horario(models.Model):
  208:     DIAS = (\
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.33716 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 359] AOR core.models: 
--------------------------------------------------------------------------------
  246:     def __hash__(self):
  247:         return id(self)
  248:     
  249:     def __str__(self):
- 250:         return (self.dia + self.turno) + self.ordem
+ 250:         return (self.dia - self.turno) + self.ordem
  251: 
  252: 
  253: class Turma(models.Model):
  254:     id_turma = models.IntegerField()
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.99448 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 360] AOR core.models: 
--------------------------------------------------------------------------------
  246:     def __hash__(self):
  247:         return id(self)
  248:     
  249:     def __str__(self):
- 250:         return (self.dia + self.turno) + self.ordem
+ 250:         return (self.dia + self.turno) - self.ordem
  251: 
  252: 
  253: class Turma(models.Model):
  254:     id_turma = models.IntegerField()
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.42077 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 361] AOR core.models: 
--------------------------------------------------------------------------------
  282:     class Meta:
  283:         unique_together = ('codigo_turma', 'componente', 'ano', 'periodo')
  284:     
  285:     def __str__(self):
- 286:         return (((((((self.id_turma.__str__() + ' - ') + self.codigo_turma) + ' - ') + self.componente.__str__()) + ' - ') + \
+ 286:         return (((((((self.id_turma.__str__() - ' - ') + self.codigo_turma) + ' - ') + self.componente.__str__()) + ' - ') + \
  287:             self.docente.__str__()) + ' - ') + self.descricao_horario
  288:     
  289:     def get_curriculos(self, estrutura=None):
  290:         if estrutura:
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.39487 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 362] AOR core.models: 
--------------------------------------------------------------------------------
  282:     class Meta:
  283:         unique_together = ('codigo_turma', 'componente', 'ano', 'periodo')
  284:     
  285:     def __str__(self):
- 286:         return (((((((self.id_turma.__str__() + ' - ') + self.codigo_turma) + ' - ') + self.componente.__str__()) + ' - ') + \
+ 286:         return (((((((self.id_turma.__str__() + ' - ') - self.codigo_turma) + ' - ') + self.componente.__str__()) + ' - ') + \
  287:             self.docente.__str__()) + ' - ') + self.descricao_horario
  288:     
  289:     def get_curriculos(self, estrutura=None):
  290:         if estrutura:
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.46354 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 363] AOR core.models: 
--------------------------------------------------------------------------------
  282:     class Meta:
  283:         unique_together = ('codigo_turma', 'componente', 'ano', 'periodo')
  284:     
  285:     def __str__(self):
- 286:         return (((((((self.id_turma.__str__() + ' - ') + self.codigo_turma) + ' - ') + self.componente.__str__()) + ' - ') + \
+ 286:         return (((((((self.id_turma.__str__() + ' - ') + self.codigo_turma) - ' - ') + self.componente.__str__()) + ' - ') + \
  287:             self.docente.__str__()) + ' - ') + self.descricao_horario
  288:     
  289:     def get_curriculos(self, estrutura=None):
  290:         if estrutura:
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.80774 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 364] AOR core.models: 
--------------------------------------------------------------------------------
  282:     class Meta:
  283:         unique_together = ('codigo_turma', 'componente', 'ano', 'periodo')
  284:     
  285:     def __str__(self):
- 286:         return (((((((self.id_turma.__str__() + ' - ') + self.codigo_turma) + ' - ') + self.componente.__str__()) + ' - ') + \
+ 286:         return (((((((self.id_turma.__str__() + ' - ') + self.codigo_turma) + ' - ') - self.componente.__str__()) + ' - ') + \
  287:             self.docente.__str__()) + ' - ') + self.descricao_horario
  288:     
  289:     def get_curriculos(self, estrutura=None):
  290:         if estrutura:
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.49037 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 365] AOR core.models: 
--------------------------------------------------------------------------------
  282:     class Meta:
  283:         unique_together = ('codigo_turma', 'componente', 'ano', 'periodo')
  284:     
  285:     def __str__(self):
- 286:         return (((((((self.id_turma.__str__() + ' - ') + self.codigo_turma) + ' - ') + self.componente.__str__()) + ' - ') + \
+ 286:         return (((((((self.id_turma.__str__() + ' - ') + self.codigo_turma) + ' - ') + self.componente.__str__()) - ' - ') + \
  287:             self.docente.__str__()) + ' - ') + self.descricao_horario
  288:     
  289:     def get_curriculos(self, estrutura=None):
  290:         if estrutura:
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.72963 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 366] AOR core.models: 
--------------------------------------------------------------------------------
  282:     class Meta:
  283:         unique_together = ('codigo_turma', 'componente', 'ano', 'periodo')
  284:     
  285:     def __str__(self):
- 286:         return (((((((self.id_turma.__str__() + ' - ') + self.codigo_turma) + ' - ') + self.componente.__str__()) + ' - ') + \
+ 286:         return (((((((self.id_turma.__str__() + ' - ') + self.codigo_turma) + ' - ') + self.componente.__str__()) + ' - ') - \
  287:             self.docente.__str__()) + ' - ') + self.descricao_horario
  288:     
  289:     def get_curriculos(self, estrutura=None):
  290:         if estrutura:
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.36540 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 367] AOR core.models: 
--------------------------------------------------------------------------------
  283:         unique_together = ('codigo_turma', 'componente', 'ano', 'periodo')
  284:     
  285:     def __str__(self):
  286:         return (((((((self.id_turma.__str__() + ' - ') + self.codigo_turma) + ' - ') + self.componente.__str__()) + ' - ') + \
- 287:             self.docente.__str__()) + ' - ') + self.descricao_horario
+ 287:             self.docente.__str__()) - ' - ') + self.descricao_horario
  288:     
  289:     def get_curriculos(self, estrutura=None):
  290:         if estrutura:
  291:             return OrganizacaoCurricular.objects.get(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.32643 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 368] AOR core.models: 
--------------------------------------------------------------------------------
  283:         unique_together = ('codigo_turma', 'componente', 'ano', 'periodo')
  284:     
  285:     def __str__(self):
  286:         return (((((((self.id_turma.__str__() + ' - ') + self.codigo_turma) + ' - ') + self.componente.__str__()) + ' - ') + \
- 287:             self.docente.__str__()) + ' - ') + self.descricao_horario
+ 287:             self.docente.__str__()) + ' - ') - self.descricao_horario
  288:     
  289:     def get_curriculos(self, estrutura=None):
  290:         if estrutura:
  291:             return OrganizacaoCurricular.objects.get(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.35935 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 369] AOR core.models: 
--------------------------------------------------------------------------------
  319:         verbose_name = 'sugestão de turma'
  320:         verbose_name_plural = 'sugestões de turmas'
  321:     
  322:     def __str__(self):
- 323:         return ((((((((self.codigo_turma + ' - ') + str(self.componente)) + ' - ') + \
+ 323:         return ((((((((self.codigo_turma - ' - ') + str(self.componente)) + ' - ') + \
  324:             self.descricao_horario) + ' (') + str(self.ano)) + '.') + str(self.periodo)) + ')'
  325: 
  326: 
  327: class FuncaoGratificada(models.Model):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.54753 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 370] AOR core.models: 
--------------------------------------------------------------------------------
  319:         verbose_name = 'sugestão de turma'
  320:         verbose_name_plural = 'sugestões de turmas'
  321:     
  322:     def __str__(self):
- 323:         return ((((((((self.codigo_turma + ' - ') + str(self.componente)) + ' - ') + \
+ 323:         return ((((((((self.codigo_turma + ' - ') - str(self.componente)) + ' - ') + \
  324:             self.descricao_horario) + ' (') + str(self.ano)) + '.') + str(self.periodo)) + ')'
  325: 
  326: 
  327: class FuncaoGratificada(models.Model):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.56595 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 371] AOR core.models: 
--------------------------------------------------------------------------------
  319:         verbose_name = 'sugestão de turma'
  320:         verbose_name_plural = 'sugestões de turmas'
  321:     
  322:     def __str__(self):
- 323:         return ((((((((self.codigo_turma + ' - ') + str(self.componente)) + ' - ') + \
+ 323:         return ((((((((self.codigo_turma + ' - ') + str(self.componente)) - ' - ') + \
  324:             self.descricao_horario) + ' (') + str(self.ano)) + '.') + str(self.periodo)) + ')'
  325: 
  326: 
  327: class FuncaoGratificada(models.Model):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.88982 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 372] AOR core.models: 
--------------------------------------------------------------------------------
  319:         verbose_name = 'sugestão de turma'
  320:         verbose_name_plural = 'sugestões de turmas'
  321:     
  322:     def __str__(self):
- 323:         return ((((((((self.codigo_turma + ' - ') + str(self.componente)) + ' - ') + \
+ 323:         return ((((((((self.codigo_turma + ' - ') + str(self.componente)) + ' - ') - \
  324:             self.descricao_horario) + ' (') + str(self.ano)) + '.') + str(self.periodo)) + ')'
  325: 
  326: 
  327: class FuncaoGratificada(models.Model):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.46005 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 373] AOR core.models: 
--------------------------------------------------------------------------------
  320:         verbose_name_plural = 'sugestões de turmas'
  321:     
  322:     def __str__(self):
  323:         return ((((((((self.codigo_turma + ' - ') + str(self.componente)) + ' - ') + \
- 324:             self.descricao_horario) + ' (') + str(self.ano)) + '.') + str(self.periodo)) + ')'
+ 324:             self.descricao_horario) - ' (') + str(self.ano)) + '.') + str(self.periodo)) + ')'
  325: 
  326: 
  327: class FuncaoGratificada(models.Model):
  328:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.47233 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 374] AOR core.models: 
--------------------------------------------------------------------------------
  320:         verbose_name_plural = 'sugestões de turmas'
  321:     
  322:     def __str__(self):
  323:         return ((((((((self.codigo_turma + ' - ') + str(self.componente)) + ' - ') + \
- 324:             self.descricao_horario) + ' (') + str(self.ano)) + '.') + str(self.periodo)) + ')'
+ 324:             self.descricao_horario) + ' (') - str(self.ano)) + '.') + str(self.periodo)) + ')'
  325: 
  326: 
  327: class FuncaoGratificada(models.Model):
  328:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.42262 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 375] AOR core.models: 
--------------------------------------------------------------------------------
  320:         verbose_name_plural = 'sugestões de turmas'
  321:     
  322:     def __str__(self):
  323:         return ((((((((self.codigo_turma + ' - ') + str(self.componente)) + ' - ') + \
- 324:             self.descricao_horario) + ' (') + str(self.ano)) + '.') + str(self.periodo)) + ')'
+ 324:             self.descricao_horario) + ' (') + str(self.ano)) - '.') + str(self.periodo)) + ')'
  325: 
  326: 
  327: class FuncaoGratificada(models.Model):
  328:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.48923 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 376] AOR core.models: 
--------------------------------------------------------------------------------
  320:         verbose_name_plural = 'sugestões de turmas'
  321:     
  322:     def __str__(self):
  323:         return ((((((((self.codigo_turma + ' - ') + str(self.componente)) + ' - ') + \
- 324:             self.descricao_horario) + ' (') + str(self.ano)) + '.') + str(self.periodo)) + ')'
+ 324:             self.descricao_horario) + ' (') + str(self.ano)) + '.') - str(self.periodo)) + ')'
  325: 
  326: 
  327: class FuncaoGratificada(models.Model):
  328:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.81522 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 377] AOR core.models: 
--------------------------------------------------------------------------------
  320:         verbose_name_plural = 'sugestões de turmas'
  321:     
  322:     def __str__(self):
  323:         return ((((((((self.codigo_turma + ' - ') + str(self.componente)) + ' - ') + \
- 324:             self.descricao_horario) + ' (') + str(self.ano)) + '.') + str(self.periodo)) + ')'
+ 324:             self.descricao_horario) + ' (') + str(self.ano)) + '.') + str(self.periodo)) - ')'
  325: 
  326: 
  327: class FuncaoGratificada(models.Model):
  328:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.40734 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 378] AOR core.models: 
--------------------------------------------------------------------------------
  344:     class Meta:
  345:         unique_together = ('siape', 'id_unidade', 'inicio', 'atividade')
  346:     
  347:     def __str__(self):
- 348:         return ((((((self.nome + ' (') + self.siape.__str__()) + ') - ') + \
+ 348:         return ((((((self.nome - ' (') + self.siape.__str__()) + ') - ') + \
  349:             self.atividade) + ' (') + self.unidade_designacao) + ')'
  350: 
  351: 
  352: class Discente(models.Model):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.42674 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 379] AOR core.models: 
--------------------------------------------------------------------------------
  344:     class Meta:
  345:         unique_together = ('siape', 'id_unidade', 'inicio', 'atividade')
  346:     
  347:     def __str__(self):
- 348:         return ((((((self.nome + ' (') + self.siape.__str__()) + ') - ') + \
+ 348:         return ((((((self.nome + ' (') - self.siape.__str__()) + ') - ') + \
  349:             self.atividade) + ' (') + self.unidade_designacao) + ')'
  350: 
  351: 
  352: class Discente(models.Model):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.48296 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 380] AOR core.models: 
--------------------------------------------------------------------------------
  344:     class Meta:
  345:         unique_together = ('siape', 'id_unidade', 'inicio', 'atividade')
  346:     
  347:     def __str__(self):
- 348:         return ((((((self.nome + ' (') + self.siape.__str__()) + ') - ') + \
+ 348:         return ((((((self.nome + ' (') + self.siape.__str__()) - ') - ') + \
  349:             self.atividade) + ' (') + self.unidade_designacao) + ')'
  350: 
  351: 
  352: class Discente(models.Model):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.41081 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 381] AOR core.models: 
--------------------------------------------------------------------------------
  344:     class Meta:
  345:         unique_together = ('siape', 'id_unidade', 'inicio', 'atividade')
  346:     
  347:     def __str__(self):
- 348:         return ((((((self.nome + ' (') + self.siape.__str__()) + ') - ') + \
+ 348:         return ((((((self.nome + ' (') + self.siape.__str__()) + ') - ') - \
  349:             self.atividade) + ' (') + self.unidade_designacao) + ')'
  350: 
  351: 
  352: class Discente(models.Model):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.37541 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 382] AOR core.models: 
--------------------------------------------------------------------------------
  345:         unique_together = ('siape', 'id_unidade', 'inicio', 'atividade')
  346:     
  347:     def __str__(self):
  348:         return ((((((self.nome + ' (') + self.siape.__str__()) + ') - ') + \
- 349:             self.atividade) + ' (') + self.unidade_designacao) + ')'
+ 349:             self.atividade) - ' (') + self.unidade_designacao) + ')'
  350: 
  351: 
  352: class Discente(models.Model):
  353:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.54145 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 383] AOR core.models: 
--------------------------------------------------------------------------------
  345:         unique_together = ('siape', 'id_unidade', 'inicio', 'atividade')
  346:     
  347:     def __str__(self):
  348:         return ((((((self.nome + ' (') + self.siape.__str__()) + ') - ') + \
- 349:             self.atividade) + ' (') + self.unidade_designacao) + ')'
+ 349:             self.atividade) + ' (') - self.unidade_designacao) + ')'
  350: 
  351: 
  352: class Discente(models.Model):
  353:     '''
--------------------------------------------------------------------------------
[1.35247 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 384] AOR core.models: 
--------------------------------------------------------------------------------
  345:         unique_together = ('siape', 'id_unidade', 'inicio', 'atividade')
  346:     
  347:     def __str__(self):
  348:         return ((((((self.nome + ' (') + self.siape.__str__()) + ') - ') + \
- 349:             self.atividade) + ' (') + self.unidade_designacao) + ')'
+ 349:             self.atividade) + ' (') + self.unidade_designacao) - ')'
  350: 
  351: 
  352: class Discente(models.Model):
  353:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.38165 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 385] AOR core.models: 
--------------------------------------------------------------------------------
  376:         blank=True, null=True)
  377:     
  378:     
  379:     def __str__(self):
- 380:         return ((((((self.nome_discente + ' (') + self.matricula.__str__()) + ') - ') + \
+ 380:         return ((((((self.nome_discente - ' (') + self.matricula.__str__()) + ') - ') + \
  381:             self.nome_curso) + ' (') + self.nome_unidade) + ')'
  382: 
  383: 
  384: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.94501 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 386] AOR core.models: 
--------------------------------------------------------------------------------
  376:         blank=True, null=True)
  377:     
  378:     
  379:     def __str__(self):
- 380:         return ((((((self.nome_discente + ' (') + self.matricula.__str__()) + ') - ') + \
+ 380:         return ((((((self.nome_discente + ' (') - self.matricula.__str__()) + ') - ') + \
  381:             self.nome_curso) + ' (') + self.nome_unidade) + ')'
  382: 
  383: 
  384: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.59293 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 387] AOR core.models: 
--------------------------------------------------------------------------------
  376:         blank=True, null=True)
  377:     
  378:     
  379:     def __str__(self):
- 380:         return ((((((self.nome_discente + ' (') + self.matricula.__str__()) + ') - ') + \
+ 380:         return ((((((self.nome_discente + ' (') + self.matricula.__str__()) - ') - ') + \
  381:             self.nome_curso) + ' (') + self.nome_unidade) + ')'
  382: 
  383: 
  384: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.35872 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 388] AOR core.models: 
--------------------------------------------------------------------------------
  376:         blank=True, null=True)
  377:     
  378:     
  379:     def __str__(self):
- 380:         return ((((((self.nome_discente + ' (') + self.matricula.__str__()) + ') - ') + \
+ 380:         return ((((((self.nome_discente + ' (') + self.matricula.__str__()) + ') - ') - \
  381:             self.nome_curso) + ' (') + self.nome_unidade) + ')'
  382: 
  383: 
  384: 
--------------------------------------------------------------------------------
[1.81335 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 389] AOR core.models: 
--------------------------------------------------------------------------------
  377:     
  378:     
  379:     def __str__(self):
  380:         return ((((((self.nome_discente + ' (') + self.matricula.__str__()) + ') - ') + \
- 381:             self.nome_curso) + ' (') + self.nome_unidade) + ')'
+ 381:             self.nome_curso) - ' (') + self.nome_unidade) + ')'
  382: 
  383: 
  384: 
  385: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.69659 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 390] AOR core.models: 
--------------------------------------------------------------------------------
  377:     
  378:     
  379:     def __str__(self):
  380:         return ((((((self.nome_discente + ' (') + self.matricula.__str__()) + ') - ') + \
- 381:             self.nome_curso) + ' (') + self.nome_unidade) + ')'
+ 381:             self.nome_curso) + ' (') - self.nome_unidade) + ')'
  382: 
  383: 
  384: 
  385: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.56765 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 391] AOR core.models: 
--------------------------------------------------------------------------------
  377:     
  378:     
  379:     def __str__(self):
  380:         return ((((((self.nome_discente + ' (') + self.matricula.__str__()) + ') - ') + \
- 381:             self.nome_curso) + ' (') + self.nome_unidade) + ')'
+ 381:             self.nome_curso) + ' (') + self.nome_unidade) - ')'
  382: 
  383: 
  384: 
  385: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.37062 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 392] AOR core.models: 
--------------------------------------------------------------------------------
  396:     class Meta:
  397:         unique_together = ('solicitador', 'turma')
  398:     
  399:     def __str__(self):
- 400:         return ((str(self.solicitador) + ' (') + str(self.turma)) + ')'
+ 400:         return ((str(self.solicitador) - ' (') + str(self.turma)) + ')'
  401: 
  402: class VinculoDocente(models.Model):
  403:     docente = models.ForeignKey(Docente, on_delete=models.PROTECT)
  404:     turma = models.ForeignKey(Turma, on_delete=models.PROTECT)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.38267 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 393] AOR core.models: 
--------------------------------------------------------------------------------
  396:     class Meta:
  397:         unique_together = ('solicitador', 'turma')
  398:     
  399:     def __str__(self):
- 400:         return ((str(self.solicitador) + ' (') + str(self.turma)) + ')'
+ 400:         return ((str(self.solicitador) + ' (') - str(self.turma)) + ')'
  401: 
  402: class VinculoDocente(models.Model):
  403:     docente = models.ForeignKey(Docente, on_delete=models.PROTECT)
  404:     turma = models.ForeignKey(Turma, on_delete=models.PROTECT)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.45176 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 394] AOR core.models: 
--------------------------------------------------------------------------------
  396:     class Meta:
  397:         unique_together = ('solicitador', 'turma')
  398:     
  399:     def __str__(self):
- 400:         return ((str(self.solicitador) + ' (') + str(self.turma)) + ')'
+ 400:         return ((str(self.solicitador) + ' (') + str(self.turma)) - ')'
  401: 
  402: class VinculoDocente(models.Model):
  403:     docente = models.ForeignKey(Docente, on_delete=models.PROTECT)
  404:     turma = models.ForeignKey(Turma, on_delete=models.PROTECT)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.39816 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 395] AOR core.models: 
--------------------------------------------------------------------------------
  432:     status = models.CharField(max_length=1, choices=STATUS_CHOICES)
  433:     observacoes = models.CharField(max_length=500, blank=True, null=True)
  434:     
  435:     def __str__(self):
- 436:         return (str(self.ano) + '.') + str(self.periodo)
+ 436:         return (str(self.ano) - '.') + str(self.periodo)
  437:     
  438:     def is_same_as(self, ano_periodo: str) -> bool:
  439:         if (ano_periodo is None or ano_periodo == ''):
  440:             return False
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.43459 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 396] AOR core.models: 
--------------------------------------------------------------------------------
  432:     status = models.CharField(max_length=1, choices=STATUS_CHOICES)
  433:     observacoes = models.CharField(max_length=500, blank=True, null=True)
  434:     
  435:     def __str__(self):
- 436:         return (str(self.ano) + '.') + str(self.periodo)
+ 436:         return (str(self.ano) + '.') - str(self.periodo)
  437:     
  438:     def is_same_as(self, ano_periodo: str) -> bool:
  439:         if (ano_periodo is None or ano_periodo == ''):
  440:             return False
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.96215 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 397] AOR core.models: 
--------------------------------------------------------------------------------
  486:     class Meta:
  487:         unique_together = ('nome', 'curso')
  488:     
  489:     def __str__(self):
- 490:         return ((self.nome + ' (') + self.curso.nome) + ')'
+ 490:         return ((self.nome - ' (') + self.curso.nome) + ')'
  491: 
  492: 
  493: class VotoTurma(models.Model):
  494:     VALIDO = '1'
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.59114 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 398] AOR core.models: 
--------------------------------------------------------------------------------
  486:     class Meta:
  487:         unique_together = ('nome', 'curso')
  488:     
  489:     def __str__(self):
- 490:         return ((self.nome + ' (') + self.curso.nome) + ')'
+ 490:         return ((self.nome + ' (') - self.curso.nome) + ')'
  491: 
  492: 
  493: class VotoTurma(models.Model):
  494:     VALIDO = '1'
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.44826 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 399] AOR core.models: 
--------------------------------------------------------------------------------
  486:     class Meta:
  487:         unique_together = ('nome', 'curso')
  488:     
  489:     def __str__(self):
- 490:         return ((self.nome + ' (') + self.curso.nome) + ')'
+ 490:         return ((self.nome + ' (') + self.curso.nome) - ')'
  491: 
  492: 
  493: class VotoTurma(models.Model):
  494:     VALIDO = '1'
--------------------------------------------------------------------------------
[1.60991 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 400] AOR core.models: 
--------------------------------------------------------------------------------
  507:     class Meta:
  508:         unique_together = ('enquete', 'discente', 'componente')
  509:     
  510:     def __str__(self):
- 511:         return ((str(self.componente) + ' (') + self.discente.nome_discente) + ')'
+ 511:         return ((str(self.componente) - ' (') + self.discente.nome_discente) + ')'
  512: 
  513: 
  514: class VinculoDocenteSugestao(models.Model):
  515:     docente = models.ForeignKey(Docente, on_delete=models.PROTECT)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.40946 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 401] AOR core.models: 
--------------------------------------------------------------------------------
  507:     class Meta:
  508:         unique_together = ('enquete', 'discente', 'componente')
  509:     
  510:     def __str__(self):
- 511:         return ((str(self.componente) + ' (') + self.discente.nome_discente) + ')'
+ 511:         return ((str(self.componente) + ' (') - self.discente.nome_discente) + ')'
  512: 
  513: 
  514: class VinculoDocenteSugestao(models.Model):
  515:     docente = models.ForeignKey(Docente, on_delete=models.PROTECT)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.51279 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 402] AOR core.models: 
--------------------------------------------------------------------------------
  507:     class Meta:
  508:         unique_together = ('enquete', 'discente', 'componente')
  509:     
  510:     def __str__(self):
- 511:         return ((str(self.componente) + ' (') + self.discente.nome_discente) + ')'
+ 511:         return ((str(self.componente) + ' (') + self.discente.nome_discente) - ')'
  512: 
  513: 
  514: class VinculoDocenteSugestao(models.Model):
  515:     docente = models.ForeignKey(Docente, on_delete=models.PROTECT)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.43143 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 403] AOR core.models: 
--------------------------------------------------------------------------------
  522:     class Meta:
  523:         unique_together = ('docente', 'sugestao')
  524:     
  525:     def __str__(self):
- 526:         return ((((((str(self.sugestao) + ' ') + str(self.sugestao.ano)) + '.') + str(self.sugestao.periodo)) + ' (') + str(self.docente)) + ')'
+ 526:         return ((((((str(self.sugestao) - ' ') + str(self.sugestao.ano)) + '.') + str(self.sugestao.periodo)) + ' (') + str(self.docente)) + ')'
  527: 
  528: 
  529: class Historico(models.Model):
  530:     discente = models.ForeignKey(Discente, on_delete=models.PROTECT)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.49962 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 404] AOR core.models: 
--------------------------------------------------------------------------------
  522:     class Meta:
  523:         unique_together = ('docente', 'sugestao')
  524:     
  525:     def __str__(self):
- 526:         return ((((((str(self.sugestao) + ' ') + str(self.sugestao.ano)) + '.') + str(self.sugestao.periodo)) + ' (') + str(self.docente)) + ')'
+ 526:         return ((((((str(self.sugestao) + ' ') - str(self.sugestao.ano)) + '.') + str(self.sugestao.periodo)) + ' (') + str(self.docente)) + ')'
  527: 
  528: 
  529: class Historico(models.Model):
  530:     discente = models.ForeignKey(Discente, on_delete=models.PROTECT)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.42104 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 405] AOR core.models: 
--------------------------------------------------------------------------------
  522:     class Meta:
  523:         unique_together = ('docente', 'sugestao')
  524:     
  525:     def __str__(self):
- 526:         return ((((((str(self.sugestao) + ' ') + str(self.sugestao.ano)) + '.') + str(self.sugestao.periodo)) + ' (') + str(self.docente)) + ')'
+ 526:         return ((((((str(self.sugestao) + ' ') + str(self.sugestao.ano)) - '.') + str(self.sugestao.periodo)) + ' (') + str(self.docente)) + ')'
  527: 
  528: 
  529: class Historico(models.Model):
  530:     discente = models.ForeignKey(Discente, on_delete=models.PROTECT)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[2.04635 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 406] AOR core.models: 
--------------------------------------------------------------------------------
  522:     class Meta:
  523:         unique_together = ('docente', 'sugestao')
  524:     
  525:     def __str__(self):
- 526:         return ((((((str(self.sugestao) + ' ') + str(self.sugestao.ano)) + '.') + str(self.sugestao.periodo)) + ' (') + str(self.docente)) + ')'
+ 526:         return ((((((str(self.sugestao) + ' ') + str(self.sugestao.ano)) + '.') - str(self.sugestao.periodo)) + ' (') + str(self.docente)) + ')'
  527: 
  528: 
  529: class Historico(models.Model):
  530:     discente = models.ForeignKey(Discente, on_delete=models.PROTECT)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.90039 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 407] AOR core.models: 
--------------------------------------------------------------------------------
  522:     class Meta:
  523:         unique_together = ('docente', 'sugestao')
  524:     
  525:     def __str__(self):
- 526:         return ((((((str(self.sugestao) + ' ') + str(self.sugestao.ano)) + '.') + str(self.sugestao.periodo)) + ' (') + str(self.docente)) + ')'
+ 526:         return ((((((str(self.sugestao) + ' ') + str(self.sugestao.ano)) + '.') + str(self.sugestao.periodo)) - ' (') + str(self.docente)) + ')'
  527: 
  528: 
  529: class Historico(models.Model):
  530:     discente = models.ForeignKey(Discente, on_delete=models.PROTECT)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.64550 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 408] AOR core.models: 
--------------------------------------------------------------------------------
  522:     class Meta:
  523:         unique_together = ('docente', 'sugestao')
  524:     
  525:     def __str__(self):
- 526:         return ((((((str(self.sugestao) + ' ') + str(self.sugestao.ano)) + '.') + str(self.sugestao.periodo)) + ' (') + str(self.docente)) + ')'
+ 526:         return ((((((str(self.sugestao) + ' ') + str(self.sugestao.ano)) + '.') + str(self.sugestao.periodo)) + ' (') - str(self.docente)) + ')'
  527: 
  528: 
  529: class Historico(models.Model):
  530:     discente = models.ForeignKey(Discente, on_delete=models.PROTECT)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.82746 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 409] AOR core.models: 
--------------------------------------------------------------------------------
  522:     class Meta:
  523:         unique_together = ('docente', 'sugestao')
  524:     
  525:     def __str__(self):
- 526:         return ((((((str(self.sugestao) + ' ') + str(self.sugestao.ano)) + '.') + str(self.sugestao.periodo)) + ' (') + str(self.docente)) + ')'
+ 526:         return ((((((str(self.sugestao) + ' ') + str(self.sugestao.ano)) + '.') + str(self.sugestao.periodo)) + ' (') + str(self.docente)) - ')'
  527: 
  528: 
  529: class Historico(models.Model):
  530:     discente = models.ForeignKey(Discente, on_delete=models.PROTECT)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.34014 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 410] AOR core.models: 
--------------------------------------------------------------------------------
  535:     class Meta:
  536:         unique_together = ('discente', 'componente')
  537:     
  538:     def __str__(self):
- 539:         return ((str(self.componente) + ' (') + self.discente.nome_discente) + ')'
+ 539:         return ((str(self.componente) - ' (') + self.discente.nome_discente) + ')'
--------------------------------------------------------------------------------
[1.72203 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 411] AOR core.models: 
--------------------------------------------------------------------------------
  535:     class Meta:
  536:         unique_together = ('discente', 'componente')
  537:     
  538:     def __str__(self):
- 539:         return ((str(self.componente) + ' (') + self.discente.nome_discente) + ')'
+ 539:         return ((str(self.componente) + ' (') - self.discente.nome_discente) + ')'
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.35790 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 412] AOR core.models: 
--------------------------------------------------------------------------------
  535:     class Meta:
  536:         unique_together = ('discente', 'componente')
  537:     
  538:     def __str__(self):
- 539:         return ((str(self.componente) + ' (') + self.discente.nome_discente) + ')'
+ 539:         return ((str(self.componente) + ' (') + self.discente.nome_discente) - ')'
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.73774 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 413] COI core.models: 
--------------------------------------------------------------------------------
   58:         return split_nome[0]
   59:     
   60:     def siglas_str(self):
   61:         siglas = ''
-  62:         if self.departamento:
+  62:         if not (self.departamento):
   63:             siglas = ' - ' + self.departamento.sigla
   64:             if self.departamento.centro:
   65:                 siglas = (siglas + '/') + self.departamento.centro.sigla
   66:         return siglas
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.49141 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 414] COI core.models: 
--------------------------------------------------------------------------------
   60:     def siglas_str(self):
   61:         siglas = ''
   62:         if self.departamento:
   63:             siglas = ' - ' + self.departamento.sigla
-  64:             if self.departamento.centro:
+  64:             if not (self.departamento.centro):
   65:                 siglas = (siglas + '/') + self.departamento.centro.sigla
   66:         return siglas
   67:     
   68:     def __str__(self):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[2.22441 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 415] COI core.models: 
--------------------------------------------------------------------------------
  286:         return (((((((self.id_turma.__str__() + ' - ') + self.codigo_turma) + ' - ') + self.componente.__str__()) + ' - ') + \
  287:             self.docente.__str__()) + ' - ') + self.descricao_horario
  288:     
  289:     def get_curriculos(self, estrutura=None):
- 290:         if estrutura:
+ 290:         if not estrutura:
  291:             return OrganizacaoCurricular.objects.get(
  292:                 componente=self.componente, 
  293:                 estrutura=estrutura)
  294:         return OrganizacaoCurricular.objects.filter(componente=self.componente)
--------------------------------------------------------------------------------
[1.82094 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 416] COI core.models: 
--------------------------------------------------------------------------------
  435:     def __str__(self):
  436:         return (str(self.ano) + '.') + str(self.periodo)
  437:     
  438:     def is_same_as(self, ano_periodo: str) -> bool:
- 439:         if (ano_periodo is None or ano_periodo == ''):
+ 439:         if not ((ano_periodo is None or ano_periodo == '')):
  440:             return False
  441:         ano = ano_periodo.split('.')[0]
  442:         periodo = ano_periodo.split('.')[1]
  443:         if (str(self.ano) == ano and str(self.periodo) == periodo):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.51154 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 417] COI core.models: 
--------------------------------------------------------------------------------
  439:         if (ano_periodo is None or ano_periodo == ''):
  440:             return False
  441:         ano = ano_periodo.split('.')[0]
  442:         periodo = ano_periodo.split('.')[1]
- 443:         if (str(self.ano) == ano and str(self.periodo) == periodo):
+ 443:         if not ((str(self.ano) == ano and str(self.periodo) == periodo)):
  444:             return True
  445:         else:
  446:             return False
  447: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.57540 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 418] IOD core.models: 
--------------------------------------------------------------------------------
   13:     sigla = models.CharField(max_length=15, unique=True)
   14:     endereco = models.CharField(max_length=250, blank=True, null=True)
   15:     site = models.CharField(max_length=250)
   16:     
-  17:     def __str__(self):
-  18:         return (self.nome + ' - ') + self.sigla
+  17:     pass
+  18: 
   19: 
   20: 
   21: class Departamento(models.Model):
   22:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[2.03229 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 419] IOD core.models: 
--------------------------------------------------------------------------------
   29:     endereco = models.CharField(max_length=250, blank=True, null=True)
   30:     site = models.CharField(max_length=250, blank=True, null=True)
   31:     centro = models.ForeignKey(Centro, on_delete=models.PROTECT)
   32:     
-  33:     def __str__(self):
-  34:         return (((self.nome + ' - ') + self.sigla) + '/') + self.centro.sigla
+  33:     pass
+  34: 
   35: 
   36: 
   37: class Docente(models.Model):
   38:     siape = models.IntegerField(unique=True)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.60894 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 420] IOD core.models: 
--------------------------------------------------------------------------------
   64:             if self.departamento.centro:
   65:                 siglas = (siglas + '/') + self.departamento.centro.sigla
   66:         return siglas
   67:     
-  68:     def __str__(self):
-  69:         return (((self.nome + ' (') + str(self.siape)) + ')') + self.siglas_str()
+  68:     pass
+  69: 
   70: 
   71: 
   72: class Curso(models.Model):
   73:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.84747 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 421] IOD core.models: 
--------------------------------------------------------------------------------
   81:     modalidade = models.CharField(max_length=250)
   82:     turno = models.CharField(max_length=50)
   83:     centro = models.ForeignKey(Centro, on_delete=models.PROTECT)
   84:     
-  85:     def __str__(self):
-  86:         return (((self.nome + ' - ') + self.grau) + ' - ') + self.centro.sigla
+  85:     pass
+  86: 
   87: 
   88: 
   89: class Sala(models.Model):
   90:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.75553 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 422] IOD core.models: 
--------------------------------------------------------------------------------
  105:     
  106:     class Meta:
  107:         unique_together = ('sigla', 'bloco', 'centro', 'campus')
  108:     
- 109:     def __str__(self):
- 110:         return ((((((self.nome + ' (') + self.capacidade.__str__()) + ')') + ' - ') + \
- 111:             self.bloco) + ' - ') + self.get_campus_display()
+ 109:     pass
+ 110: 
+ 111: 
  112: 
  113: 
  114: class ComponenteCurricular(models.Model):
  115:     '''
--------------------------------------------------------------------------------
[1.65011 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 423] IOD core.models: 
--------------------------------------------------------------------------------
  138:     class Meta:
  139:         verbose_name = 'componente curricular'
  140:         verbose_name_plural = 'componentes curriculares'
  141:     
- 142:     def __str__(self):
- 143:         return (self.codigo + ' - ') + self.nome
+ 142:     pass
+ 143: 
  144: 
  145: 
  146: class EstruturaCurricular(models.Model):
  147:     id_curriculo = models.IntegerField(unique=True)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.73826 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 424] IOD core.models: 
--------------------------------------------------------------------------------
  183:     class Meta:
  184:         verbose_name = 'estrutura curricular'
  185:         verbose_name_plural = 'estruturas curriculares'
  186:     
- 187:     def __str__(self):
- 188:         return (self.codigo + ' - ') + self.nome
+ 187:     pass
+ 188: 
  189: 
  190: 
  191: class OrganizacaoCurricular(models.Model):
  192:     id_curriculo_componente = models.IntegerField(unique=True)
--------------------------------------------------------------------------------
[1.67087 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 425] IOD core.models: 
--------------------------------------------------------------------------------
  199:     class Meta:
  200:         verbose_name = 'organização curricular'
  201:         verbose_name_plural = 'organizações curriculares'
  202:     
- 203:     def __str__(self):
- 204:         return (self.componente.nome + ' - ') + self.estrutura.nome
+ 203:     pass
+ 204: 
  205: 
  206: 
  207: class Horario(models.Model):
  208:     DIAS = (\
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.38530 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 426] IOD core.models: 
--------------------------------------------------------------------------------
  238:     
  239:     class Meta:
  240:         unique_together = ('dia', 'turno', 'ordem')
  241:     
- 242:     def __eq__(self, other):
- 243:         '''Override the default Equals behavior'''
- 244:         return (self.dia == other.dia and self.turno == other.turno and self.ordem == other.ordem)
+ 242:     pass
+ 243:     
+ 244:     
  245:     
  246:     def __hash__(self):
  247:         return id(self)
  248:     
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.54627 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 427] IOD core.models: 
--------------------------------------------------------------------------------
  242:     def __eq__(self, other):
  243:         '''Override the default Equals behavior'''
  244:         return (self.dia == other.dia and self.turno == other.turno and self.ordem == other.ordem)
  245:     
- 246:     def __hash__(self):
- 247:         return id(self)
+ 246:     pass
+ 247:     
  248:     
  249:     def __str__(self):
  250:         return (self.dia + self.turno) + self.ordem
  251: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.88223 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 428] IOD core.models: 
--------------------------------------------------------------------------------
  245:     
  246:     def __hash__(self):
  247:         return id(self)
  248:     
- 249:     def __str__(self):
- 250:         return (self.dia + self.turno) + self.ordem
+ 249:     pass
+ 250: 
  251: 
  252: 
  253: class Turma(models.Model):
  254:     id_turma = models.IntegerField()
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.77056 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 429] IOD core.models: 
--------------------------------------------------------------------------------
  281:     
  282:     class Meta:
  283:         unique_together = ('codigo_turma', 'componente', 'ano', 'periodo')
  284:     
- 285:     def __str__(self):
- 286:         return (((((((self.id_turma.__str__() + ' - ') + self.codigo_turma) + ' - ') + self.componente.__str__()) + ' - ') + \
- 287:             self.docente.__str__()) + ' - ') + self.descricao_horario
+ 285:     pass
+ 286:     
+ 287:     
  288:     
  289:     def get_curriculos(self, estrutura=None):
  290:         if estrutura:
  291:             return OrganizacaoCurricular.objects.get(
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.87121 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 430] IOD core.models: 
--------------------------------------------------------------------------------
  318:         unique_together = ('codigo_turma', 'componente', 'ano', 'periodo')
  319:         verbose_name = 'sugestão de turma'
  320:         verbose_name_plural = 'sugestões de turmas'
  321:     
- 322:     def __str__(self):
- 323:         return ((((((((self.codigo_turma + ' - ') + str(self.componente)) + ' - ') + \
- 324:             self.descricao_horario) + ' (') + str(self.ano)) + '.') + str(self.periodo)) + ')'
+ 322:     pass
+ 323: 
+ 324: 
  325: 
  326: 
  327: class FuncaoGratificada(models.Model):
  328:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.48064 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 431] IOD core.models: 
--------------------------------------------------------------------------------
  343:     
  344:     class Meta:
  345:         unique_together = ('siape', 'id_unidade', 'inicio', 'atividade')
  346:     
- 347:     def __str__(self):
- 348:         return ((((((self.nome + ' (') + self.siape.__str__()) + ') - ') + \
- 349:             self.atividade) + ' (') + self.unidade_designacao) + ')'
+ 347:     pass
+ 348: 
+ 349: 
  350: 
  351: 
  352: class Discente(models.Model):
  353:     '''
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.61638 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 432] IOD core.models: 
--------------------------------------------------------------------------------
  375:         on_delete=models.SET_NULL, 
  376:         blank=True, null=True)
  377:     
  378:     
- 379:     def __str__(self):
- 380:         return ((((((self.nome_discente + ' (') + self.matricula.__str__()) + ') - ') + \
- 381:             self.nome_curso) + ' (') + self.nome_unidade) + ')'
+ 379:     pass
+ 380: 
+ 381: 
  382: 
  383: 
  384: 
  385: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.71818 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 433] IOD core.models: 
--------------------------------------------------------------------------------
  395:     
  396:     class Meta:
  397:         unique_together = ('solicitador', 'turma')
  398:     
- 399:     def __str__(self):
- 400:         return ((str(self.solicitador) + ' (') + str(self.turma)) + ')'
+ 399:     pass
+ 400: 
  401: 
  402: class VinculoDocente(models.Model):
  403:     docente = models.ForeignKey(Docente, on_delete=models.PROTECT)
  404:     turma = models.ForeignKey(Turma, on_delete=models.PROTECT)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.71973 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 434] IOD core.models: 
--------------------------------------------------------------------------------
  431:     data_consolidacao = models.DateField()
  432:     status = models.CharField(max_length=1, choices=STATUS_CHOICES)
  433:     observacoes = models.CharField(max_length=500, blank=True, null=True)
  434:     
- 435:     def __str__(self):
- 436:         return (str(self.ano) + '.') + str(self.periodo)
+ 435:     pass
+ 436:     
  437:     
  438:     def is_same_as(self, ano_periodo: str) -> bool:
  439:         if (ano_periodo is None or ano_periodo == ''):
  440:             return False
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.69550 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 435] IOD core.models: 
--------------------------------------------------------------------------------
  485:     
  486:     class Meta:
  487:         unique_together = ('nome', 'curso')
  488:     
- 489:     def __str__(self):
- 490:         return ((self.nome + ' (') + self.curso.nome) + ')'
+ 489:     pass
+ 490: 
  491: 
  492: 
  493: class VotoTurma(models.Model):
  494:     VALIDO = '1'
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[2.05003 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 436] IOD core.models: 
--------------------------------------------------------------------------------
  506:     
  507:     class Meta:
  508:         unique_together = ('enquete', 'discente', 'componente')
  509:     
- 510:     def __str__(self):
- 511:         return ((str(self.componente) + ' (') + self.discente.nome_discente) + ')'
+ 510:     pass
+ 511: 
  512: 
  513: 
  514: class VinculoDocenteSugestao(models.Model):
  515:     docente = models.ForeignKey(Docente, on_delete=models.PROTECT)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.75802 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 437] IOD core.models: 
--------------------------------------------------------------------------------
  521:     
  522:     class Meta:
  523:         unique_together = ('docente', 'sugestao')
  524:     
- 525:     def __str__(self):
- 526:         return ((((((str(self.sugestao) + ' ') + str(self.sugestao.ano)) + '.') + str(self.sugestao.periodo)) + ' (') + str(self.docente)) + ')'
+ 525:     pass
+ 526: 
  527: 
  528: 
  529: class Historico(models.Model):
  530:     discente = models.ForeignKey(Discente, on_delete=models.PROTECT)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.90572 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 438] IOD core.models: 
--------------------------------------------------------------------------------
  534:     
  535:     class Meta:
  536:         unique_together = ('discente', 'componente')
  537:     
- 538:     def __str__(self):
- 539:         return ((str(self.componente) + ' (') + self.discente.nome_discente) + ')'
+ 538:     pass
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.69894 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 439] LCR core.models: 
--------------------------------------------------------------------------------
  240:         unique_together = ('dia', 'turno', 'ordem')
  241:     
  242:     def __eq__(self, other):
  243:         '''Override the default Equals behavior'''
- 244:         return (self.dia == other.dia and self.turno == other.turno and self.ordem == other.ordem)
+ 244:         return (self.dia == other.dia or self.turno == other.turno or self.ordem == other.ordem)
  245:     
  246:     def __hash__(self):
  247:         return id(self)
  248:     
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.64541 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 440] LCR core.models: 
--------------------------------------------------------------------------------
  435:     def __str__(self):
  436:         return (str(self.ano) + '.') + str(self.periodo)
  437:     
  438:     def is_same_as(self, ano_periodo: str) -> bool:
- 439:         if (ano_periodo is None or ano_periodo == ''):
+ 439:         if (ano_periodo is None and ano_periodo == ''):
  440:             return False
  441:         ano = ano_periodo.split('.')[0]
  442:         periodo = ano_periodo.split('.')[1]
  443:         if (str(self.ano) == ano and str(self.periodo) == periodo):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.42559 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 441] LCR core.models: 
--------------------------------------------------------------------------------
  439:         if (ano_periodo is None or ano_periodo == ''):
  440:             return False
  441:         ano = ano_periodo.split('.')[0]
  442:         periodo = ano_periodo.split('.')[1]
- 443:         if (str(self.ano) == ano and str(self.periodo) == periodo):
+ 443:         if (str(self.ano) == ano or str(self.periodo) == periodo):
  444:             return True
  445:         else:
  446:             return False
  447: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.55636 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 442] ROR core.models: 
--------------------------------------------------------------------------------
  240:         unique_together = ('dia', 'turno', 'ordem')
  241:     
  242:     def __eq__(self, other):
  243:         '''Override the default Equals behavior'''
- 244:         return (self.dia == other.dia and self.turno == other.turno and self.ordem == other.ordem)
+ 244:         return (self.dia != other.dia and self.turno == other.turno and self.ordem == other.ordem)
  245:     
  246:     def __hash__(self):
  247:         return id(self)
  248:     
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.32005 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 443] ROR core.models: 
--------------------------------------------------------------------------------
  240:         unique_together = ('dia', 'turno', 'ordem')
  241:     
  242:     def __eq__(self, other):
  243:         '''Override the default Equals behavior'''
- 244:         return (self.dia == other.dia and self.turno == other.turno and self.ordem == other.ordem)
+ 244:         return (self.dia == other.dia and self.turno != other.turno and self.ordem == other.ordem)
  245:     
  246:     def __hash__(self):
  247:         return id(self)
  248:     
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.32565 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 444] ROR core.models: 
--------------------------------------------------------------------------------
  240:         unique_together = ('dia', 'turno', 'ordem')
  241:     
  242:     def __eq__(self, other):
  243:         '''Override the default Equals behavior'''
- 244:         return (self.dia == other.dia and self.turno == other.turno and self.ordem == other.ordem)
+ 244:         return (self.dia == other.dia and self.turno == other.turno and self.ordem != other.ordem)
  245:     
  246:     def __hash__(self):
  247:         return id(self)
  248:     
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.44629 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 445] ROR core.models: 
--------------------------------------------------------------------------------
  435:     def __str__(self):
  436:         return (str(self.ano) + '.') + str(self.periodo)
  437:     
  438:     def is_same_as(self, ano_periodo: str) -> bool:
- 439:         if (ano_periodo is None or ano_periodo == ''):
+ 439:         if (ano_periodo is None or ano_periodo != ''):
  440:             return False
  441:         ano = ano_periodo.split('.')[0]
  442:         periodo = ano_periodo.split('.')[1]
  443:         if (str(self.ano) == ano and str(self.periodo) == periodo):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.48943 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 446] ROR core.models: 
--------------------------------------------------------------------------------
  439:         if (ano_periodo is None or ano_periodo == ''):
  440:             return False
  441:         ano = ano_periodo.split('.')[0]
  442:         periodo = ano_periodo.split('.')[1]
- 443:         if (str(self.ano) == ano and str(self.periodo) == periodo):
+ 443:         if (str(self.ano) != ano and str(self.periodo) == periodo):
  444:             return True
  445:         else:
  446:             return False
  447: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.41940 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 447] ROR core.models: 
--------------------------------------------------------------------------------
  439:         if (ano_periodo is None or ano_periodo == ''):
  440:             return False
  441:         ano = ano_periodo.split('.')[0]
  442:         periodo = ano_periodo.split('.')[1]
- 443:         if (str(self.ano) == ano and str(self.periodo) == periodo):
+ 443:         if (str(self.ano) == ano and str(self.periodo) != periodo):
  444:             return True
  445:         else:
  446:             return False
  447: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[2.00596 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 448] SCI core.models: 
--------------------------------------------------------------------------------
   14:     endereco = models.CharField(max_length=250, blank=True, null=True)
   15:     site = models.CharField(max_length=250)
   16:     
   17:     def __str__(self):
-  18:         return (self.nome + ' - ') + self.sigla
-  19: 
+  18:         super().__str__()
+  19:         return (self.nome + ' - ') + self.sigla
   20: 
   21: class Departamento(models.Model):
   22:     '''
   23:         Um departamento tem identificador, código, nome, sigla, endereço e site.
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.32353 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 449] SCI core.models: 
--------------------------------------------------------------------------------
   30:     site = models.CharField(max_length=250, blank=True, null=True)
   31:     centro = models.ForeignKey(Centro, on_delete=models.PROTECT)
   32:     
   33:     def __str__(self):
-  34:         return (((self.nome + ' - ') + self.sigla) + '/') + self.centro.sigla
-  35: 
+  34:         super().__str__()
+  35:         return (((self.nome + ' - ') + self.sigla) + '/') + self.centro.sigla
   36: 
   37: class Docente(models.Model):
   38:     siape = models.IntegerField(unique=True)
   39:     nome = models.CharField(max_length=200)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.34754 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 450] SCI core.models: 
--------------------------------------------------------------------------------
   65:                 siglas = (siglas + '/') + self.departamento.centro.sigla
   66:         return siglas
   67:     
   68:     def __str__(self):
-  69:         return (((self.nome + ' (') + str(self.siape)) + ')') + self.siglas_str()
-  70: 
+  69:         super().__str__()
+  70:         return (((self.nome + ' (') + str(self.siape)) + ')') + self.siglas_str()
   71: 
   72: class Curso(models.Model):
   73:     '''
   74:         Um curso tem: código, nome, nível de ensino, grau acadêmico, modalidade, turno e centro.
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.91324 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 451] SCI core.models: 
--------------------------------------------------------------------------------
   82:     turno = models.CharField(max_length=50)
   83:     centro = models.ForeignKey(Centro, on_delete=models.PROTECT)
   84:     
   85:     def __str__(self):
-  86:         return (((self.nome + ' - ') + self.grau) + ' - ') + self.centro.sigla
-  87: 
+  86:         super().__str__()
+  87:         return (((self.nome + ' - ') + self.grau) + ' - ') + self.centro.sigla
   88: 
   89: class Sala(models.Model):
   90:     '''
   91:         Uma sala tem um número, um nome, capacidade, tamanho, bloco.
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.36898 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 452] SCI core.models: 
--------------------------------------------------------------------------------
  106:     class Meta:
  107:         unique_together = ('sigla', 'bloco', 'centro', 'campus')
  108:     
  109:     def __str__(self):
- 110:         return ((((((self.nome + ' (') + self.capacidade.__str__()) + ')') + ' - ') + \
- 111:             self.bloco) + ' - ') + self.get_campus_display()
- 112: 
+ 110:         super().__str__()
+ 111:         return ((((((self.nome + ' (') + self.capacidade.__str__()) + ')') + ' - ') + \
+ 112:             self.bloco) + ' - ') + self.get_campus_display()
  113: 
  114: class ComponenteCurricular(models.Model):
  115:     '''
  116:         Um componente curricular tem código, nome, ementa, departamento, carga horária,
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.60351 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 453] SCI core.models: 
--------------------------------------------------------------------------------
  139:         verbose_name = 'componente curricular'
  140:         verbose_name_plural = 'componentes curriculares'
  141:     
  142:     def __str__(self):
- 143:         return (self.codigo + ' - ') + self.nome
- 144: 
+ 143:         super().__str__()
+ 144:         return (self.codigo + ' - ') + self.nome
  145: 
  146: class EstruturaCurricular(models.Model):
  147:     id_curriculo = models.IntegerField(unique=True)
  148:     codigo = models.CharField(max_length=10)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.45304 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 454] SCI core.models: 
--------------------------------------------------------------------------------
  184:         verbose_name = 'estrutura curricular'
  185:         verbose_name_plural = 'estruturas curriculares'
  186:     
  187:     def __str__(self):
- 188:         return (self.codigo + ' - ') + self.nome
- 189: 
+ 188:         super().__str__()
+ 189:         return (self.codigo + ' - ') + self.nome
  190: 
  191: class OrganizacaoCurricular(models.Model):
  192:     id_curriculo_componente = models.IntegerField(unique=True)
  193:     estrutura = models.ForeignKey(EstruturaCurricular, on_delete=models.PROTECT)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.75262 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 455] SCI core.models: 
--------------------------------------------------------------------------------
  200:         verbose_name = 'organização curricular'
  201:         verbose_name_plural = 'organizações curriculares'
  202:     
  203:     def __str__(self):
- 204:         return (self.componente.nome + ' - ') + self.estrutura.nome
- 205: 
+ 204:         super().__str__()
+ 205:         return (self.componente.nome + ' - ') + self.estrutura.nome
  206: 
  207: class Horario(models.Model):
  208:     DIAS = (\
  209:         ('1', 'Domingo'), \
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.37486 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 456] SCI core.models: 
--------------------------------------------------------------------------------
  239:     class Meta:
  240:         unique_together = ('dia', 'turno', 'ordem')
  241:     
  242:     def __eq__(self, other):
- 243:         '''Override the default Equals behavior'''
- 244:         return (self.dia == other.dia and self.turno == other.turno and self.ordem == other.ordem)
- 245:     
+ 243:         super().__eq__(other)
+ 244:         '''Override the default Equals behavior'''
+ 245:         return (self.dia == other.dia and self.turno == other.turno and self.ordem == other.ordem)
  246:     def __hash__(self):
  247:         return id(self)
  248:     
  249:     def __str__(self):
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.46835 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 457] SCI core.models: 
--------------------------------------------------------------------------------
  243:         '''Override the default Equals behavior'''
  244:         return (self.dia == other.dia and self.turno == other.turno and self.ordem == other.ordem)
  245:     
  246:     def __hash__(self):
- 247:         return id(self)
- 248:     
+ 247:         super().__hash__()
+ 248:         return id(self)
  249:     def __str__(self):
  250:         return (self.dia + self.turno) + self.ordem
  251: 
  252: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.41675 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 458] SCI core.models: 
--------------------------------------------------------------------------------
  246:     def __hash__(self):
  247:         return id(self)
  248:     
  249:     def __str__(self):
- 250:         return (self.dia + self.turno) + self.ordem
- 251: 
+ 250:         super().__str__()
+ 251:         return (self.dia + self.turno) + self.ordem
  252: 
  253: class Turma(models.Model):
  254:     id_turma = models.IntegerField()
  255:     codigo_turma = models.CharField(max_length=50)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.41132 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 459] SCI core.models: 
--------------------------------------------------------------------------------
  282:     class Meta:
  283:         unique_together = ('codigo_turma', 'componente', 'ano', 'periodo')
  284:     
  285:     def __str__(self):
- 286:         return (((((((self.id_turma.__str__() + ' - ') + self.codigo_turma) + ' - ') + self.componente.__str__()) + ' - ') + \
- 287:             self.docente.__str__()) + ' - ') + self.descricao_horario
- 288:     
+ 286:         super().__str__()
+ 287:         return (((((((self.id_turma.__str__() + ' - ') + self.codigo_turma) + ' - ') + self.componente.__str__()) + ' - ') + \
+ 288:             self.docente.__str__()) + ' - ') + self.descricao_horario
  289:     def get_curriculos(self, estrutura=None):
  290:         if estrutura:
  291:             return OrganizacaoCurricular.objects.get(
  292:                 componente=self.componente, 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.76068 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 460] SCI core.models: 
--------------------------------------------------------------------------------
  319:         verbose_name = 'sugestão de turma'
  320:         verbose_name_plural = 'sugestões de turmas'
  321:     
  322:     def __str__(self):
- 323:         return ((((((((self.codigo_turma + ' - ') + str(self.componente)) + ' - ') + \
- 324:             self.descricao_horario) + ' (') + str(self.ano)) + '.') + str(self.periodo)) + ')'
- 325: 
+ 323:         super().__str__()
+ 324:         return ((((((((self.codigo_turma + ' - ') + str(self.componente)) + ' - ') + \
+ 325:             self.descricao_horario) + ' (') + str(self.ano)) + '.') + str(self.periodo)) + ')'
  326: 
  327: class FuncaoGratificada(models.Model):
  328:     '''
  329:     Modelo para as funções gratificadas (designações).
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.74557 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 461] SCI core.models: 
--------------------------------------------------------------------------------
  344:     class Meta:
  345:         unique_together = ('siape', 'id_unidade', 'inicio', 'atividade')
  346:     
  347:     def __str__(self):
- 348:         return ((((((self.nome + ' (') + self.siape.__str__()) + ') - ') + \
- 349:             self.atividade) + ' (') + self.unidade_designacao) + ')'
- 350: 
+ 348:         super().__str__()
+ 349:         return ((((((self.nome + ' (') + self.siape.__str__()) + ') - ') + \
+ 350:             self.atividade) + ' (') + self.unidade_designacao) + ')'
  351: 
  352: class Discente(models.Model):
  353:     '''
  354:     Modelo para os dados dos Discentes.
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[2.00892 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 462] SCI core.models: 
--------------------------------------------------------------------------------
  376:         blank=True, null=True)
  377:     
  378:     
  379:     def __str__(self):
- 380:         return ((((((self.nome_discente + ' (') + self.matricula.__str__()) + ') - ') + \
- 381:             self.nome_curso) + ' (') + self.nome_unidade) + ')'
- 382: 
+ 380:         super().__str__()
+ 381:         return ((((((self.nome_discente + ' (') + self.matricula.__str__()) + ') - ') + \
+ 382:             self.nome_curso) + ' (') + self.nome_unidade) + ')'
  383: 
  384: 
  385: 
  386: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[2.00841 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 463] SCI core.models: 
--------------------------------------------------------------------------------
  396:     class Meta:
  397:         unique_together = ('solicitador', 'turma')
  398:     
  399:     def __str__(self):
- 400:         return ((str(self.solicitador) + ' (') + str(self.turma)) + ')'
- 401: 
+ 400:         super().__str__()
+ 401:         return ((str(self.solicitador) + ' (') + str(self.turma)) + ')'
  402: class VinculoDocente(models.Model):
  403:     docente = models.ForeignKey(Docente, on_delete=models.PROTECT)
  404:     turma = models.ForeignKey(Turma, on_delete=models.PROTECT)
  405:     carga_horaria = models.IntegerField()
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.71863 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 464] SCI core.models: 
--------------------------------------------------------------------------------
  432:     status = models.CharField(max_length=1, choices=STATUS_CHOICES)
  433:     observacoes = models.CharField(max_length=500, blank=True, null=True)
  434:     
  435:     def __str__(self):
- 436:         return (str(self.ano) + '.') + str(self.periodo)
- 437:     
+ 436:         super().__str__()
+ 437:         return (str(self.ano) + '.') + str(self.periodo)
  438:     def is_same_as(self, ano_periodo: str) -> bool:
  439:         if (ano_periodo is None or ano_periodo == ''):
  440:             return False
  441:         ano = ano_periodo.split('.')[0]
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.96517 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 465] SCI core.models: 
--------------------------------------------------------------------------------
  486:     class Meta:
  487:         unique_together = ('nome', 'curso')
  488:     
  489:     def __str__(self):
- 490:         return ((self.nome + ' (') + self.curso.nome) + ')'
- 491: 
+ 490:         super().__str__()
+ 491:         return ((self.nome + ' (') + self.curso.nome) + ')'
  492: 
  493: class VotoTurma(models.Model):
  494:     VALIDO = '1'
  495:     ABSTENCAO = '2'
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.42799 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 466] SCI core.models: 
--------------------------------------------------------------------------------
  507:     class Meta:
  508:         unique_together = ('enquete', 'discente', 'componente')
  509:     
  510:     def __str__(self):
- 511:         return ((str(self.componente) + ' (') + self.discente.nome_discente) + ')'
- 512: 
+ 511:         super().__str__()
+ 512:         return ((str(self.componente) + ' (') + self.discente.nome_discente) + ')'
  513: 
  514: class VinculoDocenteSugestao(models.Model):
  515:     docente = models.ForeignKey(Docente, on_delete=models.PROTECT)
  516:     sugestao = models.ForeignKey(SugestaoTurma, on_delete=models.CASCADE)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.85576 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 467] SCI core.models: 
--------------------------------------------------------------------------------
  522:     class Meta:
  523:         unique_together = ('docente', 'sugestao')
  524:     
  525:     def __str__(self):
- 526:         return ((((((str(self.sugestao) + ' ') + str(self.sugestao.ano)) + '.') + str(self.sugestao.periodo)) + ' (') + str(self.docente)) + ')'
- 527: 
+ 526:         super().__str__()
+ 527:         return ((((((str(self.sugestao) + ' ') + str(self.sugestao.ano)) + '.') + str(self.sugestao.periodo)) + ' (') + str(self.docente)) + ')'
  528: 
  529: class Historico(models.Model):
  530:     discente = models.ForeignKey(Discente, on_delete=models.PROTECT)
  531:     componente = models.ForeignKey(ComponenteCurricular, on_delete=models.PROTECT)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.66899 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 468] SCI core.models: 
--------------------------------------------------------------------------------
  535:     class Meta:
  536:         unique_together = ('discente', 'componente')
  537:     
  538:     def __str__(self):
- 539:         return ((str(self.componente) + ' (') + self.discente.nome_discente) + ')'
+ 539:         super().__str__()
+ 540:         return ((str(self.componente) + ' (') + self.discente.nome_discente) + ')'
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.49729 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 469] COI core.templatetags.sc_extras: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: @register.simple_tag
   8: def get_curriculo(turma, estrutura):curriculos = turma.get_curriculos()
-  9:     if curriculos.count() > 1:
+  9:     if not (curriculos.count() > 1):
  10:         return curriculos.first()
  11:     return curriculos.first()
  12: 
  13: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.59613 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 470] COI core.templatetags.sc_extras: 
--------------------------------------------------------------------------------
  13: 
  14: 
  15: @register.simple_tag
  16: def get_semestre(turma, estrutura):curriculo = turma.get_curriculos(estrutura)
- 17:     if curriculo:
+ 17:     if not curriculo:
  18:         return curriculo.semestre
  19:     return None
  20: 
  21: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.52779 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 471] COI core.templatetags.sc_extras: 
--------------------------------------------------------------------------------
  21: 
  22: 
  23: @register.simple_tag
  24: def get_tipo_vinculo(turma, estrutura):curriculo = turma.get_curriculos(estrutura)
- 25:     if curriculo:
+ 25:     if not curriculo:
  26:         return curriculo.tipo_vinculo
  27:     return None
--------------------------------------------------------------------------------
[2.06629 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 472] DDL core.templatetags.sc_extras: 
--------------------------------------------------------------------------------
   3: register = template.Library()
   4: 
   5: 
   6: 
-  7: @register.simple_tag
-  8: def get_curriculo(turma, estrutura):curriculos = turma.get_curriculos()
+  7: def get_curriculo(turma, estrutura):
+  8:     curriculos = turma.get_curriculos()
   9:     if curriculos.count() > 1:
  10:         return curriculos.first()
  11:     return curriculos.first()
  12: 
--------------------------------------------------------------------------------
[1.55587 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 473] DDL core.templatetags.sc_extras: 
--------------------------------------------------------------------------------
  11:     return curriculos.first()
  12: 
  13: 
  14: 
- 15: @register.simple_tag
- 16: def get_semestre(turma, estrutura):curriculo = turma.get_curriculos(estrutura)
+ 15: def get_semestre(turma, estrutura):
+ 16:     curriculo = turma.get_curriculos(estrutura)
  17:     if curriculo:
  18:         return curriculo.semestre
  19:     return None
  20: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.57672 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 474] DDL core.templatetags.sc_extras: 
--------------------------------------------------------------------------------
  19:     return None
  20: 
  21: 
  22: 
- 23: @register.simple_tag
- 24: def get_tipo_vinculo(turma, estrutura):curriculo = turma.get_curriculos(estrutura)
+ 23: def get_tipo_vinculo(turma, estrutura):
+ 24:     curriculo = turma.get_curriculos(estrutura)
  25:     if curriculo:
  26:         return curriculo.tipo_vinculo
  27:     return None
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[2.09861 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 475] ROR core.templatetags.sc_extras: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: @register.simple_tag
   8: def get_curriculo(turma, estrutura):curriculos = turma.get_curriculos()
-  9:     if curriculos.count() > 1:
+  9:     if curriculos.count() < 1:
  10:         return curriculos.first()
  11:     return curriculos.first()
  12: 
  13: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.83757 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 476] ROR core.templatetags.sc_extras: 
--------------------------------------------------------------------------------
   5: 
   6: 
   7: @register.simple_tag
   8: def get_curriculo(turma, estrutura):curriculos = turma.get_curriculos()
-  9:     if curriculos.count() > 1:
+  9:     if curriculos.count() >= 1:
  10:         return curriculos.first()
  11:     return curriculos.first()
  12: 
  13: 
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................[1.59652 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 477] ASR core.urls: 
--------------------------------------------------------------------------------
  215:     path('plot/', views.plot, name='Plot de Gráfico')]
  216: 
  217: 
  218: if DEBUG:
- 219:     urlpatterns += static(STATIC_URL, document_root=STATIC_ROOT)
+ 219:     urlpatterns -= static(STATIC_URL, document_root=STATIC_ROOT)
  220:     urlpatterns += static(MEDIA_URL, document_root=MEDIA_ROOT)
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 478] ASR core.urls: 
--------------------------------------------------------------------------------
  216: 
  217: 
  218: if DEBUG:
  219:     urlpatterns += static(STATIC_URL, document_root=STATIC_ROOT)
- 220:     urlpatterns += static(MEDIA_URL, document_root=MEDIA_ROOT)
+ 220:     urlpatterns -= static(MEDIA_URL, document_root=MEDIA_ROOT)
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 479] COI core.urls: 
--------------------------------------------------------------------------------
  214:     \
  215:     path('plot/', views.plot, name='Plot de Gráfico')]
  216: 
  217: 
- 218: if DEBUG:
+ 218: if not DEBUG:
  219:     urlpatterns += static(STATIC_URL, document_root=STATIC_ROOT)
  220:     urlpatterns += static(MEDIA_URL, document_root=MEDIA_ROOT)
--------------------------------------------------------------------------------
[1.54284 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 480] AOR core.views: 
--------------------------------------------------------------------------------
  122:     return HttpResponse(template.render(context, request))
  123: 
  124: 
  125: def detail(request, horario_id):
- 126:     return HttpResponse("You're looking at Horario %s." % horario_id)
+ 126:     return HttpResponse("You're looking at Horario %s." * horario_id)
  127: 
  128: 
  129: def curso_detail(request, curso_id):
  130:     curso = Curso.objects.get(pk=curso_id)
--------------------------------------------------------------------------------

Teste A
> povoando dados
......................................................................................................
CurriculoTests
> povoando dados
......................................................................................................
DAOTests
> povoando dados
......................................................................................................
DiscenteTests
> povoando dados
......................................................................................................
DocenteTests
> povoando dados
......................................................................................................
EnqueteTests
> povoando dados
......................................................................................................
FlowViewTests
> povoando dados
......................................................................................................
DiscenteTests
> povoando dados
......................................................................................................( ( BSI3102 ) OU ( DCT2305 ) ) E ( ( BSI1107 ) OU ( DCT1107 ) ) 
( ( BSI3102 ) False ( DCT2305 ) ) and ( ( BSI1107 ) False ( DCT1107 ) ) 
[138.62629 s] timeout
   - [# 481] AOR core.views: 
--------------------------------------------------------------------------------
  127: 
  128: 
  129: def curso_detail(request, curso_id):
  130:     curso = Curso.objects.get(pk=curso_id)
- 131:     return HttpResponse("You're looking at Curso %s." % curso)
+ 131:     return HttpResponse("You're looking at Curso %s." * curso)
  132: 
  133: 
  134: def horarios_list(request):
  135:     horario_list = Horario.objects.all()
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 482] AOR core.views: 
--------------------------------------------------------------------------------
  836:     return sugestao_deletar(request, pk, estrutura=tur_csh)
  837: 
  838: 
  839: def error_403(request, exception):
- 840:     logger.error(('Você não tem permissão de acessar "' + request.path) + '" 403 ', 
+ 840:     logger.error(('Você não tem permissão de acessar "' - request.path) + '" 403 ', 
  841:         exc_info=exception)
  842:     messages.error(request, 'Você não tem permissão de acessar: ' + request.path)
  843:     return redirecionar(request)
  844: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 483] AOR core.views: 
--------------------------------------------------------------------------------
  836:     return sugestao_deletar(request, pk, estrutura=tur_csh)
  837: 
  838: 
  839: def error_403(request, exception):
- 840:     logger.error(('Você não tem permissão de acessar "' + request.path) + '" 403 ', 
+ 840:     logger.error(('Você não tem permissão de acessar "' + request.path) - '" 403 ', 
  841:         exc_info=exception)
  842:     messages.error(request, 'Você não tem permissão de acessar: ' + request.path)
  843:     return redirecionar(request)
  844: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 484] AOR core.views: 
--------------------------------------------------------------------------------
  838: 
  839: def error_403(request, exception):
  840:     logger.error(('Você não tem permissão de acessar "' + request.path) + '" 403 ', 
  841:         exc_info=exception)
- 842:     messages.error(request, 'Você não tem permissão de acessar: ' + request.path)
+ 842:     messages.error(request, 'Você não tem permissão de acessar: ' - request.path)
  843:     return redirecionar(request)
  844: 
  845: 
  846: def search_salas(request):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 485] AOR core.views: 
--------------------------------------------------------------------------------
  877:         qtd_ativos = self.object.qtd_discentes_ativos
  878:         qtd_votantes = get_qtd_votantes(self.object)
  879:         qtd_abstencao = get_qtd_abstencao(self.object)
  880:         context['discentes_ativos'] = qtd_ativos
- 881:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
+ 881:         taxa = round((qtd_votantes // qtd_ativos) * 100.0, 2)
  882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
  883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
  884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
  885:         
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 486] AOR core.views: 
--------------------------------------------------------------------------------
  877:         qtd_ativos = self.object.qtd_discentes_ativos
  878:         qtd_votantes = get_qtd_votantes(self.object)
  879:         qtd_abstencao = get_qtd_abstencao(self.object)
  880:         context['discentes_ativos'] = qtd_ativos
- 881:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
+ 881:         taxa = round((qtd_votantes * qtd_ativos) * 100.0, 2)
  882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
  883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
  884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
  885:         
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 487] AOR core.views: 
--------------------------------------------------------------------------------
  877:         qtd_ativos = self.object.qtd_discentes_ativos
  878:         qtd_votantes = get_qtd_votantes(self.object)
  879:         qtd_abstencao = get_qtd_abstencao(self.object)
  880:         context['discentes_ativos'] = qtd_ativos
- 881:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
+ 881:         taxa = round((qtd_votantes / qtd_ativos) / 100.0, 2)
  882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
  883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
  884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
  885:         
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 488] AOR core.views: 
--------------------------------------------------------------------------------
  877:         qtd_ativos = self.object.qtd_discentes_ativos
  878:         qtd_votantes = get_qtd_votantes(self.object)
  879:         qtd_abstencao = get_qtd_abstencao(self.object)
  880:         context['discentes_ativos'] = qtd_ativos
- 881:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
+ 881:         taxa = round((qtd_votantes / qtd_ativos) // 100.0, 2)
  882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
  883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
  884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
  885:         
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 489] AOR core.views: 
--------------------------------------------------------------------------------
  877:         qtd_ativos = self.object.qtd_discentes_ativos
  878:         qtd_votantes = get_qtd_votantes(self.object)
  879:         qtd_abstencao = get_qtd_abstencao(self.object)
  880:         context['discentes_ativos'] = qtd_ativos
- 881:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
+ 881:         taxa = round((qtd_votantes / qtd_ativos) ** 100.0, 2)
  882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
  883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
  884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
  885:         
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 490] AOR core.views: 
--------------------------------------------------------------------------------
  878:         qtd_votantes = get_qtd_votantes(self.object)
  879:         qtd_abstencao = get_qtd_abstencao(self.object)
  880:         context['discentes_ativos'] = qtd_ativos
  881:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
- 882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
+ 882:         taxa_abstencao = round((qtd_abstencao // qtd_ativos) * 100.0, 2)
  883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
  884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
  885:         
  886:         return context
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 491] AOR core.views: 
--------------------------------------------------------------------------------
  878:         qtd_votantes = get_qtd_votantes(self.object)
  879:         qtd_abstencao = get_qtd_abstencao(self.object)
  880:         context['discentes_ativos'] = qtd_ativos
  881:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
- 882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
+ 882:         taxa_abstencao = round((qtd_abstencao * qtd_ativos) * 100.0, 2)
  883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
  884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
  885:         
  886:         return context
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 492] AOR core.views: 
--------------------------------------------------------------------------------
  878:         qtd_votantes = get_qtd_votantes(self.object)
  879:         qtd_abstencao = get_qtd_abstencao(self.object)
  880:         context['discentes_ativos'] = qtd_ativos
  881:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
- 882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
+ 882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) / 100.0, 2)
  883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
  884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
  885:         
  886:         return context
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 493] AOR core.views: 
--------------------------------------------------------------------------------
  878:         qtd_votantes = get_qtd_votantes(self.object)
  879:         qtd_abstencao = get_qtd_abstencao(self.object)
  880:         context['discentes_ativos'] = qtd_ativos
  881:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
- 882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
+ 882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) // 100.0, 2)
  883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
  884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
  885:         
  886:         return context
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 494] AOR core.views: 
--------------------------------------------------------------------------------
  878:         qtd_votantes = get_qtd_votantes(self.object)
  879:         qtd_abstencao = get_qtd_abstencao(self.object)
  880:         context['discentes_ativos'] = qtd_ativos
  881:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
- 882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
+ 882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) ** 100.0, 2)
  883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
  884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
  885:         
  886:         return context
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 495] AOR core.views: 
--------------------------------------------------------------------------------
  879:         qtd_abstencao = get_qtd_abstencao(self.object)
  880:         context['discentes_ativos'] = qtd_ativos
  881:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
  882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
- 883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
+ 883:         context['taxa_votacao'] = ((str(taxa) - '% (') + str(qtd_votantes)) + ' discentes)'
  884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
  885:         
  886:         return context
  887: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 496] AOR core.views: 
--------------------------------------------------------------------------------
  879:         qtd_abstencao = get_qtd_abstencao(self.object)
  880:         context['discentes_ativos'] = qtd_ativos
  881:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
  882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
- 883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
+ 883:         context['taxa_votacao'] = ((str(taxa) + '% (') - str(qtd_votantes)) + ' discentes)'
  884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
  885:         
  886:         return context
  887: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 497] AOR core.views: 
--------------------------------------------------------------------------------
  879:         qtd_abstencao = get_qtd_abstencao(self.object)
  880:         context['discentes_ativos'] = qtd_ativos
  881:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
  882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
- 883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
+ 883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) - ' discentes)'
  884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
  885:         
  886:         return context
  887: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 498] AOR core.views: 
--------------------------------------------------------------------------------
  880:         context['discentes_ativos'] = qtd_ativos
  881:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
  882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
  883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
- 884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
+ 884:         context['taxa_abstencao'] = ((str(taxa_abstencao) - '% (') + str(qtd_abstencao)) + ' discentes)'
  885:         
  886:         return context
  887: 
  888: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 499] AOR core.views: 
--------------------------------------------------------------------------------
  880:         context['discentes_ativos'] = qtd_ativos
  881:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
  882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
  883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
- 884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
+ 884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') - str(qtd_abstencao)) + ' discentes)'
  885:         
  886:         return context
  887: 
  888: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 500] AOR core.views: 
--------------------------------------------------------------------------------
  880:         context['discentes_ativos'] = qtd_ativos
  881:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
  882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
  883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
- 884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
+ 884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) - ' discentes)'
  885:         
  886:         return context
  887: 
  888: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 501] COD core.views: 
--------------------------------------------------------------------------------
  869:             periodo=Subquery(periodo_qs.values('semestre')[:1])).order_by(
  870:             '-votos', 'componente__nome')
  871:         context['votos_por_componente'] = votos_por_componente
  872:         curso = self.object.curso
- 873:         if not (self.object.qtd_discentes_ativos):
+ 873:         if self.object.qtd_discentes_ativos:
  874:             self.object.qtd_discentes_ativos = get_qtd_discentes_ativos(curso)
  875:             self.object.save()
  876:         
  877:         qtd_ativos = self.object.qtd_discentes_ativos
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 502] COI core.views: 
--------------------------------------------------------------------------------
  400:     return flow_opcionais(request, tur_ec)
  401: 
  402: 
  403: def cadastrar_usuario(request):
- 404:     if request.method == 'POST':
+ 404:     if not (request.method == 'POST'):
  405:         form_usuario = CadastroUsuarioForm(request.POST)
  406:         if form_usuario.is_valid():
  407:             try:
  408:                 criar_usuario(request, form_usuario)
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 503] COI core.views: 
--------------------------------------------------------------------------------
  402: 
  403: def cadastrar_usuario(request):
  404:     if request.method == 'POST':
  405:         form_usuario = CadastroUsuarioForm(request.POST)
- 406:         if form_usuario.is_valid():
+ 406:         if not (form_usuario.is_valid()):
  407:             try:
  408:                 criar_usuario(request, form_usuario)
  409:                 autenticar_logar(request, form_usuario)
  410:                 messages.success(request, 'Usuário cadastrado com sucesso.')
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 504] COI core.views: 
--------------------------------------------------------------------------------
  418:     return render(request, 'core/usuario/cadastro.html', {'form_usuario': form_usuario})
  419: 
  420: 
  421: def logar_usuario(request):
- 422:     if request.method == 'POST':
+ 422:     if not (request.method == 'POST'):
  423:         username = request.POST['username']
  424:         password = request.POST['password']
  425:         usuario = authenticate(request, username=username, password=password)
  426:         if usuario is not None:
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 505] COI core.views: 
--------------------------------------------------------------------------------
  422:     if request.method == 'POST':
  423:         username = request.POST['username']
  424:         password = request.POST['password']
  425:         usuario = authenticate(request, username=username, password=password)
- 426:         if usuario is not None:
+ 426:         if not (usuario is not None):
  427:             login(request, usuario)
  428:             messages.success(request, 'Usuário logado com sucesso.')
  429:             return redirect('index')
  430:         else:
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 506] COI core.views: 
--------------------------------------------------------------------------------
  443: 
  444: 
  445: 
  446: @login_required(login_url='/core/usuario/logar')
- 447: def alterar_senha(request):if request.method == 'POST':
+ 447: def alterar_senha(request):if not (request.method == 'POST'):
  448:         form_senha = PasswordChangeForm(request.user, request.POST)
  449:         if form_senha.is_valid():
  450:             user = form_senha.save()
  451:             update_session_auth_hash(request, user)
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 507] COI core.views: 
--------------------------------------------------------------------------------
  445: 
  446: @login_required(login_url='/core/usuario/logar')
  447: def alterar_senha(request):if request.method == 'POST':
  448:         form_senha = PasswordChangeForm(request.user, request.POST)
- 449:         if form_senha.is_valid():
+ 449:         if not (form_senha.is_valid()):
  450:             user = form_senha.save()
  451:             update_session_auth_hash(request, user)
  452:             messages.success(request, 'Usuário atualizado com sucesso.')
  453:             return redirect('index')
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 508] COI core.views: 
--------------------------------------------------------------------------------
  869:             periodo=Subquery(periodo_qs.values('semestre')[:1])).order_by(
  870:             '-votos', 'componente__nome')
  871:         context['votos_por_componente'] = votos_por_componente
  872:         curso = self.object.curso
- 873:         if not (self.object.qtd_discentes_ativos):
+ 873:         if not ((not (self.object.qtd_discentes_ativos))):
  874:             self.object.qtd_discentes_ativos = get_qtd_discentes_ativos(curso)
  875:             self.object.save()
  876:         
  877:         qtd_ativos = self.object.qtd_discentes_ativos
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 509] COI core.views: 
--------------------------------------------------------------------------------
  888: 
  889: def search_enquetes(request):
  890:     
  891:     usuario = request.user
- 892:     if (usuario.id is not None and discente_existe(usuario)):
+ 892:     if not ((usuario.id is not None and discente_existe(usuario))):
  893:         discente = usuario.discente
  894:         enquetes = get_enquetes_por_curso(discente.id_curso)
  895:     else:
  896:         enquetes = get_enquetes()
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 510] DDL core.views: 
--------------------------------------------------------------------------------
   87:     return render(request, 'core/sobre.html', context)
   88: 
   89: 
   90: 
-  91: @login_required(login_url='/accounts/login')
-  92: def dashboard(request):'''
+  91: def dashboard(request):
+  92:     '''
   93:         View index para o Dashboard.
   94:     :param request: Requisição do http.
   95:     :return: retorna um HttpResponse
   96:     '''
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 511] DDL core.views: 
--------------------------------------------------------------------------------
  435:     return render(request, 'core/usuario/login.html', {'form_login': form_login})
  436: 
  437: 
  438: 
- 439: @login_required(login_url='/core/usuario/logar')
- 440: def deslogar_usuario(request):logout(request)
+ 439: def deslogar_usuario(request):
+ 440:     logout(request)
  441:     messages.success(request, 'Usuário deslogado com sucesso.')
  442:     return redirect('index')
  443: 
  444: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 512] DDL core.views: 
--------------------------------------------------------------------------------
  442:     return redirect('index')
  443: 
  444: 
  445: 
- 446: @login_required(login_url='/core/usuario/logar')
- 447: def alterar_senha(request):if request.method == 'POST':
+ 446: def alterar_senha(request):
+ 447:     if request.method == 'POST':
  448:         form_senha = PasswordChangeForm(request.user, request.POST)
  449:         if form_senha.is_valid():
  450:             user = form_senha.save()
  451:             update_session_auth_hash(request, user)
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 513] DDL core.views: 
--------------------------------------------------------------------------------
  566:     template_name = 'core/sugestao/detalhar.html'
  567: 
  568: 
  569: 
- 570: @permission_required('core.add_solicitacaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 571: def sugestao_solicitar(request, pk):return atualizar_solicitacao(request, pk)
+ 570: def sugestao_solicitar(request, pk):
+ 571:     return atualizar_solicitacao(request, pk)
  572: 
  573: 
  574: 
  575: @login_required(login_url='/accounts/login')
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 514] DDL core.views: 
--------------------------------------------------------------------------------
  571: def sugestao_solicitar(request, pk):return atualizar_solicitacao(request, pk)
  572: 
  573: 
  574: 
- 575: @login_required(login_url='/accounts/login')
- 576: def solicitacao_turma_listar(request, pk):
+ 575: def solicitacao_turma_listar(request, pk):
+ 576:     
  577:     turma = SugestaoTurma.objects.get(pk=pk)
  578:     solicitacoes = SolicitacaoTurma.objects.filter(turma=turma).order_by('criada_em', 'solicitador__nome_curso')
  579:     
  580:     context = {\
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 515] DDL core.views: 
--------------------------------------------------------------------------------
  585:     return render(request, 'core/sugestao/solicitacao_listar.html', context)
  586: 
  587: 
  588: 
- 589: @permission_required('core.delete_solicitacaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 590: def solicitacao_deletar(request, pk):return solicitacao_discente_deletar(request, pk)
+ 589: def solicitacao_deletar(request, pk):
+ 590:     return solicitacao_discente_deletar(request, pk)
  591: 
  592: 
  593: def sugestao_adm_list(request):
  594:     adm_csh = get_estrutura_administracao()
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 516] DDL core.views: 
--------------------------------------------------------------------------------
  598:     return sugestao_grade_horarios(request, adm_csh, sugestao_incluir_link, sugestao_manter_link, sugestao_list_link)
  599: 
  600: 
  601: 
- 602: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 603: def sugestao_adm_manter(request):'''
+ 602: def sugestao_adm_manter(request):
+ 603:     '''
  604:         Tela de Manter Sugestão de Turmas do Curso de Administração - Currais Novos.
  605:     '''
  606:     adm_csh = get_estrutura_administracao()
  607:     sugestao_incluir_link = '/core/sugestao/adm/incluir'
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 517] DDL core.views: 
--------------------------------------------------------------------------------
  612:         sugestao_editar_link, sugestao_deletar_link)
  613: 
  614: 
  615: 
- 616: @permission_required('core.add_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 617: def sugestao_adm_incluir(request):adm_csh = get_estrutura_administracao()
+ 616: def sugestao_adm_incluir(request):
+ 617:     adm_csh = get_estrutura_administracao()
  618:     sugestao_manter_link = '/core/sugestao/adm/manter'
  619:     return sugestao_incluir(request, adm_csh, sugestao_manter_link)
  620: 
  621: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 518] DDL core.views: 
--------------------------------------------------------------------------------
  619:     return sugestao_incluir(request, adm_csh, sugestao_manter_link)
  620: 
  621: 
  622: 
- 623: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 624: def sugestao_adm_editar(request, pk):adm_csh = get_estrutura_administracao()
+ 623: def sugestao_adm_editar(request, pk):
+ 624:     adm_csh = get_estrutura_administracao()
  625:     return sugestao_editar(request, pk, estrutura=adm_csh)
  626: 
  627: 
  628: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 519] DDL core.views: 
--------------------------------------------------------------------------------
  625:     return sugestao_editar(request, pk, estrutura=adm_csh)
  626: 
  627: 
  628: 
- 629: @permission_required('core.delete_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 630: def sugestao_adm_deletar(request, pk):adm_csh = get_estrutura_administracao()
+ 629: def sugestao_adm_deletar(request, pk):
+ 630:     adm_csh = get_estrutura_administracao()
  631:     return sugestao_deletar(request, pk, estrutura=adm_csh)
  632: 
  633: 
  634: def sugestao_dir_list(request):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 520] DDL core.views: 
--------------------------------------------------------------------------------
  639:     return sugestao_grade_horarios(request, dir_ddir, sugestao_incluir_link, sugestao_manter_link, sugestao_list_link)
  640: 
  641: 
  642: 
- 643: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 644: def sugestao_dir_manter(request):'''
+ 643: def sugestao_dir_manter(request):
+ 644:     '''
  645:         Tela de Manter Sugestão de Turmas do Curso de Direito.
  646:     '''
  647:     dir_ddir = get_estrutura_direito()
  648:     sugestao_incluir_link = '/core/sugestao/dir/incluir'
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 521] DDL core.views: 
--------------------------------------------------------------------------------
  653:         sugestao_editar_link, sugestao_deletar_link)
  654: 
  655: 
  656: 
- 657: @permission_required('core.add_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 658: def sugestao_dir_incluir(request):dir_ddir = get_estrutura_direito()
+ 657: def sugestao_dir_incluir(request):
+ 658:     dir_ddir = get_estrutura_direito()
  659:     sugestao_manter_link = '/core/sugestao/dir/manter'
  660:     return sugestao_incluir(request, dir_ddir, sugestao_manter_link)
  661: 
  662: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 522] DDL core.views: 
--------------------------------------------------------------------------------
  660:     return sugestao_incluir(request, dir_ddir, sugestao_manter_link)
  661: 
  662: 
  663: 
- 664: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 665: def sugestao_dir_editar(request, pk):dir_ddir = get_estrutura_direito()
+ 664: def sugestao_dir_editar(request, pk):
+ 665:     dir_ddir = get_estrutura_direito()
  666:     return sugestao_editar(request, pk, estrutura=dir_ddir)
  667: 
  668: 
  669: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 523] DDL core.views: 
--------------------------------------------------------------------------------
  666:     return sugestao_editar(request, pk, estrutura=dir_ddir)
  667: 
  668: 
  669: 
- 670: @permission_required('core.delete_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 671: def sugestao_dir_deletar(request, pk):dir_ddir = get_estrutura_direito()
+ 670: def sugestao_dir_deletar(request, pk):
+ 671:     dir_ddir = get_estrutura_direito()
  672:     return sugestao_deletar(request, pk, estrutura=dir_ddir)
  673: 
  674: 
  675: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 524] DDL core.views: 
--------------------------------------------------------------------------------
  672:     return sugestao_deletar(request, pk, estrutura=dir_ddir)
  673: 
  674: 
  675: 
- 676: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 677: def sugestao_mat_manter(request):'''
+ 676: def sugestao_mat_manter(request):
+ 677:     '''
  678:         Tela de Manter Sugestão de Turmas do Curso de Matemática.
  679:     '''
  680:     mat_dcea = get_estrutura_matematica()
  681:     sugestao_incluir_link = '/core/sugestao/mat/incluir'
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 525] DDL core.views: 
--------------------------------------------------------------------------------
  686:         sugestao_editar_link, sugestao_deletar_link)
  687: 
  688: 
  689: 
- 690: @permission_required('core.add_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 691: def sugestao_mat_incluir(request):mat_dcea = get_estrutura_matematica()
+ 690: def sugestao_mat_incluir(request):
+ 691:     mat_dcea = get_estrutura_matematica()
  692:     sugestao_manter_link = '/core/sugestao/mat/manter'
  693:     return sugestao_incluir(request, mat_dcea, sugestao_manter_link)
  694: 
  695: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 526] DDL core.views: 
--------------------------------------------------------------------------------
  693:     return sugestao_incluir(request, mat_dcea, sugestao_manter_link)
  694: 
  695: 
  696: 
- 697: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 698: def sugestao_mat_editar(request, pk):mat_dcea = get_estrutura_matematica()
+ 697: def sugestao_mat_editar(request, pk):
+ 698:     mat_dcea = get_estrutura_matematica()
  699:     return sugestao_editar(request, pk, estrutura=mat_dcea)
  700: 
  701: 
  702: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 527] DDL core.views: 
--------------------------------------------------------------------------------
  699:     return sugestao_editar(request, pk, estrutura=mat_dcea)
  700: 
  701: 
  702: 
- 703: @permission_required('core.delete_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 704: def sugestao_mat_deletar(request, pk):mat_dcea = get_estrutura_matematica()
+ 703: def sugestao_mat_deletar(request, pk):
+ 704:     mat_dcea = get_estrutura_matematica()
  705:     return sugestao_deletar(request, pk, estrutura=mat_dcea)
  706: 
  707: 
  708: def sugestao_mat_list(request):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 528] DDL core.views: 
--------------------------------------------------------------------------------
  713:     return sugestao_grade_horarios(request, mat_dcea, sugestao_incluir_link, sugestao_manter_link, sugestao_list_link)
  714: 
  715: 
  716: 
- 717: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 718: def sugestao_bsi_manter(request):'''
+ 717: def sugestao_bsi_manter(request):
+ 718:     '''
  719:         Tela de Manter Sugestão de Turmas do Curso de Sistemas de Informação.
  720:     '''
  721:     bsi_dct = get_estrutura_sistemas_dct()
  722:     sugestao_incluir_link = '/core/sugestao/bsi/incluir'
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 529] DDL core.views: 
--------------------------------------------------------------------------------
  727:         sugestao_editar_link, sugestao_deletar_link)
  728: 
  729: 
  730: 
- 731: @permission_required('core.add_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 732: def sugestao_bsi_incluir(request):bsi_dct = get_estrutura_sistemas_dct()
+ 731: def sugestao_bsi_incluir(request):
+ 732:     bsi_dct = get_estrutura_sistemas_dct()
  733:     sugestao_manter_link = '/core/sugestao/bsi/manter'
  734:     return sugestao_incluir(request, bsi_dct, sugestao_manter_link)
  735: 
  736: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 530] DDL core.views: 
--------------------------------------------------------------------------------
  734:     return sugestao_incluir(request, bsi_dct, sugestao_manter_link)
  735: 
  736: 
  737: 
- 738: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 739: def sugestao_bsi_editar(request, pk):bsi_dct = get_estrutura_sistemas_dct()
+ 738: def sugestao_bsi_editar(request, pk):
+ 739:     bsi_dct = get_estrutura_sistemas_dct()
  740:     return sugestao_editar(request, pk, estrutura=bsi_dct)
  741: 
  742: 
  743: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 531] DDL core.views: 
--------------------------------------------------------------------------------
  740:     return sugestao_editar(request, pk, estrutura=bsi_dct)
  741: 
  742: 
  743: 
- 744: @permission_required('core.delete_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 745: def sugestao_bsi_deletar(request, pk):bsi_dct = get_estrutura_sistemas_dct()
+ 744: def sugestao_bsi_deletar(request, pk):
+ 745:     bsi_dct = get_estrutura_sistemas_dct()
  746:     return sugestao_deletar(request, pk, estrutura=bsi_dct)
  747: 
  748: 
  749: def sugestao_bsi_list(request):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 532] DDL core.views: 
--------------------------------------------------------------------------------
  762:     return sugestao_grade_horarios(request, ped_deduc, sugestao_incluir_link, sugestao_manter_link, sugestao_list_link)
  763: 
  764: 
  765: 
- 766: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 767: def sugestao_ped_manter(request):'''
+ 766: def sugestao_ped_manter(request):
+ 767:     '''
  768:         Tela de Manter Sugestão de Turmas do Curso de Pedagogia.
  769:     '''
  770:     ped_deduc = get_estrutura_pedagogia()
  771:     sugestao_incluir_link = '/core/sugestao/ped/incluir'
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 533] DDL core.views: 
--------------------------------------------------------------------------------
  776:         sugestao_editar_link, sugestao_deletar_link)
  777: 
  778: 
  779: 
- 780: @permission_required('core.add_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 781: def sugestao_ped_incluir(request):ped_deduc = get_estrutura_pedagogia()
+ 780: def sugestao_ped_incluir(request):
+ 781:     ped_deduc = get_estrutura_pedagogia()
  782:     sugestao_manter_link = '/core/sugestao/ped/manter'
  783:     return sugestao_incluir(request, ped_deduc, sugestao_manter_link)
  784: 
  785: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 534] DDL core.views: 
--------------------------------------------------------------------------------
  783:     return sugestao_incluir(request, ped_deduc, sugestao_manter_link)
  784: 
  785: 
  786: 
- 787: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 788: def sugestao_ped_editar(request, pk):ped_deduc = get_estrutura_pedagogia()
+ 787: def sugestao_ped_editar(request, pk):
+ 788:     ped_deduc = get_estrutura_pedagogia()
  789:     return sugestao_editar(request, pk, estrutura=ped_deduc)
  790: 
  791: 
  792: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 535] DDL core.views: 
--------------------------------------------------------------------------------
  789:     return sugestao_editar(request, pk, estrutura=ped_deduc)
  790: 
  791: 
  792: 
- 793: @permission_required('core.delete_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 794: def sugestao_ped_deletar(request, pk):ped_deduc = get_estrutura_pedagogia()
+ 793: def sugestao_ped_deletar(request, pk):
+ 794:     ped_deduc = get_estrutura_pedagogia()
  795:     return sugestao_deletar(request, pk, estrutura=ped_deduc)
  796: 
  797: 
  798: def sugestao_tur_list(request):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 536] DDL core.views: 
--------------------------------------------------------------------------------
  803:     return sugestao_grade_horarios(request, tur_csh, sugestao_incluir_link, sugestao_manter_link, sugestao_list_link)
  804: 
  805: 
  806: 
- 807: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 808: def sugestao_tur_manter(request):'''
+ 807: def sugestao_tur_manter(request):
+ 808:     '''
  809:         Tela de Manter Sugestão de Turmas do Curso de Turismo - Currais Novos.
  810:     '''
  811:     tur_csh = get_estrutura_turismo()
  812:     sugestao_incluir_link = '/core/sugestao/tur/incluir'
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 537] DDL core.views: 
--------------------------------------------------------------------------------
  817:         sugestao_editar_link, sugestao_deletar_link)
  818: 
  819: 
  820: 
- 821: @permission_required('core.add_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 822: def sugestao_tur_incluir(request):tur_csh = get_estrutura_turismo()
+ 821: def sugestao_tur_incluir(request):
+ 822:     tur_csh = get_estrutura_turismo()
  823:     sugestao_manter_link = '/core/sugestao/tur/manter'
  824:     return sugestao_incluir(request, tur_csh, sugestao_manter_link)
  825: 
  826: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 538] DDL core.views: 
--------------------------------------------------------------------------------
  824:     return sugestao_incluir(request, tur_csh, sugestao_manter_link)
  825: 
  826: 
  827: 
- 828: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 829: def sugestao_tur_editar(request, pk):tur_csh = get_estrutura_turismo()
+ 828: def sugestao_tur_editar(request, pk):
+ 829:     tur_csh = get_estrutura_turismo()
  830:     return sugestao_editar(request, pk, estrutura=tur_csh)
  831: 
  832: 
  833: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 539] DDL core.views: 
--------------------------------------------------------------------------------
  830:     return sugestao_editar(request, pk, estrutura=tur_csh)
  831: 
  832: 
  833: 
- 834: @permission_required('core.delete_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 835: def sugestao_tur_deletar(request, pk):tur_csh = get_estrutura_turismo()
+ 834: def sugestao_tur_deletar(request, pk):
+ 835:     tur_csh = get_estrutura_turismo()
  836:     return sugestao_deletar(request, pk, estrutura=tur_csh)
  837: 
  838: 
  839: def error_403(request, exception):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 540] DDL core.views: 
--------------------------------------------------------------------------------
  898:     return render(request, 'core/enquetes/list.html', {'filter': enquete_filter})
  899: 
  900: 
  901: 
- 902: @permission_required('core.add_vototurma', login_url='/core/usuario/logar', raise_exception=True)
- 903: def enquete_votar(request, pk):return enquete_voto_view(request, pk)
+ 902: def enquete_votar(request, pk):
+ 903:     return enquete_voto_view(request, pk)
  904: 
  905: 
  906: 
  907: @login_required(login_url='/accounts/login')
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 541] DDL core.views: 
--------------------------------------------------------------------------------
  903: def enquete_votar(request, pk):return enquete_voto_view(request, pk)
  904: 
  905: 
  906: 
- 907: @login_required(login_url='/accounts/login')
- 908: def enquete_detalhar_voto(request, pk):return enquete_detalhar_voto_view(request, pk)
+ 907: def enquete_detalhar_voto(request, pk):
+ 908:     return enquete_detalhar_voto_view(request, pk)
  909: 
  910: 
  911: 
  912: @permission_required('core.add_vototurma', login_url='/core/usuario/logar', raise_exception=True)
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 542] DDL core.views: 
--------------------------------------------------------------------------------
  908: def enquete_detalhar_voto(request, pk):return enquete_detalhar_voto_view(request, pk)
  909: 
  910: 
  911: 
- 912: @permission_required('core.add_vototurma', login_url='/core/usuario/logar', raise_exception=True)
- 913: def enquete_abstencao(request, pk):return enquete_voto_view(request, pk, abstencao=True)
+ 912: def enquete_abstencao(request, pk):
+ 913:     return enquete_voto_view(request, pk, abstencao=True)
  914: 
  915: 
  916: 
  917: @permission_required('core.delete_vototurma', login_url='/core/usuario/logar', raise_exception=True)
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 543] DDL core.views: 
--------------------------------------------------------------------------------
  913: def enquete_abstencao(request, pk):return enquete_voto_view(request, pk, abstencao=True)
  914: 
  915: 
  916: 
- 917: @permission_required('core.delete_vototurma', login_url='/core/usuario/logar', raise_exception=True)
- 918: def enquete_deletar_voto(request, pk):return enquete_deletar_voto_discente(request, pk)
+ 917: def enquete_deletar_voto(request, pk):
+ 918:     return enquete_deletar_voto_discente(request, pk)
  919: 
  920: 
  921: 
  922: @login_required(login_url='/accounts/login')
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 544] DDL core.views: 
--------------------------------------------------------------------------------
  918: def enquete_deletar_voto(request, pk):return enquete_deletar_voto_discente(request, pk)
  919: 
  920: 
  921: 
- 922: @login_required(login_url='/accounts/login')
- 923: def enquete_votos_listar(request, pk, cc_pk):
+ 922: def enquete_votos_listar(request, pk, cc_pk):
+ 923:     
  924:     enquete = Enquete.objects.get(pk=pk)
  925:     componente = ComponenteCurricular.objects.get(pk=cc_pk)
  926:     votos_componente = VotoTurma.objects.filter(enquete_id=pk, componente__pk=cc_pk).order_by(
  927:         'criado_em', 'discente__nome_discente')
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 545] EHD core.views: 
--------------------------------------------------------------------------------
  409:                 autenticar_logar(request, form_usuario)
  410:                 messages.success(request, 'Usuário cadastrado com sucesso.')
  411:                 return redirect('index')
  412:             except ValidationError as e:
- 413:                 form_usuario.add_error(None, e)
+ 413:                 raise
  414:         else:
  415:             messages.error(request, 'O formulário contém dados inválidos!')
  416:     else:
  417:         form_usuario = CadastroUsuarioForm()
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 546] EXS core.views: 
--------------------------------------------------------------------------------
  409:                 autenticar_logar(request, form_usuario)
  410:                 messages.success(request, 'Usuário cadastrado com sucesso.')
  411:                 return redirect('index')
  412:             except ValidationError as e:
- 413:                 form_usuario.add_error(None, e)
+ 413:                 pass
  414:         else:
  415:             messages.error(request, 'O formulário contém dados inválidos!')
  416:     else:
  417:         form_usuario = CadastroUsuarioForm()
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 547] IHD core.views: 
--------------------------------------------------------------------------------
  191:     return render(request, 'core/componente/list.html', context)
  192: 
  193: 
  194: class ComponenteDetailView(DetailView):
- 195:     model = ComponenteCurricular
+ 195:     pass
  196:     template_name = 'core/componente/detalhar.html'
  197: 
  198: 
  199: class DocenteDetailView(DetailView):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 548] IHD core.views: 
--------------------------------------------------------------------------------
  192: 
  193: 
  194: class ComponenteDetailView(DetailView):
  195:     model = ComponenteCurricular
- 196:     template_name = 'core/componente/detalhar.html'
+ 196:     pass
  197: 
  198: 
  199: class DocenteDetailView(DetailView):
  200:     model = Docente
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 549] IHD core.views: 
--------------------------------------------------------------------------------
  196:     template_name = 'core/componente/detalhar.html'
  197: 
  198: 
  199: class DocenteDetailView(DetailView):
- 200:     model = Docente
+ 200:     pass
  201:     template_name = 'core/docente/detalhar.html'
  202: 
  203: 
  204: def curriculo_list(request):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 550] IHD core.views: 
--------------------------------------------------------------------------------
  197: 
  198: 
  199: class DocenteDetailView(DetailView):
  200:     model = Docente
- 201:     template_name = 'core/docente/detalhar.html'
+ 201:     pass
  202: 
  203: 
  204: def curriculo_list(request):
  205:     estruturas = EstruturaCurricular.objects.all()
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 551] IHD core.views: 
--------------------------------------------------------------------------------
  464:     return render(request, 'core/turmas/list.html', context)
  465: 
  466: 
  467: class TurmaDetailView(DetailView):
- 468:     model = Turma
+ 468:     pass
  469:     template_name = 'core/turmas/detalhar.html'
  470: 
  471: 
  472: def turmas_cont(request):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 552] IHD core.views: 
--------------------------------------------------------------------------------
  465: 
  466: 
  467: class TurmaDetailView(DetailView):
  468:     model = Turma
- 469:     template_name = 'core/turmas/detalhar.html'
+ 469:     pass
  470: 
  471: 
  472: def turmas_cont(request):
  473:     cont_ec = get_estrutura_contabeis()
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 553] IHD core.views: 
--------------------------------------------------------------------------------
  561:     return render(request, 'core/sugestao/list.html', context)
  562: 
  563: 
  564: class SugestaoTurmaDetailView(DetailView):
- 565:     model = SugestaoTurma
+ 565:     pass
  566:     template_name = 'core/sugestao/detalhar.html'
  567: 
  568: 
  569: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 554] IHD core.views: 
--------------------------------------------------------------------------------
  562: 
  563: 
  564: class SugestaoTurmaDetailView(DetailView):
  565:     model = SugestaoTurma
- 566:     template_name = 'core/sugestao/detalhar.html'
+ 566:     pass
  567: 
  568: 
  569: 
  570: @permission_required('core.add_solicitacaoturma', login_url='/core/usuario/logar', raise_exception=True)
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 555] IHD core.views: 
--------------------------------------------------------------------------------
  849:     return render(request, 'core/sala/list.html', {'filter': sala_filter})
  850: 
  851: 
  852: class EnqueteDetailView(DetailView):
- 853:     model = Enquete
+ 853:     pass
  854:     template_name = 'core/enquetes/detalhar.html'
  855:     
  856:     def get_context_data(self, **kwargs):
  857:         
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 556] IHD core.views: 
--------------------------------------------------------------------------------
  850: 
  851: 
  852: class EnqueteDetailView(DetailView):
  853:     model = Enquete
- 854:     template_name = 'core/enquetes/detalhar.html'
+ 854:     pass
  855:     
  856:     def get_context_data(self, **kwargs):
  857:         
  858:         context = super().get_context_data(**kwargs)
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 557] IOD core.views: 
--------------------------------------------------------------------------------
  852: class EnqueteDetailView(DetailView):
  853:     model = Enquete
  854:     template_name = 'core/enquetes/detalhar.html'
  855:     
- 856:     def get_context_data(self, **kwargs):
- 857:         
- 858:         context = super().get_context_data(**kwargs)
- 859:         
- 860:         periodo_qs = OrganizacaoCurricular.objects.filter(
- 861:             estrutura__curso=self.object.curso, 
- 862:             componente=OuterRef('componente__pk'))
- 863:         
- 864:         
- 865:         votos_por_componente = VotoTurma.objects.filter(
- 866:             enquete=self.object, tipo=VotoTurma.VALIDO).values(
- 867:             'componente__pk', 'componente__codigo', 'componente__nome').annotate(
- 868:             votos=Count('componente')).annotate(
- 869:             periodo=Subquery(periodo_qs.values('semestre')[:1])).order_by(
- 870:             '-votos', 'componente__nome')
- 871:         context['votos_por_componente'] = votos_por_componente
- 872:         curso = self.object.curso
- 873:         if not (self.object.qtd_discentes_ativos):
- 874:             self.object.qtd_discentes_ativos = get_qtd_discentes_ativos(curso)
- 875:             self.object.save()
- 876:         
- 877:         qtd_ativos = self.object.qtd_discentes_ativos
- 878:         qtd_votantes = get_qtd_votantes(self.object)
- 879:         qtd_abstencao = get_qtd_abstencao(self.object)
- 880:         context['discentes_ativos'] = qtd_ativos
- 881:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
- 882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
- 883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
- 884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
- 885:         
- 886:         return context
+ 856:     pass
+ 857: 
+ 858: 
+ 859: 
+ 860: 
+ 861: 
+ 862: 
+ 863: 
+ 864: 
+ 865: 
+ 866: 
+ 867: 
+ 868: 
+ 869: 
+ 870: 
+ 871: 
+ 872: 
+ 873: 
+ 874: 
+ 875: 
+ 876: 
+ 877: 
+ 878: 
+ 879: 
+ 880: 
+ 881: 
+ 882: 
+ 883: 
+ 884: 
+ 885: 
+ 886: 
  887: 
  888: 
  889: def search_enquetes(request):
  890:     
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 558] LCR core.views: 
--------------------------------------------------------------------------------
  888: 
  889: def search_enquetes(request):
  890:     
  891:     usuario = request.user
- 892:     if (usuario.id is not None and discente_existe(usuario)):
+ 892:     if (usuario.id is not None or discente_existe(usuario)):
  893:         discente = usuario.discente
  894:         enquetes = get_enquetes_por_curso(discente.id_curso)
  895:     else:
  896:         enquetes = get_enquetes()
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 559] ROR core.views: 
--------------------------------------------------------------------------------
  400:     return flow_opcionais(request, tur_ec)
  401: 
  402: 
  403: def cadastrar_usuario(request):
- 404:     if request.method == 'POST':
+ 404:     if request.method != 'POST':
  405:         form_usuario = CadastroUsuarioForm(request.POST)
  406:         if form_usuario.is_valid():
  407:             try:
  408:                 criar_usuario(request, form_usuario)
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 560] ROR core.views: 
--------------------------------------------------------------------------------
  418:     return render(request, 'core/usuario/cadastro.html', {'form_usuario': form_usuario})
  419: 
  420: 
  421: def logar_usuario(request):
- 422:     if request.method == 'POST':
+ 422:     if request.method != 'POST':
  423:         username = request.POST['username']
  424:         password = request.POST['password']
  425:         usuario = authenticate(request, username=username, password=password)
  426:         if usuario is not None:
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 561] ROR core.views: 
--------------------------------------------------------------------------------
  443: 
  444: 
  445: 
  446: @login_required(login_url='/core/usuario/logar')
- 447: def alterar_senha(request):if request.method == 'POST':
+ 447: def alterar_senha(request):if request.method != 'POST':
  448:         form_senha = PasswordChangeForm(request.user, request.POST)
  449:         if form_senha.is_valid():
  450:             user = form_senha.save()
  451:             update_session_auth_hash(request, user)
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 562] SCI core.views: 
--------------------------------------------------------------------------------
  854:     template_name = 'core/enquetes/detalhar.html'
  855:     
  856:     def get_context_data(self, **kwargs):
  857:         
- 858:         context = super().get_context_data(**kwargs)
- 859:         
- 860:         periodo_qs = OrganizacaoCurricular.objects.filter(
- 861:             estrutura__curso=self.object.curso, 
- 862:             componente=OuterRef('componente__pk'))
- 863:         
+ 858:         super().get_context_data(**kwargs)
+ 859:         context = super().get_context_data(**kwargs)
+ 860:         
+ 861:         periodo_qs = OrganizacaoCurricular.objects.filter(
+ 862:             estrutura__curso=self.object.curso, 
+ 863:             componente=OuterRef('componente__pk'))
  864:         
- 865:         votos_por_componente = VotoTurma.objects.filter(
- 866:             enquete=self.object, tipo=VotoTurma.VALIDO).values(
- 867:             'componente__pk', 'componente__codigo', 'componente__nome').annotate(
- 868:             votos=Count('componente')).annotate(
- 869:             periodo=Subquery(periodo_qs.values('semestre')[:1])).order_by(
- 870:             '-votos', 'componente__nome')
- 871:         context['votos_por_componente'] = votos_por_componente
- 872:         curso = self.object.curso
- 873:         if not (self.object.qtd_discentes_ativos):
- 874:             self.object.qtd_discentes_ativos = get_qtd_discentes_ativos(curso)
- 875:             self.object.save()
- 876:         
- 877:         qtd_ativos = self.object.qtd_discentes_ativos
- 878:         qtd_votantes = get_qtd_votantes(self.object)
- 879:         qtd_abstencao = get_qtd_abstencao(self.object)
- 880:         context['discentes_ativos'] = qtd_ativos
- 881:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
- 882:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
- 883:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
- 884:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
- 885:         
- 886:         return context
- 887: 
+ 865:         
+ 866:         votos_por_componente = VotoTurma.objects.filter(
+ 867:             enquete=self.object, tipo=VotoTurma.VALIDO).values(
+ 868:             'componente__pk', 'componente__codigo', 'componente__nome').annotate(
+ 869:             votos=Count('componente')).annotate(
+ 870:             periodo=Subquery(periodo_qs.values('semestre')[:1])).order_by(
+ 871:             '-votos', 'componente__nome')
+ 872:         context['votos_por_componente'] = votos_por_componente
+ 873:         curso = self.object.curso
+ 874:         if not (self.object.qtd_discentes_ativos):
+ 875:             self.object.qtd_discentes_ativos = get_qtd_discentes_ativos(curso)
+ 876:             self.object.save()
+ 877:         
+ 878:         qtd_ativos = self.object.qtd_discentes_ativos
+ 879:         qtd_votantes = get_qtd_votantes(self.object)
+ 880:         qtd_abstencao = get_qtd_abstencao(self.object)
+ 881:         context['discentes_ativos'] = qtd_ativos
+ 882:         taxa = round((qtd_votantes / qtd_ativos) * 100.0, 2)
+ 883:         taxa_abstencao = round((qtd_abstencao / qtd_ativos) * 100.0, 2)
+ 884:         context['taxa_votacao'] = ((str(taxa) + '% (') + str(qtd_votantes)) + ' discentes)'
+ 885:         context['taxa_abstencao'] = ((str(taxa_abstencao) + '% (') + str(qtd_abstencao)) + ' discentes)'
+ 886:         
+ 887:         return context
  888: 
  889: def search_enquetes(request):
  890:     
  891:     usuario = request.user
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 563] SIR core.views: 
--------------------------------------------------------------------------------
  865:         votos_por_componente = VotoTurma.objects.filter(
  866:             enquete=self.object, tipo=VotoTurma.VALIDO).values(
  867:             'componente__pk', 'componente__codigo', 'componente__nome').annotate(
  868:             votos=Count('componente')).annotate(
- 869:             periodo=Subquery(periodo_qs.values('semestre')[:1])).order_by(
+ 869:             periodo=Subquery(periodo_qs.values('semestre')[:])).order_by(
  870:             '-votos', 'componente__nome')
  871:         context['votos_por_componente'] = votos_por_componente
  872:         curso = self.object.curso
  873:         if not (self.object.qtd_discentes_ativos):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 564] AOR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   25:         return url_redirect
   26:     
   27:     mesmo_curso = check_curso(enquete, discente)
   28:     if not mesmo_curso:
-  29:         messages.error(request, ('Você não pode votar na enquete "' + enquete.nome) + '".')
+  29:         messages.error(request, ('Você não pode votar na enquete "' - enquete.nome) + '".')
   30:         return redirect('/core/enquetes/list')
   31:     
   32:     if request.method == 'POST':
   33:         form_voto = VotoTurmaForm(request.POST, enquete=enquete)
--------------------------------------------------------------------------------
[0.01383 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 565] AOR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   25:         return url_redirect
   26:     
   27:     mesmo_curso = check_curso(enquete, discente)
   28:     if not mesmo_curso:
-  29:         messages.error(request, ('Você não pode votar na enquete "' + enquete.nome) + '".')
+  29:         messages.error(request, ('Você não pode votar na enquete "' + enquete.nome) - '".')
   30:         return redirect('/core/enquetes/list')
   31:     
   32:     if request.method == 'POST':
   33:         form_voto = VotoTurmaForm(request.POST, enquete=enquete)
--------------------------------------------------------------------------------
[0.01014 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 566] AOR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   39:             if voto_permitido(request, enquete, discente, voto_turma.componente):
   40:                 enquete_deletar_votos_discente(request, enquete, discente, abstencao=True)
   41:                 voto_turma.save()
   42:                 messages.success(request, 'Voto cadastrado com sucesso.')
-  43:                 return redirect(('/core/enquetes/' + str(enquete.pk)) + '/votar')
+  43:                 return redirect(('/core/enquetes/' - str(enquete.pk)) + '/votar')
   44:         messages.error(request, form_voto.errors)
   45:     elif (abstencao and voto_permitido(request, enquete, discente)):
   46:         voto_turma = VotoTurma()
   47:         voto_turma_carregar(enquete, discente, voto_turma, VotoTurma.ABSTENCAO)
--------------------------------------------------------------------------------
[0.01107 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 567] AOR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   39:             if voto_permitido(request, enquete, discente, voto_turma.componente):
   40:                 enquete_deletar_votos_discente(request, enquete, discente, abstencao=True)
   41:                 voto_turma.save()
   42:                 messages.success(request, 'Voto cadastrado com sucesso.')
-  43:                 return redirect(('/core/enquetes/' + str(enquete.pk)) + '/votar')
+  43:                 return redirect(('/core/enquetes/' + str(enquete.pk)) - '/votar')
   44:         messages.error(request, form_voto.errors)
   45:     elif (abstencao and voto_permitido(request, enquete, discente)):
   46:         voto_turma = VotoTurma()
   47:         voto_turma_carregar(enquete, discente, voto_turma, VotoTurma.ABSTENCAO)
--------------------------------------------------------------------------------
[0.01050 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 568] AOR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   47:         voto_turma_carregar(enquete, discente, voto_turma, VotoTurma.ABSTENCAO)
   48:         enquete_deletar_votos_discente(request, enquete, discente)
   49:         voto_turma.save()
   50:         messages.success(request, 'Abstenção cadastrada com sucesso.')
-  51:         return redirect(('/core/enquetes/' + str(enquete.pk)) + '/votar')
+  51:         return redirect(('/core/enquetes/' - str(enquete.pk)) + '/votar')
   52:     else:
   53:         form_voto = VotoTurmaForm(enquete=enquete)
   54:     
   55:     qtd_votos = get_qtd_votos(enquete, discente)
--------------------------------------------------------------------------------
[0.01048 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 569] AOR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   47:         voto_turma_carregar(enquete, discente, voto_turma, VotoTurma.ABSTENCAO)
   48:         enquete_deletar_votos_discente(request, enquete, discente)
   49:         voto_turma.save()
   50:         messages.success(request, 'Abstenção cadastrada com sucesso.')
-  51:         return redirect(('/core/enquetes/' + str(enquete.pk)) + '/votar')
+  51:         return redirect(('/core/enquetes/' + str(enquete.pk)) - '/votar')
   52:     else:
   53:         form_voto = VotoTurmaForm(enquete=enquete)
   54:     
   55:     qtd_votos = get_qtd_votos(enquete, discente)
--------------------------------------------------------------------------------
[0.01017 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 570] AOR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  111:     
  112:     if existe_voto:
  113:         messages.error(request, 'Você já votou neste componente curricular!')
  114:     if votou_max:
- 115:         messages.error(request, ('Você já votou ' + str(enquete.numero_votos)) + ' vezes, máximo permitido!')
+ 115:         messages.error(request, ('Você já votou ' - str(enquete.numero_votos)) + ' vezes, máximo permitido!')
  116:     if not mesmo_curso:
  117:         messages.error(request, 'Você só pode votar em Enquetes do seu curso!')
  118:     return (not existe_voto and not votou_max and mesmo_curso)
  119: 
--------------------------------------------------------------------------------
[0.01246 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 571] AOR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  111:     
  112:     if existe_voto:
  113:         messages.error(request, 'Você já votou neste componente curricular!')
  114:     if votou_max:
- 115:         messages.error(request, ('Você já votou ' + str(enquete.numero_votos)) + ' vezes, máximo permitido!')
+ 115:         messages.error(request, ('Você já votou ' + str(enquete.numero_votos)) - ' vezes, máximo permitido!')
  116:     if not mesmo_curso:
  117:         messages.error(request, 'Você só pode votar em Enquetes do seu curso!')
  118:     return (not existe_voto and not votou_max and mesmo_curso)
  119: 
--------------------------------------------------------------------------------
[0.00978 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 572] AOR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  217:     utc = pytz.UTC
  218:     agora = datetime.now(pytz.UTC)
  219:     if (enquete.data_hora_inicio.replace(tzinfo=utc) > agora or \
  220:         agora > enquete.data_hora_fim.replace(tzinfo=utc)):
- 221:         messages.error(request, ('Voto fora do período da Enquete "' + enquete.nome) + '".')
+ 221:         messages.error(request, ('Voto fora do período da Enquete "' - enquete.nome) + '".')
  222:         return redirect('/core/enquetes/list')
  223:     return None
--------------------------------------------------------------------------------
[0.01255 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 573] AOR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  217:     utc = pytz.UTC
  218:     agora = datetime.now(pytz.UTC)
  219:     if (enquete.data_hora_inicio.replace(tzinfo=utc) > agora or \
  220:         agora > enquete.data_hora_fim.replace(tzinfo=utc)):
- 221:         messages.error(request, ('Voto fora do período da Enquete "' + enquete.nome) + '".')
+ 221:         messages.error(request, ('Voto fora do período da Enquete "' + enquete.nome) - '".')
  222:         return redirect('/core/enquetes/list')
  223:     return None
--------------------------------------------------------------------------------
[0.01234 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 574] COD core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   12: 
   13: 
   14: def enquete_voto_view(request, pk, abstencao=None):
   15:     usuario = request.user
-  16:     if not (discente_existe(usuario)):
+  16:     if discente_existe(usuario):
   17:         messages.error(request, 'Não há um discente relacionado ao usuário.')
   18:         return redirecionar(request)
   19:     discente = check_discente(request)
   20:     
--------------------------------------------------------------------------------
[0.01260 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 575] COD core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   24:     if url_redirect:
   25:         return url_redirect
   26:     
   27:     mesmo_curso = check_curso(enquete, discente)
-  28:     if not mesmo_curso:
+  28:     if mesmo_curso:
   29:         messages.error(request, ('Você não pode votar na enquete "' + enquete.nome) + '".')
   30:         return redirect('/core/enquetes/list')
   31:     
   32:     if request.method == 'POST':
--------------------------------------------------------------------------------
[0.01046 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 576] COD core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   64: 
   65: 
   66: def enquete_detalhar_voto_view(request, pk, abstencao=None):
   67:     usuario = request.user
-  68:     if not (discente_existe(usuario)):
+  68:     if discente_existe(usuario):
   69:         messages.error(request, 'Não há um discente relacionado ao usuário.')
   70:         return redirecionar(request)
   71:     discente = check_discente(request)
   72:     enquete = Enquete.objects.get(pk=pk)
--------------------------------------------------------------------------------
[0.00970 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 577] COD core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   95: 
   96: 
   97: def check_discente(request):
   98:     usuario = request.user
-  99:     if not (discente_existe(usuario)):
+  99:     if discente_existe(usuario):
  100:         messages.error(request, 'Não há um discente relacionado ao usuário.')
  101:         return redirecionar(request)
  102:     return usuario.discente
  103: 
--------------------------------------------------------------------------------
[0.00975 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 578] COD core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  112:     if existe_voto:
  113:         messages.error(request, 'Você já votou neste componente curricular!')
  114:     if votou_max:
  115:         messages.error(request, ('Você já votou ' + str(enquete.numero_votos)) + ' vezes, máximo permitido!')
- 116:     if not mesmo_curso:
+ 116:     if mesmo_curso:
  117:         messages.error(request, 'Você só pode votar em Enquetes do seu curso!')
  118:     return (not existe_voto and not votou_max and mesmo_curso)
  119: 
  120: 
--------------------------------------------------------------------------------
[0.01136 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 579] COD core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  114:     if votou_max:
  115:         messages.error(request, ('Você já votou ' + str(enquete.numero_votos)) + ' vezes, máximo permitido!')
  116:     if not mesmo_curso:
  117:         messages.error(request, 'Você só pode votar em Enquetes do seu curso!')
- 118:     return (not existe_voto and not votou_max and mesmo_curso)
+ 118:     return (existe_voto and not votou_max and mesmo_curso)
  119: 
  120: 
  121: def voto_existe(enquete, discente, componente):
  122:     votos = VotoTurma.objects.filter(enquete=enquete, discente=discente, componente=componente)
--------------------------------------------------------------------------------
[0.01031 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 580] COD core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  114:     if votou_max:
  115:         messages.error(request, ('Você já votou ' + str(enquete.numero_votos)) + ' vezes, máximo permitido!')
  116:     if not mesmo_curso:
  117:         messages.error(request, 'Você só pode votar em Enquetes do seu curso!')
- 118:     return (not existe_voto and not votou_max and mesmo_curso)
+ 118:     return (not existe_voto and votou_max and mesmo_curso)
  119: 
  120: 
  121: def voto_existe(enquete, discente, componente):
  122:     votos = VotoTurma.objects.filter(enquete=enquete, discente=discente, componente=componente)
--------------------------------------------------------------------------------
[0.01516 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 581] COD core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  150: 
  151: 
  152: @permission_required('core.delete_vototurma', login_url='/core/usuario/logar', raise_exception=True)
  153: def enquete_deletar_voto_discente(request, pk, template_name='core/enquetes/voto_confirm_delete.html'):voto_turma = get_object_or_404(VotoTurma, pk=pk)
- 154:     if not (tem_permissao(request, voto_turma.discente)):
+ 154:     if tem_permissao(request, voto_turma.discente):
  155:         messages.error(request, 'Você não tem permissão de Excluir este voto.')
  156:         return redirecionar(request)
  157:     url_redirect = check_periodo_enquete(request, voto_turma.enquete)
  158:     if url_redirect:
--------------------------------------------------------------------------------
[0.03438 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 582] COD core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  165: 
  166: 
  167: 
  168: @permission_required('core.delete_vototurma', login_url='/core/usuario/logar', raise_exception=True)
- 169: def enquete_deletar_votos_discente(request, enquete, discente, abstencao=None):if not (tem_permissao(request, discente)):
+ 169: def enquete_deletar_votos_discente(request, enquete, discente, abstencao=None):if tem_permissao(request, discente):
  170:         messages.error(request, 'Você não tem permissão de Excluir votos.')
  171:         return redirecionar(request)
  172:     if abstencao:
  173:         VotoTurma.objects.filter(enquete=enquete, discente=discente, tipo=VotoTurma.ABSTENCAO).delete()
--------------------------------------------------------------------------------
[0.01418 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 583] COD core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  176: 
  177: 
  178: def tem_permissao(request, discente_voto):
  179:     usuario = request.user
- 180:     if not (discente_existe(usuario)):
+ 180:     if discente_existe(usuario):
  181:         messages.error(request, 'Não há um discente relacionado ao usuário.')
  182:         return redirecionar(request)
  183:     discente = usuario.discente
  184:     if discente == discente_voto:
--------------------------------------------------------------------------------
[0.01107 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 584] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   12: 
   13: 
   14: def enquete_voto_view(request, pk, abstencao=None):
   15:     usuario = request.user
-  16:     if not (discente_existe(usuario)):
+  16:     if not ((not (discente_existe(usuario)))):
   17:         messages.error(request, 'Não há um discente relacionado ao usuário.')
   18:         return redirecionar(request)
   19:     discente = check_discente(request)
   20:     
--------------------------------------------------------------------------------
[0.01196 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 585] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   20:     
   21:     enquete = Enquete.objects.get(pk=pk)
   22:     
   23:     url_redirect = check_periodo_enquete(request, enquete)
-  24:     if url_redirect:
+  24:     if not url_redirect:
   25:         return url_redirect
   26:     
   27:     mesmo_curso = check_curso(enquete, discente)
   28:     if not mesmo_curso:
--------------------------------------------------------------------------------
[0.01022 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 586] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   24:     if url_redirect:
   25:         return url_redirect
   26:     
   27:     mesmo_curso = check_curso(enquete, discente)
-  28:     if not mesmo_curso:
+  28:     if not ((not mesmo_curso)):
   29:         messages.error(request, ('Você não pode votar na enquete "' + enquete.nome) + '".')
   30:         return redirect('/core/enquetes/list')
   31:     
   32:     if request.method == 'POST':
--------------------------------------------------------------------------------
[0.01490 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 587] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   28:     if not mesmo_curso:
   29:         messages.error(request, ('Você não pode votar na enquete "' + enquete.nome) + '".')
   30:         return redirect('/core/enquetes/list')
   31:     
-  32:     if request.method == 'POST':
+  32:     if not (request.method == 'POST'):
   33:         form_voto = VotoTurmaForm(request.POST, enquete=enquete)
   34:         
   35:         if (form_voto.is_valid() and tem_componente(form_voto)):
   36:             voto_turma = form_voto.save(commit=False)
--------------------------------------------------------------------------------
[0.01117 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 588] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   31:     
   32:     if request.method == 'POST':
   33:         form_voto = VotoTurmaForm(request.POST, enquete=enquete)
   34:         
-  35:         if (form_voto.is_valid() and tem_componente(form_voto)):
+  35:         if not ((form_voto.is_valid() and tem_componente(form_voto))):
   36:             voto_turma = form_voto.save(commit=False)
   37:             voto_turma_carregar(enquete, discente, voto_turma, VotoTurma.VALIDO)
   38:             
   39:             if voto_permitido(request, enquete, discente, voto_turma.componente):
--------------------------------------------------------------------------------
[0.00992 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 589] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   35:         if (form_voto.is_valid() and tem_componente(form_voto)):
   36:             voto_turma = form_voto.save(commit=False)
   37:             voto_turma_carregar(enquete, discente, voto_turma, VotoTurma.VALIDO)
   38:             
-  39:             if voto_permitido(request, enquete, discente, voto_turma.componente):
+  39:             if not (voto_permitido(request, enquete, discente, voto_turma.componente)):
   40:                 enquete_deletar_votos_discente(request, enquete, discente, abstencao=True)
   41:                 voto_turma.save()
   42:                 messages.success(request, 'Voto cadastrado com sucesso.')
   43:                 return redirect(('/core/enquetes/' + str(enquete.pk)) + '/votar')
--------------------------------------------------------------------------------
[0.01001 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 590] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   41:                 voto_turma.save()
   42:                 messages.success(request, 'Voto cadastrado com sucesso.')
   43:                 return redirect(('/core/enquetes/' + str(enquete.pk)) + '/votar')
   44:         messages.error(request, form_voto.errors)
-  45:     elif (abstencao and voto_permitido(request, enquete, discente)):
+  45:     elif not ((abstencao and voto_permitido(request, enquete, discente))):
   46:         voto_turma = VotoTurma()
   47:         voto_turma_carregar(enquete, discente, voto_turma, VotoTurma.ABSTENCAO)
   48:         enquete_deletar_votos_discente(request, enquete, discente)
   49:         voto_turma.save()
--------------------------------------------------------------------------------
[0.01710 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 591] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   64: 
   65: 
   66: def enquete_detalhar_voto_view(request, pk, abstencao=None):
   67:     usuario = request.user
-  68:     if not (discente_existe(usuario)):
+  68:     if not ((not (discente_existe(usuario)))):
   69:         messages.error(request, 'Não há um discente relacionado ao usuário.')
   70:         return redirecionar(request)
   71:     discente = check_discente(request)
   72:     enquete = Enquete.objects.get(pk=pk)
--------------------------------------------------------------------------------
[0.01174 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 592] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   81:     return render(request, 'core/enquetes/detalhar_voto.html', context)
   82: 
   83: 
   84: def tem_componente(form_voto):
-  85:     if form_voto.cleaned_data['componente']:
+  85:     if not (form_voto.cleaned_data['componente']):
   86:         return True
   87:     form_voto.add_error('componente', 'Selecione um Componente Curricular para votar.')
   88:     return False
   89: 
--------------------------------------------------------------------------------
[0.01312 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 593] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   95: 
   96: 
   97: def check_discente(request):
   98:     usuario = request.user
-  99:     if not (discente_existe(usuario)):
+  99:     if not ((not (discente_existe(usuario)))):
  100:         messages.error(request, 'Não há um discente relacionado ao usuário.')
  101:         return redirecionar(request)
  102:     return usuario.discente
  103: 
--------------------------------------------------------------------------------
[0.01174 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 594] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  103: 
  104: 
  105: def voto_permitido(request, enquete, discente, componente=None):
  106:     existe_voto = False
- 107:     if componente:
+ 107:     if not componente:
  108:         existe_voto = voto_existe(enquete, discente, componente)
  109:     votou_max = votou(enquete, discente)
  110:     mesmo_curso = check_curso(enquete, discente)
  111:     
--------------------------------------------------------------------------------
[0.01199 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 595] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  108:         existe_voto = voto_existe(enquete, discente, componente)
  109:     votou_max = votou(enquete, discente)
  110:     mesmo_curso = check_curso(enquete, discente)
  111:     
- 112:     if existe_voto:
+ 112:     if not existe_voto:
  113:         messages.error(request, 'Você já votou neste componente curricular!')
  114:     if votou_max:
  115:         messages.error(request, ('Você já votou ' + str(enquete.numero_votos)) + ' vezes, máximo permitido!')
  116:     if not mesmo_curso:
--------------------------------------------------------------------------------
[0.01029 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 596] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  110:     mesmo_curso = check_curso(enquete, discente)
  111:     
  112:     if existe_voto:
  113:         messages.error(request, 'Você já votou neste componente curricular!')
- 114:     if votou_max:
+ 114:     if not votou_max:
  115:         messages.error(request, ('Você já votou ' + str(enquete.numero_votos)) + ' vezes, máximo permitido!')
  116:     if not mesmo_curso:
  117:         messages.error(request, 'Você só pode votar em Enquetes do seu curso!')
  118:     return (not existe_voto and not votou_max and mesmo_curso)
--------------------------------------------------------------------------------
[0.01199 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 597] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  112:     if existe_voto:
  113:         messages.error(request, 'Você já votou neste componente curricular!')
  114:     if votou_max:
  115:         messages.error(request, ('Você já votou ' + str(enquete.numero_votos)) + ' vezes, máximo permitido!')
- 116:     if not mesmo_curso:
+ 116:     if not ((not mesmo_curso)):
  117:         messages.error(request, 'Você só pode votar em Enquetes do seu curso!')
  118:     return (not existe_voto and not votou_max and mesmo_curso)
  119: 
  120: 
--------------------------------------------------------------------------------
[0.01263 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 598] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  119: 
  120: 
  121: def voto_existe(enquete, discente, componente):
  122:     votos = VotoTurma.objects.filter(enquete=enquete, discente=discente, componente=componente)
- 123:     if votos.exists():
+ 123:     if not (votos.exists()):
  124:         return True
  125:     return False
  126: 
  127: 
--------------------------------------------------------------------------------
[0.00973 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 599] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  126: 
  127: 
  128: def votou(enquete, discente):
  129:     num_votos = get_qtd_votos(enquete, discente)
- 130:     if num_votos < enquete.numero_votos:
+ 130:     if not (num_votos < enquete.numero_votos):
  131:         return False
  132:     return True
  133: 
  134: 
--------------------------------------------------------------------------------
[0.00958 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 600] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  132:     return True
  133: 
  134: 
  135: def check_curso(enquete, discente):
- 136:     if enquete.curso.nome == discente.nome_curso:
+ 136:     if not (enquete.curso.nome == discente.nome_curso):
  137:         return True
  138:     return False
  139: 
  140: 
--------------------------------------------------------------------------------
[0.01017 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 601] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  150: 
  151: 
  152: @permission_required('core.delete_vototurma', login_url='/core/usuario/logar', raise_exception=True)
  153: def enquete_deletar_voto_discente(request, pk, template_name='core/enquetes/voto_confirm_delete.html'):voto_turma = get_object_or_404(VotoTurma, pk=pk)
- 154:     if not (tem_permissao(request, voto_turma.discente)):
+ 154:     if not ((not (tem_permissao(request, voto_turma.discente)))):
  155:         messages.error(request, 'Você não tem permissão de Excluir este voto.')
  156:         return redirecionar(request)
  157:     url_redirect = check_periodo_enquete(request, voto_turma.enquete)
  158:     if url_redirect:
--------------------------------------------------------------------------------
[0.01059 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 602] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  154:     if not (tem_permissao(request, voto_turma.discente)):
  155:         messages.error(request, 'Você não tem permissão de Excluir este voto.')
  156:         return redirecionar(request)
  157:     url_redirect = check_periodo_enquete(request, voto_turma.enquete)
- 158:     if url_redirect:
+ 158:     if not url_redirect:
  159:         return url_redirect
  160:     if request.method == 'POST':
  161:         voto_turma.delete()
  162:         messages.success(request, 'Voto na enquete excluído com sucesso.')
--------------------------------------------------------------------------------
[0.01021 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 603] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  156:         return redirecionar(request)
  157:     url_redirect = check_periodo_enquete(request, voto_turma.enquete)
  158:     if url_redirect:
  159:         return url_redirect
- 160:     if request.method == 'POST':
+ 160:     if not (request.method == 'POST'):
  161:         voto_turma.delete()
  162:         messages.success(request, 'Voto na enquete excluído com sucesso.')
  163:         return redirecionar(request)
  164:     return render(request, template_name, {'object': voto_turma})
--------------------------------------------------------------------------------
[0.01269 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 604] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  165: 
  166: 
  167: 
  168: @permission_required('core.delete_vototurma', login_url='/core/usuario/logar', raise_exception=True)
- 169: def enquete_deletar_votos_discente(request, enquete, discente, abstencao=None):if not (tem_permissao(request, discente)):
+ 169: def enquete_deletar_votos_discente(request, enquete, discente, abstencao=None):if not ((not (tem_permissao(request, discente)))):
  170:         messages.error(request, 'Você não tem permissão de Excluir votos.')
  171:         return redirecionar(request)
  172:     if abstencao:
  173:         VotoTurma.objects.filter(enquete=enquete, discente=discente, tipo=VotoTurma.ABSTENCAO).delete()
--------------------------------------------------------------------------------
[0.01280 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 605] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  168: @permission_required('core.delete_vototurma', login_url='/core/usuario/logar', raise_exception=True)
  169: def enquete_deletar_votos_discente(request, enquete, discente, abstencao=None):if not (tem_permissao(request, discente)):
  170:         messages.error(request, 'Você não tem permissão de Excluir votos.')
  171:         return redirecionar(request)
- 172:     if abstencao:
+ 172:     if not abstencao:
  173:         VotoTurma.objects.filter(enquete=enquete, discente=discente, tipo=VotoTurma.ABSTENCAO).delete()
  174:     else:
  175:         VotoTurma.objects.filter(enquete=enquete, discente=discente).delete()
  176: 
--------------------------------------------------------------------------------
[0.01045 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 606] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  176: 
  177: 
  178: def tem_permissao(request, discente_voto):
  179:     usuario = request.user
- 180:     if not (discente_existe(usuario)):
+ 180:     if not ((not (discente_existe(usuario)))):
  181:         messages.error(request, 'Não há um discente relacionado ao usuário.')
  182:         return redirecionar(request)
  183:     discente = usuario.discente
  184:     if discente == discente_voto:
--------------------------------------------------------------------------------
[0.01357 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 607] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  180:     if not (discente_existe(usuario)):
  181:         messages.error(request, 'Não há um discente relacionado ao usuário.')
  182:         return redirecionar(request)
  183:     discente = usuario.discente
- 184:     if discente == discente_voto:
+ 184:     if not (discente == discente_voto):
  185:         return True
  186:     return False
  187: 
  188: 
--------------------------------------------------------------------------------
[0.01336 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 608] COI core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  215: 
  216: def check_periodo_enquete(request, enquete):
  217:     utc = pytz.UTC
  218:     agora = datetime.now(pytz.UTC)
- 219:     if (enquete.data_hora_inicio.replace(tzinfo=utc) > agora or \
- 220:         agora > enquete.data_hora_fim.replace(tzinfo=utc)):
+ 219:     if not ((enquete.data_hora_inicio.replace(tzinfo=utc) > agora or \
+ 220:         agora > enquete.data_hora_fim.replace(tzinfo=utc))):
  221:         messages.error(request, ('Voto fora do período da Enquete "' + enquete.nome) + '".')
  222:         return redirect('/core/enquetes/list')
  223:     return None
--------------------------------------------------------------------------------
[0.00999 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 609] DDL core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  148:     return votos
  149: 
  150: 
  151: 
- 152: @permission_required('core.delete_vototurma', login_url='/core/usuario/logar', raise_exception=True)
- 153: def enquete_deletar_voto_discente(request, pk, template_name='core/enquetes/voto_confirm_delete.html'):voto_turma = get_object_or_404(VotoTurma, pk=pk)
+ 152: def enquete_deletar_voto_discente(request, pk, template_name='core/enquetes/voto_confirm_delete.html'):
+ 153:     voto_turma = get_object_or_404(VotoTurma, pk=pk)
  154:     if not (tem_permissao(request, voto_turma.discente)):
  155:         messages.error(request, 'Você não tem permissão de Excluir este voto.')
  156:         return redirecionar(request)
  157:     url_redirect = check_periodo_enquete(request, voto_turma.enquete)
--------------------------------------------------------------------------------
[0.01049 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 610] DDL core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  164:     return render(request, template_name, {'object': voto_turma})
  165: 
  166: 
  167: 
- 168: @permission_required('core.delete_vototurma', login_url='/core/usuario/logar', raise_exception=True)
- 169: def enquete_deletar_votos_discente(request, enquete, discente, abstencao=None):if not (tem_permissao(request, discente)):
+ 168: def enquete_deletar_votos_discente(request, enquete, discente, abstencao=None):
+ 169:     if not (tem_permissao(request, discente)):
  170:         messages.error(request, 'Você não tem permissão de Excluir votos.')
  171:         return redirecionar(request)
  172:     if abstencao:
  173:         VotoTurma.objects.filter(enquete=enquete, discente=discente, tipo=VotoTurma.ABSTENCAO).delete()
--------------------------------------------------------------------------------
[0.01291 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 611] LCR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   31:     
   32:     if request.method == 'POST':
   33:         form_voto = VotoTurmaForm(request.POST, enquete=enquete)
   34:         
-  35:         if (form_voto.is_valid() and tem_componente(form_voto)):
+  35:         if (form_voto.is_valid() or tem_componente(form_voto)):
   36:             voto_turma = form_voto.save(commit=False)
   37:             voto_turma_carregar(enquete, discente, voto_turma, VotoTurma.VALIDO)
   38:             
   39:             if voto_permitido(request, enquete, discente, voto_turma.componente):
--------------------------------------------------------------------------------
[0.01238 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 612] LCR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   41:                 voto_turma.save()
   42:                 messages.success(request, 'Voto cadastrado com sucesso.')
   43:                 return redirect(('/core/enquetes/' + str(enquete.pk)) + '/votar')
   44:         messages.error(request, form_voto.errors)
-  45:     elif (abstencao and voto_permitido(request, enquete, discente)):
+  45:     elif (abstencao or voto_permitido(request, enquete, discente)):
   46:         voto_turma = VotoTurma()
   47:         voto_turma_carregar(enquete, discente, voto_turma, VotoTurma.ABSTENCAO)
   48:         enquete_deletar_votos_discente(request, enquete, discente)
   49:         voto_turma.save()
--------------------------------------------------------------------------------
[0.00988 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 613] LCR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  114:     if votou_max:
  115:         messages.error(request, ('Você já votou ' + str(enquete.numero_votos)) + ' vezes, máximo permitido!')
  116:     if not mesmo_curso:
  117:         messages.error(request, 'Você só pode votar em Enquetes do seu curso!')
- 118:     return (not existe_voto and not votou_max and mesmo_curso)
+ 118:     return (not existe_voto or not votou_max or mesmo_curso)
  119: 
  120: 
  121: def voto_existe(enquete, discente, componente):
  122:     votos = VotoTurma.objects.filter(enquete=enquete, discente=discente, componente=componente)
--------------------------------------------------------------------------------
[0.00961 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 614] LCR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  215: 
  216: def check_periodo_enquete(request, enquete):
  217:     utc = pytz.UTC
  218:     agora = datetime.now(pytz.UTC)
- 219:     if (enquete.data_hora_inicio.replace(tzinfo=utc) > agora or \
+ 219:     if (enquete.data_hora_inicio.replace(tzinfo=utc) > agora and \
  220:         agora > enquete.data_hora_fim.replace(tzinfo=utc)):
  221:         messages.error(request, ('Voto fora do período da Enquete "' + enquete.nome) + '".')
  222:         return redirect('/core/enquetes/list')
  223:     return None
--------------------------------------------------------------------------------
[0.00975 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 615] ROR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
   28:     if not mesmo_curso:
   29:         messages.error(request, ('Você não pode votar na enquete "' + enquete.nome) + '".')
   30:         return redirect('/core/enquetes/list')
   31:     
-  32:     if request.method == 'POST':
+  32:     if request.method != 'POST':
   33:         form_voto = VotoTurmaForm(request.POST, enquete=enquete)
   34:         
   35:         if (form_voto.is_valid() and tem_componente(form_voto)):
   36:             voto_turma = form_voto.save(commit=False)
--------------------------------------------------------------------------------
[0.01121 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 616] ROR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  126: 
  127: 
  128: def votou(enquete, discente):
  129:     num_votos = get_qtd_votos(enquete, discente)
- 130:     if num_votos < enquete.numero_votos:
+ 130:     if num_votos > enquete.numero_votos:
  131:         return False
  132:     return True
  133: 
  134: 
--------------------------------------------------------------------------------
[0.01026 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 617] ROR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  126: 
  127: 
  128: def votou(enquete, discente):
  129:     num_votos = get_qtd_votos(enquete, discente)
- 130:     if num_votos < enquete.numero_votos:
+ 130:     if num_votos <= enquete.numero_votos:
  131:         return False
  132:     return True
  133: 
  134: 
--------------------------------------------------------------------------------
[0.01056 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 618] ROR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  132:     return True
  133: 
  134: 
  135: def check_curso(enquete, discente):
- 136:     if enquete.curso.nome == discente.nome_curso:
+ 136:     if enquete.curso.nome != discente.nome_curso:
  137:         return True
  138:     return False
  139: 
  140: 
--------------------------------------------------------------------------------
[0.00998 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 619] ROR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  156:         return redirecionar(request)
  157:     url_redirect = check_periodo_enquete(request, voto_turma.enquete)
  158:     if url_redirect:
  159:         return url_redirect
- 160:     if request.method == 'POST':
+ 160:     if request.method != 'POST':
  161:         voto_turma.delete()
  162:         messages.success(request, 'Voto na enquete excluído com sucesso.')
  163:         return redirecionar(request)
  164:     return render(request, template_name, {'object': voto_turma})
--------------------------------------------------------------------------------
[0.00939 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 620] ROR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  180:     if not (discente_existe(usuario)):
  181:         messages.error(request, 'Não há um discente relacionado ao usuário.')
  182:         return redirecionar(request)
  183:     discente = usuario.discente
- 184:     if discente == discente_voto:
+ 184:     if discente != discente_voto:
  185:         return True
  186:     return False
  187: 
  188: 
--------------------------------------------------------------------------------
[0.01129 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 621] ROR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  215: 
  216: def check_periodo_enquete(request, enquete):
  217:     utc = pytz.UTC
  218:     agora = datetime.now(pytz.UTC)
- 219:     if (enquete.data_hora_inicio.replace(tzinfo=utc) > agora or \
+ 219:     if (enquete.data_hora_inicio.replace(tzinfo=utc) < agora or \
  220:         agora > enquete.data_hora_fim.replace(tzinfo=utc)):
  221:         messages.error(request, ('Voto fora do período da Enquete "' + enquete.nome) + '".')
  222:         return redirect('/core/enquetes/list')
  223:     return None
--------------------------------------------------------------------------------
[0.01118 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 622] ROR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  215: 
  216: def check_periodo_enquete(request, enquete):
  217:     utc = pytz.UTC
  218:     agora = datetime.now(pytz.UTC)
- 219:     if (enquete.data_hora_inicio.replace(tzinfo=utc) > agora or \
+ 219:     if (enquete.data_hora_inicio.replace(tzinfo=utc) >= agora or \
  220:         agora > enquete.data_hora_fim.replace(tzinfo=utc)):
  221:         messages.error(request, ('Voto fora do período da Enquete "' + enquete.nome) + '".')
  222:         return redirect('/core/enquetes/list')
  223:     return None
--------------------------------------------------------------------------------
[0.01200 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 623] ROR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  216: def check_periodo_enquete(request, enquete):
  217:     utc = pytz.UTC
  218:     agora = datetime.now(pytz.UTC)
  219:     if (enquete.data_hora_inicio.replace(tzinfo=utc) > agora or \
- 220:         agora > enquete.data_hora_fim.replace(tzinfo=utc)):
+ 220:         agora < enquete.data_hora_fim.replace(tzinfo=utc)):
  221:         messages.error(request, ('Voto fora do período da Enquete "' + enquete.nome) + '".')
  222:         return redirect('/core/enquetes/list')
  223:     return None
--------------------------------------------------------------------------------
[0.01019 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 624] ROR core.visoes.enquete_view: 
--------------------------------------------------------------------------------
  216: def check_periodo_enquete(request, enquete):
  217:     utc = pytz.UTC
  218:     agora = datetime.now(pytz.UTC)
  219:     if (enquete.data_hora_inicio.replace(tzinfo=utc) > agora or \
- 220:         agora > enquete.data_hora_fim.replace(tzinfo=utc)):
+ 220:         agora >= enquete.data_hora_fim.replace(tzinfo=utc)):
  221:         messages.error(request, ('Voto fora do período da Enquete "' + enquete.nome) + '".')
  222:         return redirect('/core/enquetes/list')
  223:     return None
--------------------------------------------------------------------------------
[0.01146 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 625] AOR core.visoes.flow_view: 
--------------------------------------------------------------------------------
  33:         estrutura_all.append(estrutura_row)
  34:     
  35:     
  36:     for row in estrutura_all:
- 37:         row[2] = max_comp_by_semestre - row[2]
+ 37:         row[2] = max_comp_by_semestre + row[2]
  38:     
  39:     context = {\
  40:         'estrutura': estrutura, \
  41:         'max_comp_by_semestre': max_comp_by_semestre, \
--------------------------------------------------------------------------------
[0.01118 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 626] COI core.visoes.flow_view: 
--------------------------------------------------------------------------------
  22:         oc = get_oc_by_semestre(estrutura, s)
  23:         ch = get_ch_by_semestre(estrutura, s)
  24:         
  25:         num_comp_by_semestre = len(oc)
- 26:         if num_comp_by_semestre >= max_comp_by_semestre:
+ 26:         if not (num_comp_by_semestre >= max_comp_by_semestre):
  27:             max_comp_by_semestre = num_comp_by_semestre
  28:         
  29:         estrutura_row.append(f'{s}º')
  30:         estrutura_row.append(oc)
--------------------------------------------------------------------------------
[0.00931 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 627] ROR core.visoes.flow_view: 
--------------------------------------------------------------------------------
  22:         oc = get_oc_by_semestre(estrutura, s)
  23:         ch = get_ch_by_semestre(estrutura, s)
  24:         
  25:         num_comp_by_semestre = len(oc)
- 26:         if num_comp_by_semestre >= max_comp_by_semestre:
+ 26:         if num_comp_by_semestre <= max_comp_by_semestre:
  27:             max_comp_by_semestre = num_comp_by_semestre
  28:         
  29:         estrutura_row.append(f'{s}º')
  30:         estrutura_row.append(oc)
--------------------------------------------------------------------------------
[0.01012 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 628] ROR core.visoes.flow_view: 
--------------------------------------------------------------------------------
  22:         oc = get_oc_by_semestre(estrutura, s)
  23:         ch = get_ch_by_semestre(estrutura, s)
  24:         
  25:         num_comp_by_semestre = len(oc)
- 26:         if num_comp_by_semestre >= max_comp_by_semestre:
+ 26:         if num_comp_by_semestre > max_comp_by_semestre:
  27:             max_comp_by_semestre = num_comp_by_semestre
  28:         
  29:         estrutura_row.append(f'{s}º')
  30:         estrutura_row.append(oc)
--------------------------------------------------------------------------------
[0.01197 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 629] COD core.visoes.profile_view: 
--------------------------------------------------------------------------------
   93:     return render(request, 'core/usuario/componentes_list_option.html', {'componentes': componentes})
   94: 
   95: def historico_deletar_componente(request, pk, template_name='core/usuario/confirm_delete_historico.html'):
   96:     historico = get_object_or_404(Historico, pk=pk)
-  97:     if not (verificar_permissoes(request, historico)):
+  97:     if verificar_permissoes(request, historico):
   98:         messages.error(request, 'Você não tem permissão de Excluir este Histórico.')
   99:         return redirecionar(request)
  100:     if request.method == 'POST':
  101:         historico.delete()
--------------------------------------------------------------------------------
[0.01190 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 630] COI core.visoes.profile_view: 
--------------------------------------------------------------------------------
   17: def profile(request, username):periodo_letivo_atual = get_periodo_ativo()
   18:     periodo_letivo_planejado = get_periodo_planejado()
   19:     usuario = User.objects.get(username=username)
   20:     
-  21:     if request.user != usuario:
+  21:     if not (request.user != usuario):
   22:         messages.error(request, 'Você não tem permissão de visualizar esse Perfil.')
   23:         return redirecionar(request)
   24:     
   25:     horarios_atual = None
--------------------------------------------------------------------------------
[0.01040 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 631] COI core.visoes.profile_view: 
--------------------------------------------------------------------------------
   29:     historico = None
   30:     form_historico = None
   31:     tab_active = 'usuario'
   32:     
-  33:     if discente_existe(usuario):
+  33:     if not (discente_existe(usuario)):
   34:         perfil = usuario.discente
   35:         perfil_link = 'core/usuario/profile_discente.html'
   36:         grupos = criar_string(usuario.groups.all())
   37:         horarios_atual = discente_grade_horarios(
--------------------------------------------------------------------------------
[0.01092 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 632] COI core.visoes.profile_view: 
--------------------------------------------------------------------------------
   40:             perfil, periodo_letivo_planejado.ano, periodo_letivo_planejado.periodo)
   41:         solicitacao_list = get_solicitacoes(
   42:             perfil, periodo_letivo_planejado.ano, periodo_letivo_planejado.periodo)
   43:         historico = listar_historicos_by_discente(perfil)
-  44:         if request.method == 'POST':
+  44:         if not (request.method == 'POST'):
   45:             form_historico = HistoricoForm(request.POST, discente=perfil)
   46:             tab_active = 'historico'
   47:             if form_historico.is_valid():
   48:                 add_historico = form_historico.save(commit=False)
--------------------------------------------------------------------------------
[0.01034 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 633] COI core.visoes.profile_view: 
--------------------------------------------------------------------------------
   43:         historico = listar_historicos_by_discente(perfil)
   44:         if request.method == 'POST':
   45:             form_historico = HistoricoForm(request.POST, discente=perfil)
   46:             tab_active = 'historico'
-  47:             if form_historico.is_valid():
+  47:             if not (form_historico.is_valid()):
   48:                 add_historico = form_historico.save(commit=False)
   49:                 add_historico.discente = perfil
   50:                 add_historico.save()
   51:                 messages.success(request, 'Componente cadastrado no histórico com sucesso.')
--------------------------------------------------------------------------------
[0.01077 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 634] COI core.visoes.profile_view: 
--------------------------------------------------------------------------------
   52:             else:
   53:                 messages.error(request, form_historico.errors['__all__'])
   54:         else:
   55:             form_historico = HistoricoForm(discente=perfil)
-  56:     elif docente_existe(usuario):
+  56:     elif not (docente_existe(usuario)):
   57:         perfil = usuario.docente
   58:         perfil_link = 'core/usuario/profile_docente.html'
   59:         grupos = criar_string(usuario.groups.all())
   60:         horarios_atual = carrega_turmas_por_horario(
--------------------------------------------------------------------------------
[0.01010 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 635] COI core.visoes.profile_view: 
--------------------------------------------------------------------------------
   93:     return render(request, 'core/usuario/componentes_list_option.html', {'componentes': componentes})
   94: 
   95: def historico_deletar_componente(request, pk, template_name='core/usuario/confirm_delete_historico.html'):
   96:     historico = get_object_or_404(Historico, pk=pk)
-  97:     if not (verificar_permissoes(request, historico)):
+  97:     if not ((not (verificar_permissoes(request, historico)))):
   98:         messages.error(request, 'Você não tem permissão de Excluir este Histórico.')
   99:         return redirecionar(request)
  100:     if request.method == 'POST':
  101:         historico.delete()
--------------------------------------------------------------------------------
[0.01037 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 636] COI core.visoes.profile_view: 
--------------------------------------------------------------------------------
   96:     historico = get_object_or_404(Historico, pk=pk)
   97:     if not (verificar_permissoes(request, historico)):
   98:         messages.error(request, 'Você não tem permissão de Excluir este Histórico.')
   99:         return redirecionar(request)
- 100:     if request.method == 'POST':
+ 100:     if not (request.method == 'POST'):
  101:         historico.delete()
  102:         messages.success(request, 'Histórico excluído com sucesso.')
  103:         return redirecionar(request)
  104:     return render(request, template_name, {'object': historico})
--------------------------------------------------------------------------------
[0.01140 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 637] COI core.visoes.profile_view: 
--------------------------------------------------------------------------------
  105: 
  106: 
  107: def verificar_permissoes(request, historico):
  108:     usuario = request.user
- 109:     if historico.discente.usuario == usuario:
+ 109:     if not (historico.discente.usuario == usuario):
  110:         return True
  111:     return False
--------------------------------------------------------------------------------
[0.01094 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 638] DDL core.visoes.profile_view: 
--------------------------------------------------------------------------------
   12: from django.contrib.auth.models import User
   13: 
   14: 
   15: 
-  16: @login_required(login_url='/accounts/login')
-  17: def profile(request, username):periodo_letivo_atual = get_periodo_ativo()
+  16: def profile(request, username):
+  17:     periodo_letivo_atual = get_periodo_ativo()
   18:     periodo_letivo_planejado = get_periodo_planejado()
   19:     usuario = User.objects.get(username=username)
   20:     
   21:     if request.user != usuario:
--------------------------------------------------------------------------------
[0.00940 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 639] ROR core.visoes.profile_view: 
--------------------------------------------------------------------------------
   17: def profile(request, username):periodo_letivo_atual = get_periodo_ativo()
   18:     periodo_letivo_planejado = get_periodo_planejado()
   19:     usuario = User.objects.get(username=username)
   20:     
-  21:     if request.user != usuario:
+  21:     if request.user == usuario:
   22:         messages.error(request, 'Você não tem permissão de visualizar esse Perfil.')
   23:         return redirecionar(request)
   24:     
   25:     horarios_atual = None
--------------------------------------------------------------------------------
[0.01905 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 640] ROR core.visoes.profile_view: 
--------------------------------------------------------------------------------
   40:             perfil, periodo_letivo_planejado.ano, periodo_letivo_planejado.periodo)
   41:         solicitacao_list = get_solicitacoes(
   42:             perfil, periodo_letivo_planejado.ano, periodo_letivo_planejado.periodo)
   43:         historico = listar_historicos_by_discente(perfil)
-  44:         if request.method == 'POST':
+  44:         if request.method != 'POST':
   45:             form_historico = HistoricoForm(request.POST, discente=perfil)
   46:             tab_active = 'historico'
   47:             if form_historico.is_valid():
   48:                 add_historico = form_historico.save(commit=False)
--------------------------------------------------------------------------------
[0.01029 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 641] ROR core.visoes.profile_view: 
--------------------------------------------------------------------------------
   96:     historico = get_object_or_404(Historico, pk=pk)
   97:     if not (verificar_permissoes(request, historico)):
   98:         messages.error(request, 'Você não tem permissão de Excluir este Histórico.')
   99:         return redirecionar(request)
- 100:     if request.method == 'POST':
+ 100:     if request.method != 'POST':
  101:         historico.delete()
  102:         messages.success(request, 'Histórico excluído com sucesso.')
  103:         return redirecionar(request)
  104:     return render(request, template_name, {'object': historico})
--------------------------------------------------------------------------------
[0.01021 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 642] ROR core.visoes.profile_view: 
--------------------------------------------------------------------------------
  105: 
  106: 
  107: def verificar_permissoes(request, historico):
  108:     usuario = request.user
- 109:     if historico.discente.usuario == usuario:
+ 109:     if historico.discente.usuario != usuario:
  110:         return True
  111:     return False
--------------------------------------------------------------------------------
[0.01143 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 643] DDL core.visoes.sugestao_contabeis_view: 
--------------------------------------------------------------------------------
  17:         request, contabeis_ec, sugestao_incluir_link, sugestao_manter_link, sugestao_list_link)
  18: 
  19: 
  20: 
- 21: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 22: def sugestao_cont_manter(request):'''
+ 21: def sugestao_cont_manter(request):
+ 22:     '''
  23:     Tela de Manter Sugestões de Turmas do Curso de Ciências Contábeis - Caicó.
  24:     '''
  25:     contabeis_ec = get_estrutura_contabeis()
  26:     sugestao_incluir_link = '/core/sugestao/cont/incluir'
--------------------------------------------------------------------------------
[0.01020 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 644] DDL core.visoes.sugestao_contabeis_view: 
--------------------------------------------------------------------------------
  31:         sugestao_editar_link, sugestao_deletar_link)
  32: 
  33: 
  34: 
- 35: @permission_required('core.add_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 36: def sugestao_cont_incluir(request):'''
+ 35: def sugestao_cont_incluir(request):
+ 36:     '''
  37:     Tela de Incluir Sugestão de Turmas do Curso de Ciências Contábeis - Caicó.
  38:     '''
  39:     contabeis_ec = get_estrutura_contabeis()
  40:     sugestao_manter_link = '/core/sugestao/adm/manter'
--------------------------------------------------------------------------------
[0.01056 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 645] DDL core.visoes.sugestao_contabeis_view: 
--------------------------------------------------------------------------------
  41:     return sugestao_incluir(request, contabeis_ec, sugestao_manter_link)
  42: 
  43: 
  44: 
- 45: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 46: def sugestao_cont_editar(request, pk):'''
+ 45: def sugestao_cont_editar(request, pk):
+ 46:     '''
  47:     Tela de Editar Sugestão de Turmas do Curso de Ciências Contábeis - Caicó.
  48:     '''
  49:     contabeis_ec = get_estrutura_contabeis()
  50:     return sugestao_editar(request, pk, estrutura=contabeis_ec)
--------------------------------------------------------------------------------
[0.01446 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 646] DDL core.visoes.sugestao_contabeis_view: 
--------------------------------------------------------------------------------
  50:     return sugestao_editar(request, pk, estrutura=contabeis_ec)
  51: 
  52: 
  53: 
- 54: @permission_required('core.delete_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 55: def sugestao_cont_deletar(request, pk):'''
+ 54: def sugestao_cont_deletar(request, pk):
+ 55:     '''
  56:     Tela de Deletar Sugestão de Turmas do Curso de Ciências Contábeis - Caicó.
  57:     '''
  58:     contabeis_ec = get_estrutura_contabeis()
  59:     return sugestao_deletar(request, pk, estrutura=contabeis_ec)
--------------------------------------------------------------------------------
[0.01587 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 647] DDL core.visoes.sugestao_geografia_view: 
--------------------------------------------------------------------------------
  12:     return sugestao_grade_horarios(request, geo_bac_ec, sugestao_incluir_link, sugestao_manter_link, sugestao_list_link)
  13: 
  14: 
  15: 
- 16: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 17: def sugestao_geo_bac_manter(request):'''
+ 16: def sugestao_geo_bac_manter(request):
+ 17:     '''
  18:         Tela de Manter Sugestão de Turmas do Curso de Geografia - Bacharelado - Caicó.
  19:     '''
  20:     geo_bac_ec = get_estrutura_geografia_bacharelado()
  21:     sugestao_incluir_link = '/core/sugestao/geo-bac/incluir'
--------------------------------------------------------------------------------
[0.01353 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 648] DDL core.visoes.sugestao_geografia_view: 
--------------------------------------------------------------------------------
  26:         sugestao_editar_link, sugestao_deletar_link)
  27: 
  28: 
  29: 
- 30: @permission_required('core.add_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 31: def sugestao_geo_bac_incluir(request):geo_bac_ec = get_estrutura_geografia_bacharelado()
+ 30: def sugestao_geo_bac_incluir(request):
+ 31:     geo_bac_ec = get_estrutura_geografia_bacharelado()
  32:     sugestao_manter_link = '/core/sugestao/geo-bac/manter'
  33:     return sugestao_incluir(request, geo_bac_ec, sugestao_manter_link)
  34: 
  35: 
--------------------------------------------------------------------------------
[0.02905 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 649] DDL core.visoes.sugestao_geografia_view: 
--------------------------------------------------------------------------------
  33:     return sugestao_incluir(request, geo_bac_ec, sugestao_manter_link)
  34: 
  35: 
  36: 
- 37: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 38: def sugestao_geo_bac_editar(request, pk):geo_bac_ec = get_estrutura_geografia_bacharelado()
+ 37: def sugestao_geo_bac_editar(request, pk):
+ 38:     geo_bac_ec = get_estrutura_geografia_bacharelado()
  39:     return sugestao_editar(request, pk, estrutura=geo_bac_ec)
  40: 
  41: 
  42: 
--------------------------------------------------------------------------------
[0.01290 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 650] DDL core.visoes.sugestao_geografia_view: 
--------------------------------------------------------------------------------
  39:     return sugestao_editar(request, pk, estrutura=geo_bac_ec)
  40: 
  41: 
  42: 
- 43: @permission_required('core.delete_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 44: def sugestao_geo_bac_deletar(request, pk):geo_bac_ec = get_estrutura_geografia_bacharelado()
+ 43: def sugestao_geo_bac_deletar(request, pk):
+ 44:     geo_bac_ec = get_estrutura_geografia_bacharelado()
  45:     return sugestao_deletar(request, pk, estrutura=geo_bac_ec)
  46: 
  47: 
  48: def sugestao_geo_lic_list(request):
--------------------------------------------------------------------------------
[0.01636 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 651] DDL core.visoes.sugestao_geografia_view: 
--------------------------------------------------------------------------------
  53:     return sugestao_grade_horarios(request, geo_lic_ec, sugestao_incluir_link, sugestao_manter_link, sugestao_list_link)
  54: 
  55: 
  56: 
- 57: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 58: def sugestao_geo_lic_manter(request):'''
+ 57: def sugestao_geo_lic_manter(request):
+ 58:     '''
  59:         Tela de Manter Sugestão de Turmas do Curso de Geografia - Licenciatura - Caicó.
  60:     '''
  61:     geo_lic_ec = get_estrutura_geografia_licenciatura()
  62:     sugestao_incluir_link = '/core/sugestao/geo-lic/incluir'
--------------------------------------------------------------------------------
[0.01374 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 652] DDL core.visoes.sugestao_geografia_view: 
--------------------------------------------------------------------------------
  67:         sugestao_editar_link, sugestao_deletar_link)
  68: 
  69: 
  70: 
- 71: @permission_required('core.add_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 72: def sugestao_geo_lic_incluir(request):geo_lic_ec = get_estrutura_geografia_licenciatura()
+ 71: def sugestao_geo_lic_incluir(request):
+ 72:     geo_lic_ec = get_estrutura_geografia_licenciatura()
  73:     sugestao_manter_link = '/core/sugestao/geo-lic/manter'
  74:     return sugestao_incluir(request, geo_lic_ec, sugestao_manter_link)
  75: 
  76: 
--------------------------------------------------------------------------------
[0.01322 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 653] DDL core.visoes.sugestao_geografia_view: 
--------------------------------------------------------------------------------
  74:     return sugestao_incluir(request, geo_lic_ec, sugestao_manter_link)
  75: 
  76: 
  77: 
- 78: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 79: def sugestao_geo_lic_editar(request, pk):geo_lic_ec = get_estrutura_geografia_licenciatura()
+ 78: def sugestao_geo_lic_editar(request, pk):
+ 79:     geo_lic_ec = get_estrutura_geografia_licenciatura()
  80:     return sugestao_editar(request, pk, estrutura=geo_lic_ec)
  81: 
  82: 
  83: 
--------------------------------------------------------------------------------
[0.01382 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 654] DDL core.visoes.sugestao_geografia_view: 
--------------------------------------------------------------------------------
  80:     return sugestao_editar(request, pk, estrutura=geo_lic_ec)
  81: 
  82: 
  83: 
- 84: @permission_required('core.delete_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 85: def sugestao_geo_lic_deletar(request, pk):geo_lic_ec = get_estrutura_geografia_licenciatura()
+ 84: def sugestao_geo_lic_deletar(request, pk):
+ 85:     geo_lic_ec = get_estrutura_geografia_licenciatura()
  86:     return sugestao_deletar(request, pk, estrutura=geo_lic_ec)
--------------------------------------------------------------------------------
[0.01162 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 655] DDL core.visoes.sugestao_historia_view: 
--------------------------------------------------------------------------------
  12:     return sugestao_grade_horarios(request, his_bac_ec, sugestao_incluir_link, sugestao_manter_link, sugestao_list_link)
  13: 
  14: 
  15: 
- 16: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 17: def sugestao_his_bac_manter(request):'''
+ 16: def sugestao_his_bac_manter(request):
+ 17:     '''
  18:         Tela de Manter Sugestão de Turmas do Curso de História - Bacharelado - Caicó.
  19:     '''
  20:     his_bac_ec = get_estrutura_historia_bacharelado()
  21:     sugestao_incluir_link = '/core/sugestao/his-bac/incluir'
--------------------------------------------------------------------------------
[0.01050 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 656] DDL core.visoes.sugestao_historia_view: 
--------------------------------------------------------------------------------
  26:         sugestao_editar_link, sugestao_deletar_link)
  27: 
  28: 
  29: 
- 30: @permission_required('core.add_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 31: def sugestao_his_bac_incluir(request):his_bac_ec = get_estrutura_historia_bacharelado()
+ 30: def sugestao_his_bac_incluir(request):
+ 31:     his_bac_ec = get_estrutura_historia_bacharelado()
  32:     sugestao_manter_link = '/core/sugestao/his-bac/manter'
  33:     return sugestao_incluir(request, his_bac_ec, sugestao_manter_link)
  34: 
  35: 
--------------------------------------------------------------------------------
[0.01071 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 657] DDL core.visoes.sugestao_historia_view: 
--------------------------------------------------------------------------------
  33:     return sugestao_incluir(request, his_bac_ec, sugestao_manter_link)
  34: 
  35: 
  36: 
- 37: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 38: def sugestao_his_bac_editar(request, pk):his_bac_ec = get_estrutura_historia_bacharelado()
+ 37: def sugestao_his_bac_editar(request, pk):
+ 38:     his_bac_ec = get_estrutura_historia_bacharelado()
  39:     return sugestao_editar(request, pk, estrutura=his_bac_ec)
  40: 
  41: 
  42: 
--------------------------------------------------------------------------------
[0.01526 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 658] DDL core.visoes.sugestao_historia_view: 
--------------------------------------------------------------------------------
  39:     return sugestao_editar(request, pk, estrutura=his_bac_ec)
  40: 
  41: 
  42: 
- 43: @permission_required('core.delete_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 44: def sugestao_his_bac_deletar(request, pk):his_bac_ec = get_estrutura_historia_bacharelado()
+ 43: def sugestao_his_bac_deletar(request, pk):
+ 44:     his_bac_ec = get_estrutura_historia_bacharelado()
  45:     return sugestao_deletar(request, pk, estrutura=his_bac_ec)
  46: 
  47: 
  48: def sugestao_his_lic_list(request):
--------------------------------------------------------------------------------
[0.01464 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 659] DDL core.visoes.sugestao_historia_view: 
--------------------------------------------------------------------------------
  53:     return sugestao_grade_horarios(request, his_lic_ec, sugestao_incluir_link, sugestao_manter_link, sugestao_list_link)
  54: 
  55: 
  56: 
- 57: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 58: def sugestao_his_lic_manter(request):'''
+ 57: def sugestao_his_lic_manter(request):
+ 58:     '''
  59:         Tela de Manter Sugestão de Turmas do Curso de História - Licenciatura - Caicó.
  60:     '''
  61:     his_lic_ec = get_estrutura_historia_licenciatura()
  62:     sugestao_incluir_link = '/core/sugestao/his-lic/incluir'
--------------------------------------------------------------------------------
[0.01762 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 660] DDL core.visoes.sugestao_historia_view: 
--------------------------------------------------------------------------------
  67:         sugestao_editar_link, sugestao_deletar_link)
  68: 
  69: 
  70: 
- 71: @permission_required('core.add_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 72: def sugestao_his_lic_incluir(request):his_lic_ec = get_estrutura_historia_licenciatura()
+ 71: def sugestao_his_lic_incluir(request):
+ 72:     his_lic_ec = get_estrutura_historia_licenciatura()
  73:     sugestao_manter_link = '/core/sugestao/his-lic/manter'
  74:     return sugestao_incluir(request, his_lic_ec, sugestao_manter_link)
  75: 
  76: 
--------------------------------------------------------------------------------
[0.01358 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 661] DDL core.visoes.sugestao_historia_view: 
--------------------------------------------------------------------------------
  74:     return sugestao_incluir(request, his_lic_ec, sugestao_manter_link)
  75: 
  76: 
  77: 
- 78: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 79: def sugestao_his_lic_editar(request, pk):his_lic_ec = get_estrutura_historia_licenciatura()
+ 78: def sugestao_his_lic_editar(request, pk):
+ 79:     his_lic_ec = get_estrutura_historia_licenciatura()
  80:     return sugestao_editar(request, pk, estrutura=his_lic_ec)
  81: 
  82: 
  83: 
--------------------------------------------------------------------------------
[0.04788 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 662] DDL core.visoes.sugestao_historia_view: 
--------------------------------------------------------------------------------
  80:     return sugestao_editar(request, pk, estrutura=his_lic_ec)
  81: 
  82: 
  83: 
- 84: @permission_required('core.delete_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 85: def sugestao_his_lic_deletar(request, pk):his_lic_ec = get_estrutura_historia_licenciatura()
+ 84: def sugestao_his_lic_deletar(request, pk):
+ 85:     his_lic_ec = get_estrutura_historia_licenciatura()
  86:     return sugestao_deletar(request, pk, estrutura=his_lic_ec)
--------------------------------------------------------------------------------
[0.01511 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 663] DDL core.visoes.sugestao_letras_view: 
--------------------------------------------------------------------------------
   13:     return sugestao_grade_horarios(request, let_esp_ec, sugestao_incluir_link, sugestao_manter_link, sugestao_list_link)
   14: 
   15: 
   16: 
-  17: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
-  18: def sugestao_let_esp_manter(request):'''
+  17: def sugestao_let_esp_manter(request):
+  18:     '''
   19:         Tela de Manter Sugestão de Turmas do Curso de Letras - Língua Espanhola - Currais Novos.
   20:     '''
   21:     let_esp_ec = get_estrutura_letras_espanhol()
   22:     sugestao_incluir_link = '/core/sugestao/let-esp/incluir'
--------------------------------------------------------------------------------
[0.01168 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 664] DDL core.visoes.sugestao_letras_view: 
--------------------------------------------------------------------------------
   27:         sugestao_editar_link, sugestao_deletar_link)
   28: 
   29: 
   30: 
-  31: @permission_required('core.add_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
-  32: def sugestao_let_esp_incluir(request):let_esp_ec = get_estrutura_letras_espanhol()
+  31: def sugestao_let_esp_incluir(request):
+  32:     let_esp_ec = get_estrutura_letras_espanhol()
   33:     sugestao_manter_link = '/core/sugestao/let-esp/manter'
   34:     return sugestao_incluir(request, let_esp_ec, sugestao_manter_link)
   35: 
   36: 
--------------------------------------------------------------------------------
[0.01229 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 665] DDL core.visoes.sugestao_letras_view: 
--------------------------------------------------------------------------------
   34:     return sugestao_incluir(request, let_esp_ec, sugestao_manter_link)
   35: 
   36: 
   37: 
-  38: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
-  39: def sugestao_let_esp_editar(request, pk):let_esp_ec = get_estrutura_letras_espanhol()
+  38: def sugestao_let_esp_editar(request, pk):
+  39:     let_esp_ec = get_estrutura_letras_espanhol()
   40:     return sugestao_editar(request, pk, estrutura=let_esp_ec)
   41: 
   42: 
   43: 
--------------------------------------------------------------------------------
[0.01158 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 666] DDL core.visoes.sugestao_letras_view: 
--------------------------------------------------------------------------------
   40:     return sugestao_editar(request, pk, estrutura=let_esp_ec)
   41: 
   42: 
   43: 
-  44: @permission_required('core.delete_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
-  45: def sugestao_let_esp_deletar(request, pk):let_esp_ec = get_estrutura_letras_espanhol()
+  44: def sugestao_let_esp_deletar(request, pk):
+  45:     let_esp_ec = get_estrutura_letras_espanhol()
   46:     return sugestao_deletar(request, pk, estrutura=let_esp_ec)
   47: 
   48: 
   49: def sugestao_let_por_list(request):
--------------------------------------------------------------------------------
[0.01485 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 667] DDL core.visoes.sugestao_letras_view: 
--------------------------------------------------------------------------------
   54:     return sugestao_grade_horarios(request, let_por_ec, sugestao_incluir_link, sugestao_manter_link, sugestao_list_link)
   55: 
   56: 
   57: 
-  58: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
-  59: def sugestao_let_por_manter(request):'''
+  58: def sugestao_let_por_manter(request):
+  59:     '''
   60:         Tela de Manter Sugestão de Turmas do Curso de Letras - Língua Portuguesa - Currais Novos.
   61:     '''
   62:     let_por_ec = get_estrutura_letras_portugues()
   63:     sugestao_incluir_link = '/core/sugestao/let-por/incluir'
--------------------------------------------------------------------------------
[0.01106 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 668] DDL core.visoes.sugestao_letras_view: 
--------------------------------------------------------------------------------
   68:         sugestao_editar_link, sugestao_deletar_link)
   69: 
   70: 
   71: 
-  72: @permission_required('core.add_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
-  73: def sugestao_let_por_incluir(request):let_por_ec = get_estrutura_letras_portugues()
+  72: def sugestao_let_por_incluir(request):
+  73:     let_por_ec = get_estrutura_letras_portugues()
   74:     sugestao_manter_link = '/core/sugestao/let-por/manter'
   75:     return sugestao_incluir(request, let_por_ec, sugestao_manter_link)
   76: 
   77: 
--------------------------------------------------------------------------------
[0.01267 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 669] DDL core.visoes.sugestao_letras_view: 
--------------------------------------------------------------------------------
   75:     return sugestao_incluir(request, let_por_ec, sugestao_manter_link)
   76: 
   77: 
   78: 
-  79: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
-  80: def sugestao_let_por_editar(request, pk):let_por_ec = get_estrutura_letras_portugues()
+  79: def sugestao_let_por_editar(request, pk):
+  80:     let_por_ec = get_estrutura_letras_portugues()
   81:     return sugestao_editar(request, pk, estrutura=let_por_ec)
   82: 
   83: 
   84: 
--------------------------------------------------------------------------------
[0.01364 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 670] DDL core.visoes.sugestao_letras_view: 
--------------------------------------------------------------------------------
   81:     return sugestao_editar(request, pk, estrutura=let_por_ec)
   82: 
   83: 
   84: 
-  85: @permission_required('core.delete_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
-  86: def sugestao_let_por_deletar(request, pk):let_por_ec = get_estrutura_letras_portugues()
+  85: def sugestao_let_por_deletar(request, pk):
+  86:     let_por_ec = get_estrutura_letras_portugues()
   87:     return sugestao_deletar(request, pk, estrutura=let_por_ec)
   88: 
   89: 
   90: def sugestao_let_ing_list(request):
--------------------------------------------------------------------------------
[0.01149 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 671] DDL core.visoes.sugestao_letras_view: 
--------------------------------------------------------------------------------
   95:     return sugestao_grade_horarios(request, let_ing_ec, sugestao_incluir_link, sugestao_manter_link, sugestao_list_link)
   96: 
   97: 
   98: 
-  99: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 100: def sugestao_let_ing_manter(request):'''
+  99: def sugestao_let_ing_manter(request):
+ 100:     '''
  101:         Tela de Manter Sugestão de Turmas do Curso de Letras - Língua Inglesa - Currais Novos.
  102:     '''
  103:     let_ing_ec = get_estrutura_letras_ingles()
  104:     sugestao_incluir_link = '/core/sugestao/let-ing/incluir'
--------------------------------------------------------------------------------
[0.01162 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 672] DDL core.visoes.sugestao_letras_view: 
--------------------------------------------------------------------------------
  109:         sugestao_editar_link, sugestao_deletar_link)
  110: 
  111: 
  112: 
- 113: @permission_required('core.add_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 114: def sugestao_let_ing_incluir(request):let_ing_ec = get_estrutura_letras_ingles()
+ 113: def sugestao_let_ing_incluir(request):
+ 114:     let_ing_ec = get_estrutura_letras_ingles()
  115:     sugestao_manter_link = '/core/sugestao/let-ing/manter'
  116:     return sugestao_incluir(request, let_ing_ec, sugestao_manter_link)
  117: 
  118: 
--------------------------------------------------------------------------------
[0.00963 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 673] DDL core.visoes.sugestao_letras_view: 
--------------------------------------------------------------------------------
  116:     return sugestao_incluir(request, let_ing_ec, sugestao_manter_link)
  117: 
  118: 
  119: 
- 120: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 121: def sugestao_let_ing_editar(request, pk):let_ing_ec = get_estrutura_letras_ingles()
+ 120: def sugestao_let_ing_editar(request, pk):
+ 121:     let_ing_ec = get_estrutura_letras_ingles()
  122:     return sugestao_editar(request, pk, estrutura=let_ing_ec)
  123: 
  124: 
  125: 
--------------------------------------------------------------------------------
[0.00963 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 674] DDL core.visoes.sugestao_letras_view: 
--------------------------------------------------------------------------------
  122:     return sugestao_editar(request, pk, estrutura=let_ing_ec)
  123: 
  124: 
  125: 
- 126: @permission_required('core.delete_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 127: def sugestao_let_ing_deletar(request, pk):let_ing_ec = get_estrutura_letras_ingles()
+ 126: def sugestao_let_ing_deletar(request, pk):
+ 127:     let_ing_ec = get_estrutura_letras_ingles()
  128:     return sugestao_deletar(request, pk, estrutura=let_ing_ec)
--------------------------------------------------------------------------------
[0.02032 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 675] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
   56:         'ano_periodo_atual': ano_periodo_atual, \
   57:         'ano_periodo_prox': ano_periodo_prox, \
   58:         'ano_periodo_sel': ano_periodo, \
   59:         'semestres': atualiza_exibicao(semestres), \
-  60:         'semestres_atual': criar_string(semestres) + '.', \
+  60:         'semestres_atual': criar_string(semestres) - '.', \
   61:         'sugestao_incluir_link': sugestao_incluir_link, \
   62:         'sugestao_manter_link': sugestao_manter_link, \
   63:         'sugestao_list_link': sugestao_list_link, \
   64:         'docentes': Docente.objects.all(), \
--------------------------------------------------------------------------------
[0.01269 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 676] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  164:             ano=sugestao_turma.ano, 
  165:             periodo=sugestao_turma.periodo).values_list('codigo_turma')
  166:         codigos_str = criar_string(sugestoes)
  167:         form_sugestao.add_error('codigo_turma', 
- 168:             ('Os seguintes códigos de turmas já foram utilizados: ' + codigos_str) + '.')
+ 168:             ('Os seguintes códigos de turmas já foram utilizados: ' - codigos_str) + '.')
  169:         return True
  170:     return False
  171: 
  172: 
--------------------------------------------------------------------------------
[0.01736 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 677] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  164:             ano=sugestao_turma.ano, 
  165:             periodo=sugestao_turma.periodo).values_list('codigo_turma')
  166:         codigos_str = criar_string(sugestoes)
  167:         form_sugestao.add_error('codigo_turma', 
- 168:             ('Os seguintes códigos de turmas já foram utilizados: ' + codigos_str) + '.')
+ 168:             ('Os seguintes códigos de turmas já foram utilizados: ' + codigos_str) - '.')
  169:         return True
  170:     return False
  171: 
  172: 
--------------------------------------------------------------------------------
[0.01628 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 678] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  184:             for s in sugestoes:
  185:                 if (s.codigo_turma == sugestao_turma.codigo_turma and s.componente == sugestao_turma.componente):
  186:                     break
  187:                 if (sugestao_turma.local is not None and s.local == sugestao_turma.local):
- 188:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
+ 188:                     choques_componentes.add((str(s.componente.codigo) - ' - ') + s.componente.nome)
  189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
  190:                 if (sugestao_turma.docente is not None and s.docente == sugestao_turma.docente):
  191:                     
  192:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
--------------------------------------------------------------------------------
[0.01298 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 679] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  184:             for s in sugestoes:
  185:                 if (s.codigo_turma == sugestao_turma.codigo_turma and s.componente == sugestao_turma.componente):
  186:                     break
  187:                 if (sugestao_turma.local is not None and s.local == sugestao_turma.local):
- 188:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
+ 188:                     choques_componentes.add((str(s.componente.codigo) + ' - ') - s.componente.nome)
  189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
  190:                 if (sugestao_turma.docente is not None and s.docente == sugestao_turma.docente):
  191:                     
  192:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
--------------------------------------------------------------------------------
[0.01321 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 680] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  185:                 if (s.codigo_turma == sugestao_turma.codigo_turma and s.componente == sugestao_turma.componente):
  186:                     break
  187:                 if (sugestao_turma.local is not None and s.local == sugestao_turma.local):
  188:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
- 189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
+ 189:                     choques_horarios.append((horario.dia - horario.turno) + horario.ordem)
  190:                 if (sugestao_turma.docente is not None and s.docente == sugestao_turma.docente):
  191:                     
  192:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
  193:                     choque_docente.append((horario.dia + horario.turno) + horario.ordem)
--------------------------------------------------------------------------------
[0.01536 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 681] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  185:                 if (s.codigo_turma == sugestao_turma.codigo_turma and s.componente == sugestao_turma.componente):
  186:                     break
  187:                 if (sugestao_turma.local is not None and s.local == sugestao_turma.local):
  188:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
- 189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
+ 189:                     choques_horarios.append((horario.dia + horario.turno) - horario.ordem)
  190:                 if (sugestao_turma.docente is not None and s.docente == sugestao_turma.docente):
  191:                     
  192:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
  193:                     choque_docente.append((horario.dia + horario.turno) + horario.ordem)
--------------------------------------------------------------------------------
[0.01396 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 682] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  188:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
  189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
  190:                 if (sugestao_turma.docente is not None and s.docente == sugestao_turma.docente):
  191:                     
- 192:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
+ 192:                     choques_componentes.add((str(s.componente.codigo) - ' - ') + s.componente.nome)
  193:                     choque_docente.append((horario.dia + horario.turno) + horario.ordem)
  194:                 
  195:                 verificar_choques_semestre(form_sugestao, horario, s, sugestao_turma, choques_componentes_semestre, choques_semestres)
  196:     
--------------------------------------------------------------------------------
[0.01168 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 683] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  188:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
  189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
  190:                 if (sugestao_turma.docente is not None and s.docente == sugestao_turma.docente):
  191:                     
- 192:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
+ 192:                     choques_componentes.add((str(s.componente.codigo) + ' - ') - s.componente.nome)
  193:                     choque_docente.append((horario.dia + horario.turno) + horario.ordem)
  194:                 
  195:                 verificar_choques_semestre(form_sugestao, horario, s, sugestao_turma, choques_componentes_semestre, choques_semestres)
  196:     
--------------------------------------------------------------------------------
[0.01082 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 684] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
  190:                 if (sugestao_turma.docente is not None and s.docente == sugestao_turma.docente):
  191:                     
  192:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
- 193:                     choque_docente.append((horario.dia + horario.turno) + horario.ordem)
+ 193:                     choque_docente.append((horario.dia - horario.turno) + horario.ordem)
  194:                 
  195:                 verificar_choques_semestre(form_sugestao, horario, s, sugestao_turma, choques_componentes_semestre, choques_semestres)
  196:     
  197:     if (choques_horarios or choque_docente or choques_componentes or choques_semestres):
--------------------------------------------------------------------------------
[0.01107 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 685] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
  190:                 if (sugestao_turma.docente is not None and s.docente == sugestao_turma.docente):
  191:                     
  192:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
- 193:                     choque_docente.append((horario.dia + horario.turno) + horario.ordem)
+ 193:                     choque_docente.append((horario.dia + horario.turno) - horario.ordem)
  194:                 
  195:                 verificar_choques_semestre(form_sugestao, horario, s, sugestao_turma, choques_componentes_semestre, choques_semestres)
  196:     
  197:     if (choques_horarios or choque_docente or choques_componentes or choques_semestres):
--------------------------------------------------------------------------------
[0.01291 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 686] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  196:     
  197:     if (choques_horarios or choque_docente or choques_componentes or choques_semestres):
  198:         if choques_componentes:
  199:             form_sugestao.add_error('componente', 
- 200:                 ('Choque com os Componentes Curriculares: ' + \
+ 200:                 ('Choque com os Componentes Curriculares: ' - \
  201:                 criar_string(list(choques_componentes))) + '.')
  202:         if choques_horarios:
  203:             form_sugestao.add_error('local', 
  204:                 ('Sala com choque nos horários: ' + \
--------------------------------------------------------------------------------
[0.01096 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 687] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  197:     if (choques_horarios or choque_docente or choques_componentes or choques_semestres):
  198:         if choques_componentes:
  199:             form_sugestao.add_error('componente', 
  200:                 ('Choque com os Componentes Curriculares: ' + \
- 201:                 criar_string(list(choques_componentes))) + '.')
+ 201:                 criar_string(list(choques_componentes))) - '.')
  202:         if choques_horarios:
  203:             form_sugestao.add_error('local', 
  204:                 ('Sala com choque nos horários: ' + \
  205:                 criar_string(choques_horarios)) + '.')
--------------------------------------------------------------------------------
[0.01053 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 688] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  200:                 ('Choque com os Componentes Curriculares: ' + \
  201:                 criar_string(list(choques_componentes))) + '.')
  202:         if choques_horarios:
  203:             form_sugestao.add_error('local', 
- 204:                 ('Sala com choque nos horários: ' + \
+ 204:                 ('Sala com choque nos horários: ' - \
  205:                 criar_string(choques_horarios)) + '.')
  206:         if choque_docente:
  207:             form_sugestao.add_error('docente', 
  208:                 ('Docente com choque nos horários: ' + \
--------------------------------------------------------------------------------
[0.01035 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 689] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  201:                 criar_string(list(choques_componentes))) + '.')
  202:         if choques_horarios:
  203:             form_sugestao.add_error('local', 
  204:                 ('Sala com choque nos horários: ' + \
- 205:                 criar_string(choques_horarios)) + '.')
+ 205:                 criar_string(choques_horarios)) - '.')
  206:         if choque_docente:
  207:             form_sugestao.add_error('docente', 
  208:                 ('Docente com choque nos horários: ' + \
  209:                 criar_string(choque_docente)) + '.')
--------------------------------------------------------------------------------
[0.01427 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 690] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  204:                 ('Sala com choque nos horários: ' + \
  205:                 criar_string(choques_horarios)) + '.')
  206:         if choque_docente:
  207:             form_sugestao.add_error('docente', 
- 208:                 ('Docente com choque nos horários: ' + \
+ 208:                 ('Docente com choque nos horários: ' - \
  209:                 criar_string(choque_docente)) + '.')
  210:         if choques_semestres:
  211:             form_sugestao.add_error('componente', 
  212:                 ('Choque com os Componentes Curriculares do mesmo semestre: ' + \
--------------------------------------------------------------------------------
[0.01049 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 691] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  205:                 criar_string(choques_horarios)) + '.')
  206:         if choque_docente:
  207:             form_sugestao.add_error('docente', 
  208:                 ('Docente com choque nos horários: ' + \
- 209:                 criar_string(choque_docente)) + '.')
+ 209:                 criar_string(choque_docente)) - '.')
  210:         if choques_semestres:
  211:             form_sugestao.add_error('componente', 
  212:                 ('Choque com os Componentes Curriculares do mesmo semestre: ' + \
  213:                 criar_string(list(choques_componentes_semestre))) + '.')
--------------------------------------------------------------------------------
[0.01244 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 692] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  208:                 ('Docente com choque nos horários: ' + \
  209:                 criar_string(choque_docente)) + '.')
  210:         if choques_semestres:
  211:             form_sugestao.add_error('componente', 
- 212:                 ('Choque com os Componentes Curriculares do mesmo semestre: ' + \
+ 212:                 ('Choque com os Componentes Curriculares do mesmo semestre: ' - \
  213:                 criar_string(list(choques_componentes_semestre))) + '.')
  214:             form_sugestao.add_error('descricao_horario', ('Choque nos horários: ' + \
  215:                 criar_string(choques_semestres)) + '.')
  216:         return True
--------------------------------------------------------------------------------
[0.01289 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 693] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  209:                 criar_string(choque_docente)) + '.')
  210:         if choques_semestres:
  211:             form_sugestao.add_error('componente', 
  212:                 ('Choque com os Componentes Curriculares do mesmo semestre: ' + \
- 213:                 criar_string(list(choques_componentes_semestre))) + '.')
+ 213:                 criar_string(list(choques_componentes_semestre))) - '.')
  214:             form_sugestao.add_error('descricao_horario', ('Choque nos horários: ' + \
  215:                 criar_string(choques_semestres)) + '.')
  216:         return True
  217:     return False
--------------------------------------------------------------------------------
[0.01223 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 694] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  210:         if choques_semestres:
  211:             form_sugestao.add_error('componente', 
  212:                 ('Choque com os Componentes Curriculares do mesmo semestre: ' + \
  213:                 criar_string(list(choques_componentes_semestre))) + '.')
- 214:             form_sugestao.add_error('descricao_horario', ('Choque nos horários: ' + \
+ 214:             form_sugestao.add_error('descricao_horario', ('Choque nos horários: ' - \
  215:                 criar_string(choques_semestres)) + '.')
  216:         return True
  217:     return False
  218: 
--------------------------------------------------------------------------------
[0.01316 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 695] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  211:             form_sugestao.add_error('componente', 
  212:                 ('Choque com os Componentes Curriculares do mesmo semestre: ' + \
  213:                 criar_string(list(choques_componentes_semestre))) + '.')
  214:             form_sugestao.add_error('descricao_horario', ('Choque nos horários: ' + \
- 215:                 criar_string(choques_semestres)) + '.')
+ 215:                 criar_string(choques_semestres)) - '.')
  216:         return True
  217:     return False
  218: 
  219: 
--------------------------------------------------------------------------------
[0.01040 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 696] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  223:         sugestao_existente.curso == nova_sugestao.curso and \
  224:         (nova_sugestao.semestre != 0 or \
  225:         (nova_sugestao.semestre == 0 and checked))):
  226:         choques_componentes_semestre.add(
- 227:             (str(sugestao_existente.componente.codigo) + ' - ') + \
+ 227:             (str(sugestao_existente.componente.codigo) - ' - ') + \
  228:             sugestao_existente.componente.nome)
  229:         choques_semestres.append((horario.dia + horario.turno) + horario.ordem)
  230: 
  231: 
--------------------------------------------------------------------------------
[0.01072 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 697] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  223:         sugestao_existente.curso == nova_sugestao.curso and \
  224:         (nova_sugestao.semestre != 0 or \
  225:         (nova_sugestao.semestre == 0 and checked))):
  226:         choques_componentes_semestre.add(
- 227:             (str(sugestao_existente.componente.codigo) + ' - ') + \
+ 227:             (str(sugestao_existente.componente.codigo) + ' - ') - \
  228:             sugestao_existente.componente.nome)
  229:         choques_semestres.append((horario.dia + horario.turno) + horario.ordem)
  230: 
  231: 
--------------------------------------------------------------------------------
[0.00995 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 698] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  225:         (nova_sugestao.semestre == 0 and checked))):
  226:         choques_componentes_semestre.add(
  227:             (str(sugestao_existente.componente.codigo) + ' - ') + \
  228:             sugestao_existente.componente.nome)
- 229:         choques_semestres.append((horario.dia + horario.turno) + horario.ordem)
+ 229:         choques_semestres.append((horario.dia - horario.turno) + horario.ordem)
  230: 
  231: 
  232: def criar_string(colecao):
  233:     str_result = ''
--------------------------------------------------------------------------------
[0.01117 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 699] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  225:         (nova_sugestao.semestre == 0 and checked))):
  226:         choques_componentes_semestre.add(
  227:             (str(sugestao_existente.componente.codigo) + ' - ') + \
  228:             sugestao_existente.componente.nome)
- 229:         choques_semestres.append((horario.dia + horario.turno) + horario.ordem)
+ 229:         choques_semestres.append((horario.dia + horario.turno) - horario.ordem)
  230: 
  231: 
  232: def criar_string(colecao):
  233:     str_result = ''
--------------------------------------------------------------------------------
[0.01237 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 700] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  416:         solicitacao_verificar_choques(discente, turma)
  417:     
  418:     if houve_choques:
  419:         messages.error(request, 
- 420:             ((((('A turma ' + str(turma)) + ' tem choque com: ') + criar_string(list(choques_componentes))) + \
+ 420:             ((((('A turma ' - str(turma)) + ' tem choque com: ') + criar_string(list(choques_componentes))) + \
  421:             ', nos horários: ') + criar_string(list(choques_horarios))) + '.')
  422:         return redirecionar(request)
  423:     
  424:     (resultado, created) = solicitacao_incluir(discente, turma)
--------------------------------------------------------------------------------
[0.01177 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 701] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  416:         solicitacao_verificar_choques(discente, turma)
  417:     
  418:     if houve_choques:
  419:         messages.error(request, 
- 420:             ((((('A turma ' + str(turma)) + ' tem choque com: ') + criar_string(list(choques_componentes))) + \
+ 420:             ((((('A turma ' + str(turma)) - ' tem choque com: ') + criar_string(list(choques_componentes))) + \
  421:             ', nos horários: ') + criar_string(list(choques_horarios))) + '.')
  422:         return redirecionar(request)
  423:     
  424:     (resultado, created) = solicitacao_incluir(discente, turma)
--------------------------------------------------------------------------------
[0.01300 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 702] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  416:         solicitacao_verificar_choques(discente, turma)
  417:     
  418:     if houve_choques:
  419:         messages.error(request, 
- 420:             ((((('A turma ' + str(turma)) + ' tem choque com: ') + criar_string(list(choques_componentes))) + \
+ 420:             ((((('A turma ' + str(turma)) + ' tem choque com: ') - criar_string(list(choques_componentes))) + \
  421:             ', nos horários: ') + criar_string(list(choques_horarios))) + '.')
  422:         return redirecionar(request)
  423:     
  424:     (resultado, created) = solicitacao_incluir(discente, turma)
--------------------------------------------------------------------------------
[0.01128 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 703] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  416:         solicitacao_verificar_choques(discente, turma)
  417:     
  418:     if houve_choques:
  419:         messages.error(request, 
- 420:             ((((('A turma ' + str(turma)) + ' tem choque com: ') + criar_string(list(choques_componentes))) + \
+ 420:             ((((('A turma ' + str(turma)) + ' tem choque com: ') + criar_string(list(choques_componentes))) - \
  421:             ', nos horários: ') + criar_string(list(choques_horarios))) + '.')
  422:         return redirecionar(request)
  423:     
  424:     (resultado, created) = solicitacao_incluir(discente, turma)
--------------------------------------------------------------------------------
[0.01008 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 704] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  417:     
  418:     if houve_choques:
  419:         messages.error(request, 
  420:             ((((('A turma ' + str(turma)) + ' tem choque com: ') + criar_string(list(choques_componentes))) + \
- 421:             ', nos horários: ') + criar_string(list(choques_horarios))) + '.')
+ 421:             ', nos horários: ') - criar_string(list(choques_horarios))) + '.')
  422:         return redirecionar(request)
  423:     
  424:     (resultado, created) = solicitacao_incluir(discente, turma)
  425:     
--------------------------------------------------------------------------------
[0.01194 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 705] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  417:     
  418:     if houve_choques:
  419:         messages.error(request, 
  420:             ((((('A turma ' + str(turma)) + ' tem choque com: ') + criar_string(list(choques_componentes))) + \
- 421:             ', nos horários: ') + criar_string(list(choques_horarios))) + '.')
+ 421:             ', nos horários: ') + criar_string(list(choques_horarios))) - '.')
  422:         return redirecionar(request)
  423:     
  424:     (resultado, created) = solicitacao_incluir(discente, turma)
  425:     
--------------------------------------------------------------------------------
[0.01085 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 706] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  423:     
  424:     (resultado, created) = solicitacao_incluir(discente, turma)
  425:     
  426:     if created:
- 427:         messages.success(request, ('Solicitação de Interesse na Turma ' + \
+ 427:         messages.success(request, ('Solicitação de Interesse na Turma ' - \
  428:             str(resultado.turma)) + ' cadastrada com sucesso.')
  429:     else:
  430:         messages.error(request, ('Já existe Solicitação de Interesse na Turma ' + \
  431:             str(resultado.turma)) + '.')
--------------------------------------------------------------------------------
[0.00989 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 707] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  424:     (resultado, created) = solicitacao_incluir(discente, turma)
  425:     
  426:     if created:
  427:         messages.success(request, ('Solicitação de Interesse na Turma ' + \
- 428:             str(resultado.turma)) + ' cadastrada com sucesso.')
+ 428:             str(resultado.turma)) - ' cadastrada com sucesso.')
  429:     else:
  430:         messages.error(request, ('Já existe Solicitação de Interesse na Turma ' + \
  431:             str(resultado.turma)) + '.')
  432:     
--------------------------------------------------------------------------------
[0.01239 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 708] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  426:     if created:
  427:         messages.success(request, ('Solicitação de Interesse na Turma ' + \
  428:             str(resultado.turma)) + ' cadastrada com sucesso.')
  429:     else:
- 430:         messages.error(request, ('Já existe Solicitação de Interesse na Turma ' + \
+ 430:         messages.error(request, ('Já existe Solicitação de Interesse na Turma ' - \
  431:             str(resultado.turma)) + '.')
  432:     
  433:     return redirecionar(request)
  434: 
--------------------------------------------------------------------------------
[0.00996 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 709] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  427:         messages.success(request, ('Solicitação de Interesse na Turma ' + \
  428:             str(resultado.turma)) + ' cadastrada com sucesso.')
  429:     else:
  430:         messages.error(request, ('Já existe Solicitação de Interesse na Turma ' + \
- 431:             str(resultado.turma)) + '.')
+ 431:             str(resultado.turma)) - '.')
  432:     
  433:     return redirecionar(request)
  434: 
  435: 
--------------------------------------------------------------------------------
[0.01331 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 710] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  539:             vinculo = {'docente': docente, 'horarios': horarios, 'carga_horaria': carga_horaria}
  540:             vinculos.append(vinculo)
  541:             print(vinculo)
  542:         else:
- 543:             messages.error(request, ((('Docente ' + docente.nome) + ' com choque nos horários: ') + \
+ 543:             messages.error(request, ((('Docente ' - docente.nome) + ' com choque nos horários: ') + \
  544:                 criar_string(choques_docente)) + '.')
  545:     else:
  546:         messages.error(request, ('Docente ' + docente.nome) + ' já adicionado à Turma.')
  547:     
--------------------------------------------------------------------------------
[0.01038 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 711] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  539:             vinculo = {'docente': docente, 'horarios': horarios, 'carga_horaria': carga_horaria}
  540:             vinculos.append(vinculo)
  541:             print(vinculo)
  542:         else:
- 543:             messages.error(request, ((('Docente ' + docente.nome) + ' com choque nos horários: ') + \
+ 543:             messages.error(request, ((('Docente ' + docente.nome) - ' com choque nos horários: ') + \
  544:                 criar_string(choques_docente)) + '.')
  545:     else:
  546:         messages.error(request, ('Docente ' + docente.nome) + ' já adicionado à Turma.')
  547:     
--------------------------------------------------------------------------------
[0.01030 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 712] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  539:             vinculo = {'docente': docente, 'horarios': horarios, 'carga_horaria': carga_horaria}
  540:             vinculos.append(vinculo)
  541:             print(vinculo)
  542:         else:
- 543:             messages.error(request, ((('Docente ' + docente.nome) + ' com choque nos horários: ') + \
+ 543:             messages.error(request, ((('Docente ' + docente.nome) + ' com choque nos horários: ') - \
  544:                 criar_string(choques_docente)) + '.')
  545:     else:
  546:         messages.error(request, ('Docente ' + docente.nome) + ' já adicionado à Turma.')
  547:     
--------------------------------------------------------------------------------
[0.01005 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 713] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  540:             vinculos.append(vinculo)
  541:             print(vinculo)
  542:         else:
  543:             messages.error(request, ((('Docente ' + docente.nome) + ' com choque nos horários: ') + \
- 544:                 criar_string(choques_docente)) + '.')
+ 544:                 criar_string(choques_docente)) - '.')
  545:     else:
  546:         messages.error(request, ('Docente ' + docente.nome) + ' já adicionado à Turma.')
  547:     
  548:     data = dict()
--------------------------------------------------------------------------------
[0.01012 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 714] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  542:         else:
  543:             messages.error(request, ((('Docente ' + docente.nome) + ' com choque nos horários: ') + \
  544:                 criar_string(choques_docente)) + '.')
  545:     else:
- 546:         messages.error(request, ('Docente ' + docente.nome) + ' já adicionado à Turma.')
+ 546:         messages.error(request, ('Docente ' - docente.nome) + ' já adicionado à Turma.')
  547:     
  548:     data = dict()
  549:     data['existe_docente'] = existe_docente
  550:     data['houve_choque'] = houve_choque
--------------------------------------------------------------------------------
[0.00983 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 715] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  542:         else:
  543:             messages.error(request, ((('Docente ' + docente.nome) + ' com choque nos horários: ') + \
  544:                 criar_string(choques_docente)) + '.')
  545:     else:
- 546:         messages.error(request, ('Docente ' + docente.nome) + ' já adicionado à Turma.')
+ 546:         messages.error(request, ('Docente ' + docente.nome) - ' já adicionado à Turma.')
  547:     
  548:     data = dict()
  549:     data['existe_docente'] = existe_docente
  550:     data['houve_choque'] = houve_choque
--------------------------------------------------------------------------------
[0.00942 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 716] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  603:         for ds in docente_sugestoes:
  604:             vinculos_existentes = ds.vinculodocentesugestao_set.all()
  605:             existe = vinculos_existentes.filter(docente__id=docente.id)
  606:             if existe:
- 607:                 choque_docente.append((horario.dia + horario.turno) + horario.ordem)
+ 607:                 choque_docente.append((horario.dia - horario.turno) + horario.ordem)
  608:     
  609:     if choque_docente:
  610:         return (choque_docente, True)
  611:     return (None, False)
--------------------------------------------------------------------------------
[0.00992 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 717] AOR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  603:         for ds in docente_sugestoes:
  604:             vinculos_existentes = ds.vinculodocentesugestao_set.all()
  605:             existe = vinculos_existentes.filter(docente__id=docente.id)
  606:             if existe:
- 607:                 choque_docente.append((horario.dia + horario.turno) + horario.ordem)
+ 607:                 choque_docente.append((horario.dia + horario.turno) - horario.ordem)
  608:     
  609:     if choque_docente:
  610:         return (choque_docente, True)
  611:     return (None, False)
--------------------------------------------------------------------------------
[0.00978 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 718] ASR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  232: def criar_string(colecao):
  233:     str_result = ''
  234:     tam = len(colecao)
  235:     for (index, s) in enumerate(colecao, start=1):
- 236:         str_result += s.__str__()
+ 236:         str_result -= s.__str__()
  237:         if (tam > 1 and index < tam):
  238:             str_result += ', '
  239:     str_result += ''
  240:     return str_result
--------------------------------------------------------------------------------
[0.01162 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 719] ASR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  234:     tam = len(colecao)
  235:     for (index, s) in enumerate(colecao, start=1):
  236:         str_result += s.__str__()
  237:         if (tam > 1 and index < tam):
- 238:             str_result += ', '
+ 238:             str_result -= ', '
  239:     str_result += ''
  240:     return str_result
  241: 
  242: 
--------------------------------------------------------------------------------
[0.01036 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 720] ASR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  235:     for (index, s) in enumerate(colecao, start=1):
  236:         str_result += s.__str__()
  237:         if (tam > 1 and index < tam):
  238:             str_result += ', '
- 239:     str_result += ''
+ 239:     str_result -= ''
  240:     return str_result
  241: 
  242: 
  243: 
--------------------------------------------------------------------------------
[0.01086 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 721] BCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  182:             ano=periodo_letivo.ano, periodo=periodo_letivo.periodo)
  183:         if sugestoes:
  184:             for s in sugestoes:
  185:                 if (s.codigo_turma == sugestao_turma.codigo_turma and s.componente == sugestao_turma.componente):
- 186:                     break
+ 186:                     continue
  187:                 if (sugestao_turma.local is not None and s.local == sugestao_turma.local):
  188:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
  189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
  190:                 if (sugestao_turma.docente is not None and s.docente == sugestao_turma.docente):
--------------------------------------------------------------------------------
[0.00971 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 722] BCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  529:     houve_choque = False
  530:     for v in vinculos:
  531:         if docente == v['docente']:
  532:             existe_docente = True
- 533:             break
+ 533:             continue
  534:     
  535:     if not existe_docente:
  536:         horarios_list = converte_desc_horario(horarios)
  537:         (choques_docente, houve_choque) = existe_choques_docente(docente, horarios_list, componente_id, codigo_turma)
--------------------------------------------------------------------------------
[0.01178 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 723] COD core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  106:         if form_sugestao.is_valid():
  107:             sugestao_turma = form_sugestao.save(commit=False)
  108:             carregar_dados(request, sugestao_turma, estrutura)
  109:             horarios_list = converte_desc_horario(sugestao_turma.descricao_horario)
- 110:             if (not (verificar_existencia(form_sugestao, sugestao_turma)) and \
+ 110:             if (verificar_existencia(form_sugestao, sugestao_turma) and \
  111:                 not (verificar_choques(form_sugestao, sugestao_turma, horarios_list))):
  112:                 sugestao_turma.save()
  113:                 vinculos_docente_salvar(sugestao_turma, vinculos)
  114:                 atualizar_horarios(sugestao_turma, horarios_list)
--------------------------------------------------------------------------------
[0.00985 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 724] COD core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  107:             sugestao_turma = form_sugestao.save(commit=False)
  108:             carregar_dados(request, sugestao_turma, estrutura)
  109:             horarios_list = converte_desc_horario(sugestao_turma.descricao_horario)
  110:             if (not (verificar_existencia(form_sugestao, sugestao_turma)) and \
- 111:                 not (verificar_choques(form_sugestao, sugestao_turma, horarios_list))):
+ 111:                 verificar_choques(form_sugestao, sugestao_turma, horarios_list)):
  112:                 sugestao_turma.save()
  113:                 vinculos_docente_salvar(sugestao_turma, vinculos)
  114:                 atualizar_horarios(sugestao_turma, horarios_list)
  115:                 messages.success(request, 'Sugestão de Turma cadastrada com sucesso.')
--------------------------------------------------------------------------------
[0.01049 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 725] COD core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  242: 
  243: 
  244: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
  245: def sugestao_editar(request, pk, estrutura, template_name='core/sugestao/editar.html'):sugestao = get_object_or_404(SugestaoTurma, pk=pk)
- 246:     if not (verificar_permissoes(request, sugestao, estrutura)):
+ 246:     if verificar_permissoes(request, sugestao, estrutura):
  247:         messages.error(request, 'Você não tem permissão de Editar esta Sugestão de Turma.')
  248:         return redirecionar(request)
  249:     form_sugestao = SugestaoTurmaForm((request.POST or None), instance=sugestao, estrutura=estrutura)
  250:     vinculos_docente = request.POST.get('vinculos_docente')
--------------------------------------------------------------------------------
[0.01186 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 726] COD core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  254:         vinculos = load_vinculos_docentes(sugestao)
  255:     if form_sugestao.is_valid():
  256:         sugestao_turma = form_sugestao.save(commit=False)
  257:         horarios_list = converte_desc_horario(sugestao_turma.descricao_horario)
- 258:         if not (verificar_choques(form_sugestao, sugestao_turma, horarios_list)):
+ 258:         if verificar_choques(form_sugestao, sugestao_turma, horarios_list):
  259:             sugestao_turma.save()
  260:             sugestao_turma.horarios.clear()
  261:             sugestao_turma.horarios.set(horarios_list)
  262:             vinculos_docente_salvar(sugestao_turma, vinculos)
--------------------------------------------------------------------------------
[0.01191 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 727] COD core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  270: 
  271: 
  272: @permission_required('core.delete_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
  273: def sugestao_deletar(request, pk, estrutura, template_name='core/sugestao/confirm_delete.html'):sugestao = get_object_or_404(SugestaoTurma, pk=pk)
- 274:     if not (verificar_permissoes(request, sugestao, estrutura)):
+ 274:     if verificar_permissoes(request, sugestao, estrutura):
  275:         messages.error(request, 'Você não tem permissão de Excluir esta Sugestão de Turma.')
  276:         return redirecionar(request)
  277:     if request.method == 'POST':
  278:         try:
--------------------------------------------------------------------------------
[0.01124 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 728] COD core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  286: 
  287: 
  288: @permission_required('core.delete_solicitacaoturma', login_url='/core/usuario/logar', raise_exception=True)
  289: def solicitacao_discente_deletar(request, pk, template_name='core/sugestao/solicitacao_confirm_delete.html'):solicitacao = get_object_or_404(SolicitacaoTurma, pk=pk)
- 290:     if not (tem_permissao(request, solicitacao)):
+ 290:     if tem_permissao(request, solicitacao):
  291:         messages.error(request, 'Você não tem permissão de Excluir esta Solicitacao de Turma.')
  292:         return redirecionar(request)
  293:     if request.method == 'POST':
  294:         solicitacao.delete()
--------------------------------------------------------------------------------
[0.01113 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 729] COD core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  344:     :param usuario: Usuário autenticado.
  345:     :param departamento: O departamento de interesse.
  346:     :return: True se o usuário for Chefe do Departamento.
  347:     '''
- 348:     if not (docente_existe(usuario)):
+ 348:     if docente_existe(usuario):
  349:         return False
  350:     
  351:     grupo_chefes = Group.objects.get(name='Chefes')
  352:     grupos = usuario.groups.all()
--------------------------------------------------------------------------------
[0.01108 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 730] COD core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  368:     :param usuario: Usuário autenticado.
  369:     :param curso: O curso de interesse.
  370:     :return: True se o usuário for Coordenador do Curso.
  371:     '''
- 372:     if not (docente_existe(usuario)):
+ 372:     if docente_existe(usuario):
  373:         return False
  374:     
  375:     grupo_chefes = Group.objects.get(name='Coordenadores')
  376:     grupos = usuario.groups.all()
--------------------------------------------------------------------------------
[0.01122 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 731] COD core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  405: 
  406: 
  407: def atualizar_solicitacao(request, pk):
  408:     usuario = request.user
- 409:     if not (discente_existe(usuario)):
+ 409:     if discente_existe(usuario):
  410:         messages.error(request, 'Não há um discente relacionado ao usuário.')
  411:         return redirecionar(request)
  412:     discente = usuario.discente
  413:     turma = SugestaoTurma.objects.get(pk=pk)
--------------------------------------------------------------------------------
[0.01122 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 732] COD core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  531:         if docente == v['docente']:
  532:             existe_docente = True
  533:             break
  534:     
- 535:     if not existe_docente:
+ 535:     if existe_docente:
  536:         horarios_list = converte_desc_horario(horarios)
  537:         (choques_docente, houve_choque) = existe_choques_docente(docente, horarios_list, componente_id, codigo_turma)
  538:         if not houve_choque:
  539:             vinculo = {'docente': docente, 'horarios': horarios, 'carga_horaria': carga_horaria}
--------------------------------------------------------------------------------
[0.02695 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 733] COD core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  534:     
  535:     if not existe_docente:
  536:         horarios_list = converte_desc_horario(horarios)
  537:         (choques_docente, houve_choque) = existe_choques_docente(docente, horarios_list, componente_id, codigo_turma)
- 538:         if not houve_choque:
+ 538:         if houve_choque:
  539:             vinculo = {'docente': docente, 'horarios': horarios, 'carga_horaria': carga_horaria}
  540:             vinculos.append(vinculo)
  541:             print(vinculo)
  542:         else:
--------------------------------------------------------------------------------
[0.01078 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 734] COD core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  612: 
  613: 
  614: def adicionar_vinculo_docente(sugestao, docente, carga_horaria, horarios):
  615:     if (docente is not None and sugestao is not None and \
- 616:         not (VinculoDocenteSugestao.objects.filter(sugestao=sugestao, docente=docente).exists())):
+ 616:         VinculoDocenteSugestao.objects.filter(sugestao=sugestao, docente=docente).exists()):
  617:         vinculo = VinculoDocenteSugestao(
  618:             docente=docente, sugestao=sugestao, carga_horaria=carga_horaria, descricao_horario=horarios)
  619:         vinculo.save()
  620:         horarios_docente = converte_desc_horario(horarios)
--------------------------------------------------------------------------------
[0.01130 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 735] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
   32:     semestres = atualiza_semestres(semestres)
   33:     ano_periodo_atual = get_periodo_ativo()
   34:     ano_periodo_prox = get_periodo_planejado()
   35:     ano_periodo = request.GET.getlist('ano_periodo')
-  36:     if (ano_periodo is None or ano_periodo == []):
+  36:     if not ((ano_periodo is None or ano_periodo == [])):
   37:         ano_periodo = ano_periodo_prox
   38:     elif ano_periodo_atual.is_same_as(ano_periodo[0]):
   39:         ano_periodo = ano_periodo_atual
   40:     else:
--------------------------------------------------------------------------------
[0.01015 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 736] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
   34:     ano_periodo_prox = get_periodo_planejado()
   35:     ano_periodo = request.GET.getlist('ano_periodo')
   36:     if (ano_periodo is None or ano_periodo == []):
   37:         ano_periodo = ano_periodo_prox
-  38:     elif ano_periodo_atual.is_same_as(ano_periodo[0]):
+  38:     elif not (ano_periodo_atual.is_same_as(ano_periodo[0])):
   39:         ano_periodo = ano_periodo_atual
   40:     else:
   41:         ano_periodo = ano_periodo_prox
   42:     
--------------------------------------------------------------------------------
[0.01058 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 737] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
   41:         ano_periodo = ano_periodo_prox
   42:     
   43:     docente_sel = request.GET.getlist('docente_sel')
   44:     docente_objDocenteNone
-  45:     if (docente_sel is not None and docente_sel != []):
+  45:     if not ((docente_sel is not None and docente_sel != [])):
   46:         docente_sel = docente_sel[0]
   47:         docente_obj = Docente.objects.filter(nome=docente_sel).first()
   48:     else:
   49:         docente_sel = ''
--------------------------------------------------------------------------------
[0.01053 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 738] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
   97: 
   98: def sugestao_incluir(request, estrutura, sugestao_manter_link):
   99:     periodo_letivo = get_periodo_planejado()
  100:     vinculos = []
- 101:     if request.method == 'POST':
+ 101:     if not (request.method == 'POST'):
  102:         form_sugestao = SugestaoTurmaForm(request.POST, estrutura=estrutura)
  103:         vinculos_docente = request.POST.get('vinculos_docente')
  104:         vinculos = carregar_vinculos(vinculos_docente)
  105:         
--------------------------------------------------------------------------------
[0.00974 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 739] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  102:         form_sugestao = SugestaoTurmaForm(request.POST, estrutura=estrutura)
  103:         vinculos_docente = request.POST.get('vinculos_docente')
  104:         vinculos = carregar_vinculos(vinculos_docente)
  105:         
- 106:         if form_sugestao.is_valid():
+ 106:         if not (form_sugestao.is_valid()):
  107:             sugestao_turma = form_sugestao.save(commit=False)
  108:             carregar_dados(request, sugestao_turma, estrutura)
  109:             horarios_list = converte_desc_horario(sugestao_turma.descricao_horario)
  110:             if (not (verificar_existencia(form_sugestao, sugestao_turma)) and \
--------------------------------------------------------------------------------
[0.01092 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 740] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  106:         if form_sugestao.is_valid():
  107:             sugestao_turma = form_sugestao.save(commit=False)
  108:             carregar_dados(request, sugestao_turma, estrutura)
  109:             horarios_list = converte_desc_horario(sugestao_turma.descricao_horario)
- 110:             if (not (verificar_existencia(form_sugestao, sugestao_turma)) and \
- 111:                 not (verificar_choques(form_sugestao, sugestao_turma, horarios_list))):
+ 110:             if not ((not (verificar_existencia(form_sugestao, sugestao_turma)) and \
+ 111:                 not (verificar_choques(form_sugestao, sugestao_turma, horarios_list)))):
  112:                 sugestao_turma.save()
  113:                 vinculos_docente_salvar(sugestao_turma, vinculos)
  114:                 atualizar_horarios(sugestao_turma, horarios_list)
  115:                 messages.success(request, 'Sugestão de Turma cadastrada com sucesso.')
--------------------------------------------------------------------------------
[0.01129 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 741] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  140:     sugestao_turma.tipo = 'REGULAR'
  141:     sugestao_turma.ano = periodo_letivo.ano
  142:     sugestao_turma.periodo = periodo_letivo.periodo
  143:     sugestao_turma.campus_turma = estrutura.curso.centro.sigla
- 144:     if sugestao_turma.local:
+ 144:     if not (sugestao_turma.local):
  145:         sugestao_turma.campus_turma = sugestao_turma.local.campus
  146:     sugestao_turma.criador = request.user
  147:     sugestao_turma.total_solicitacoes = 0
  148:     
--------------------------------------------------------------------------------
[0.01202 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 742] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  157:         codigo_turma=sugestao_turma.codigo_turma, 
  158:         componente=sugestao_turma.componente, 
  159:         ano=sugestao_turma.ano, 
  160:         periodo=sugestao_turma.periodo).values('codigo_turma')
- 161:     if sugestoes.exists():
+ 161:     if not (sugestoes.exists()):
  162:         sugestoes = SugestaoTurma.objects.filter(
  163:             componente=sugestao_turma.componente, 
  164:             ano=sugestao_turma.ano, 
  165:             periodo=sugestao_turma.periodo).values_list('codigo_turma')
--------------------------------------------------------------------------------
[0.01147 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 743] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  179:     periodo_letivo = get_periodo_planejado()
  180:     for horario in horarios_list:
  181:         sugestoes = horario.sugestoes.all().filter(
  182:             ano=periodo_letivo.ano, periodo=periodo_letivo.periodo)
- 183:         if sugestoes:
+ 183:         if not sugestoes:
  184:             for s in sugestoes:
  185:                 if (s.codigo_turma == sugestao_turma.codigo_turma and s.componente == sugestao_turma.componente):
  186:                     break
  187:                 if (sugestao_turma.local is not None and s.local == sugestao_turma.local):
--------------------------------------------------------------------------------
[0.01172 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 744] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  181:         sugestoes = horario.sugestoes.all().filter(
  182:             ano=periodo_letivo.ano, periodo=periodo_letivo.periodo)
  183:         if sugestoes:
  184:             for s in sugestoes:
- 185:                 if (s.codigo_turma == sugestao_turma.codigo_turma and s.componente == sugestao_turma.componente):
+ 185:                 if not ((s.codigo_turma == sugestao_turma.codigo_turma and s.componente == sugestao_turma.componente)):
  186:                     break
  187:                 if (sugestao_turma.local is not None and s.local == sugestao_turma.local):
  188:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
  189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
--------------------------------------------------------------------------------
[0.01120 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 745] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  183:         if sugestoes:
  184:             for s in sugestoes:
  185:                 if (s.codigo_turma == sugestao_turma.codigo_turma and s.componente == sugestao_turma.componente):
  186:                     break
- 187:                 if (sugestao_turma.local is not None and s.local == sugestao_turma.local):
+ 187:                 if not ((sugestao_turma.local is not None and s.local == sugestao_turma.local)):
  188:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
  189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
  190:                 if (sugestao_turma.docente is not None and s.docente == sugestao_turma.docente):
  191:                     
--------------------------------------------------------------------------------
[0.01221 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 746] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  186:                     break
  187:                 if (sugestao_turma.local is not None and s.local == sugestao_turma.local):
  188:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
  189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
- 190:                 if (sugestao_turma.docente is not None and s.docente == sugestao_turma.docente):
+ 190:                 if not ((sugestao_turma.docente is not None and s.docente == sugestao_turma.docente)):
  191:                     
  192:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
  193:                     choque_docente.append((horario.dia + horario.turno) + horario.ordem)
  194:                 
--------------------------------------------------------------------------------
[0.01132 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 747] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  193:                     choque_docente.append((horario.dia + horario.turno) + horario.ordem)
  194:                 
  195:                 verificar_choques_semestre(form_sugestao, horario, s, sugestao_turma, choques_componentes_semestre, choques_semestres)
  196:     
- 197:     if (choques_horarios or choque_docente or choques_componentes or choques_semestres):
+ 197:     if not ((choques_horarios or choque_docente or choques_componentes or choques_semestres)):
  198:         if choques_componentes:
  199:             form_sugestao.add_error('componente', 
  200:                 ('Choque com os Componentes Curriculares: ' + \
  201:                 criar_string(list(choques_componentes))) + '.')
--------------------------------------------------------------------------------
[0.01307 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 748] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  194:                 
  195:                 verificar_choques_semestre(form_sugestao, horario, s, sugestao_turma, choques_componentes_semestre, choques_semestres)
  196:     
  197:     if (choques_horarios or choque_docente or choques_componentes or choques_semestres):
- 198:         if choques_componentes:
+ 198:         if not choques_componentes:
  199:             form_sugestao.add_error('componente', 
  200:                 ('Choque com os Componentes Curriculares: ' + \
  201:                 criar_string(list(choques_componentes))) + '.')
  202:         if choques_horarios:
--------------------------------------------------------------------------------
[0.01047 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 749] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  198:         if choques_componentes:
  199:             form_sugestao.add_error('componente', 
  200:                 ('Choque com os Componentes Curriculares: ' + \
  201:                 criar_string(list(choques_componentes))) + '.')
- 202:         if choques_horarios:
+ 202:         if not choques_horarios:
  203:             form_sugestao.add_error('local', 
  204:                 ('Sala com choque nos horários: ' + \
  205:                 criar_string(choques_horarios)) + '.')
  206:         if choque_docente:
--------------------------------------------------------------------------------
[0.01096 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 750] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  202:         if choques_horarios:
  203:             form_sugestao.add_error('local', 
  204:                 ('Sala com choque nos horários: ' + \
  205:                 criar_string(choques_horarios)) + '.')
- 206:         if choque_docente:
+ 206:         if not choque_docente:
  207:             form_sugestao.add_error('docente', 
  208:                 ('Docente com choque nos horários: ' + \
  209:                 criar_string(choque_docente)) + '.')
  210:         if choques_semestres:
--------------------------------------------------------------------------------
[0.01360 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 751] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  206:         if choque_docente:
  207:             form_sugestao.add_error('docente', 
  208:                 ('Docente com choque nos horários: ' + \
  209:                 criar_string(choque_docente)) + '.')
- 210:         if choques_semestres:
+ 210:         if not choques_semestres:
  211:             form_sugestao.add_error('componente', 
  212:                 ('Choque com os Componentes Curriculares do mesmo semestre: ' + \
  213:                 criar_string(list(choques_componentes_semestre))) + '.')
  214:             form_sugestao.add_error('descricao_horario', ('Choque nos horários: ' + \
--------------------------------------------------------------------------------
[0.01123 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 752] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  218: 
  219: 
  220: def verificar_choques_semestre(form_sugestao, horario, sugestao_existente, nova_sugestao, choques_componentes_semestre, choques_semestres):
  221:     checked = form_sugestao.cleaned_data['checked']
- 222:     if (sugestao_existente.semestre == nova_sugestao.semestre and \
+ 222:     if not ((sugestao_existente.semestre == nova_sugestao.semestre and \
  223:         sugestao_existente.curso == nova_sugestao.curso and \
  224:         (nova_sugestao.semestre != 0 or \
- 225:         (nova_sugestao.semestre == 0 and checked))):
+ 225:         (nova_sugestao.semestre == 0 and checked)))):
  226:         choques_componentes_semestre.add(
  227:             (str(sugestao_existente.componente.codigo) + ' - ') + \
  228:             sugestao_existente.componente.nome)
  229:         choques_semestres.append((horario.dia + horario.turno) + horario.ordem)
--------------------------------------------------------------------------------
[0.01231 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 753] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  233:     str_result = ''
  234:     tam = len(colecao)
  235:     for (index, s) in enumerate(colecao, start=1):
  236:         str_result += s.__str__()
- 237:         if (tam > 1 and index < tam):
+ 237:         if not ((tam > 1 and index < tam)):
  238:             str_result += ', '
  239:     str_result += ''
  240:     return str_result
  241: 
--------------------------------------------------------------------------------
[0.01176 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 754] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  242: 
  243: 
  244: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
  245: def sugestao_editar(request, pk, estrutura, template_name='core/sugestao/editar.html'):sugestao = get_object_or_404(SugestaoTurma, pk=pk)
- 246:     if not (verificar_permissoes(request, sugestao, estrutura)):
+ 246:     if not ((not (verificar_permissoes(request, sugestao, estrutura)))):
  247:         messages.error(request, 'Você não tem permissão de Editar esta Sugestão de Turma.')
  248:         return redirecionar(request)
  249:     form_sugestao = SugestaoTurmaForm((request.POST or None), instance=sugestao, estrutura=estrutura)
  250:     vinculos_docente = request.POST.get('vinculos_docente')
--------------------------------------------------------------------------------
[0.01278 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 755] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  247:         messages.error(request, 'Você não tem permissão de Editar esta Sugestão de Turma.')
  248:         return redirecionar(request)
  249:     form_sugestao = SugestaoTurmaForm((request.POST or None), instance=sugestao, estrutura=estrutura)
  250:     vinculos_docente = request.POST.get('vinculos_docente')
- 251:     if vinculos_docente is not None:
+ 251:     if not (vinculos_docente is not None):
  252:         vinculos = carregar_vinculos(vinculos_docente)
  253:     else:
  254:         vinculos = load_vinculos_docentes(sugestao)
  255:     if form_sugestao.is_valid():
--------------------------------------------------------------------------------
[0.01111 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 756] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  251:     if vinculos_docente is not None:
  252:         vinculos = carregar_vinculos(vinculos_docente)
  253:     else:
  254:         vinculos = load_vinculos_docentes(sugestao)
- 255:     if form_sugestao.is_valid():
+ 255:     if not (form_sugestao.is_valid()):
  256:         sugestao_turma = form_sugestao.save(commit=False)
  257:         horarios_list = converte_desc_horario(sugestao_turma.descricao_horario)
  258:         if not (verificar_choques(form_sugestao, sugestao_turma, horarios_list)):
  259:             sugestao_turma.save()
--------------------------------------------------------------------------------
[0.01054 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 757] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  254:         vinculos = load_vinculos_docentes(sugestao)
  255:     if form_sugestao.is_valid():
  256:         sugestao_turma = form_sugestao.save(commit=False)
  257:         horarios_list = converte_desc_horario(sugestao_turma.descricao_horario)
- 258:         if not (verificar_choques(form_sugestao, sugestao_turma, horarios_list)):
+ 258:         if not ((not (verificar_choques(form_sugestao, sugestao_turma, horarios_list)))):
  259:             sugestao_turma.save()
  260:             sugestao_turma.horarios.clear()
  261:             sugestao_turma.horarios.set(horarios_list)
  262:             vinculos_docente_salvar(sugestao_turma, vinculos)
--------------------------------------------------------------------------------
[0.01068 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 758] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  270: 
  271: 
  272: @permission_required('core.delete_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
  273: def sugestao_deletar(request, pk, estrutura, template_name='core/sugestao/confirm_delete.html'):sugestao = get_object_or_404(SugestaoTurma, pk=pk)
- 274:     if not (verificar_permissoes(request, sugestao, estrutura)):
+ 274:     if not ((not (verificar_permissoes(request, sugestao, estrutura)))):
  275:         messages.error(request, 'Você não tem permissão de Excluir esta Sugestão de Turma.')
  276:         return redirecionar(request)
  277:     if request.method == 'POST':
  278:         try:
--------------------------------------------------------------------------------
[0.01164 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 759] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  273: def sugestao_deletar(request, pk, estrutura, template_name='core/sugestao/confirm_delete.html'):sugestao = get_object_or_404(SugestaoTurma, pk=pk)
  274:     if not (verificar_permissoes(request, sugestao, estrutura)):
  275:         messages.error(request, 'Você não tem permissão de Excluir esta Sugestão de Turma.')
  276:         return redirecionar(request)
- 277:     if request.method == 'POST':
+ 277:     if not (request.method == 'POST'):
  278:         try:
  279:             sugestao.delete()
  280:             messages.success(request, 'Sugestão de Turma excluída com sucesso.')
  281:         except ProtectedError as err:
--------------------------------------------------------------------------------
[0.01124 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 760] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  286: 
  287: 
  288: @permission_required('core.delete_solicitacaoturma', login_url='/core/usuario/logar', raise_exception=True)
  289: def solicitacao_discente_deletar(request, pk, template_name='core/sugestao/solicitacao_confirm_delete.html'):solicitacao = get_object_or_404(SolicitacaoTurma, pk=pk)
- 290:     if not (tem_permissao(request, solicitacao)):
+ 290:     if not ((not (tem_permissao(request, solicitacao)))):
  291:         messages.error(request, 'Você não tem permissão de Excluir esta Solicitacao de Turma.')
  292:         return redirecionar(request)
  293:     if request.method == 'POST':
  294:         solicitacao.delete()
--------------------------------------------------------------------------------
[0.01066 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 761] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  289: def solicitacao_discente_deletar(request, pk, template_name='core/sugestao/solicitacao_confirm_delete.html'):solicitacao = get_object_or_404(SolicitacaoTurma, pk=pk)
  290:     if not (tem_permissao(request, solicitacao)):
  291:         messages.error(request, 'Você não tem permissão de Excluir esta Solicitacao de Turma.')
  292:         return redirecionar(request)
- 293:     if request.method == 'POST':
+ 293:     if not (request.method == 'POST'):
  294:         solicitacao.delete()
  295:         messages.success(request, 'Solicitação de Turma excluída com sucesso.')
  296:         return redirecionar(request)
  297:     return render(request, template_name, {'object': solicitacao})
--------------------------------------------------------------------------------
[0.01168 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 762] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  299: 
  300: def redirecionar(request):
  301:     url = request.GET.get('next', '/')
  302:     parsed_uri = urlparse(url)
- 303:     if (parsed_uri.netloc == '' or parsed_uri.netloc in DOMAINS_WHITELIST):
+ 303:     if not ((parsed_uri.netloc == '' or parsed_uri.netloc in DOMAINS_WHITELIST)):
  304:         return HttpResponseRedirect(url)
  305:     return HttpResponseRedirect('/core')
  306: 
  307: 
--------------------------------------------------------------------------------
[0.01158 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 763] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  299: 
  300: def redirecionar(request):
  301:     url = request.GET.get('next', '/')
  302:     parsed_uri = urlparse(url)
- 303:     if (parsed_uri.netloc == '' or parsed_uri.netloc in DOMAINS_WHITELIST):
+ 303:     if (parsed_uri.netloc == '' or parsed_uri.netloc not in DOMAINS_WHITELIST):
  304:         return HttpResponseRedirect(url)
  305:     return HttpResponseRedirect('/core')
  306: 
  307: 
--------------------------------------------------------------------------------
[0.01030 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 764] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  308: def verificar_permissoes(request, sugestao, estrutura):
  309:     
  310:     usuario = request.user
  311:     departamento = sugestao.componente.departamento
- 312:     if is_criador(usuario, sugestao):
+ 312:     if not (is_criador(usuario, sugestao)):
  313:         return True
  314:     
  315:     if is_chefe(usuario, departamento):
  316:         return True
--------------------------------------------------------------------------------
[0.01030 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 765] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  311:     departamento = sugestao.componente.departamento
  312:     if is_criador(usuario, sugestao):
  313:         return True
  314:     
- 315:     if is_chefe(usuario, departamento):
+ 315:     if not (is_chefe(usuario, departamento)):
  316:         return True
  317:     
  318:     if is_coordenador(usuario, estrutura.curso):
  319:         return True
--------------------------------------------------------------------------------
[0.01025 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 766] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  314:     
  315:     if is_chefe(usuario, departamento):
  316:         return True
  317:     
- 318:     if is_coordenador(usuario, estrutura.curso):
+ 318:     if not (is_coordenador(usuario, estrutura.curso)):
  319:         return True
  320:     return False
  321: 
  322: 
--------------------------------------------------------------------------------
[0.01149 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 767] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  322: 
  323: def tem_permissao(request, solicitacao):
  324:     
  325:     usuario = request.user
- 326:     if usuario == solicitacao.usuario:
+ 326:     if not (usuario == solicitacao.usuario):
  327:         return True
  328:     return False
  329: 
  330: 
--------------------------------------------------------------------------------
[0.01134 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 768] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  344:     :param usuario: Usuário autenticado.
  345:     :param departamento: O departamento de interesse.
  346:     :return: True se o usuário for Chefe do Departamento.
  347:     '''
- 348:     if not (docente_existe(usuario)):
+ 348:     if not ((not (docente_existe(usuario)))):
  349:         return False
  350:     
  351:     grupo_chefes = Group.objects.get(name='Chefes')
  352:     grupos = usuario.groups.all()
--------------------------------------------------------------------------------
[0.01139 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 769] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  358:     funcao = get_funcao_by_siape(siape)
  359:     id_unidade_designacao = funcao[0].id_unidade_designacao
  360:     test_chefe2 = departamento.id_unidade == id_unidade_designacao
  361:     
- 362:     return (grupo_chefes in grupos and test_chefe1 and test_chefe2)
+ 362:     return (grupo_chefes not in grupos and test_chefe1 and test_chefe2)
  363: 
  364: 
  365: def is_coordenador(usuario, curso):
  366:     '''
--------------------------------------------------------------------------------
[0.01179 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 770] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  368:     :param usuario: Usuário autenticado.
  369:     :param curso: O curso de interesse.
  370:     :return: True se o usuário for Coordenador do Curso.
  371:     '''
- 372:     if not (docente_existe(usuario)):
+ 372:     if not ((not (docente_existe(usuario)))):
  373:         return False
  374:     
  375:     grupo_chefes = Group.objects.get(name='Coordenadores')
  376:     grupos = usuario.groups.all()
--------------------------------------------------------------------------------
[0.01114 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 771] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  376:     grupos = usuario.groups.all()
  377:     
  378:     siape = usuario.docente.siape
  379:     test_coordenador1 = False
- 380:     if curso.coordenador:
+ 380:     if not (curso.coordenador):
  381:         test_coordenador1 = curso.coordenador.siape == siape
  382:     
  383:     funcoes = get_funcao_by_siape(siape)
  384:     test_coordenador2 = False
--------------------------------------------------------------------------------
[0.01016 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 772] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  387:         
  388:         
  389:         test_coordenador2 = (test_coordenador2 or 'COORDENADOR DE CURSO' == funcao.atividade)
  390:     
- 391:     return (grupo_chefes in grupos and (test_coordenador1 and test_coordenador2))
+ 391:     return (grupo_chefes not in grupos and (test_coordenador1 and test_coordenador2))
  392: 
  393: 
  394: def docente_existe(usuario):
  395:     '''
--------------------------------------------------------------------------------
[0.01140 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 773] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  405: 
  406: 
  407: def atualizar_solicitacao(request, pk):
  408:     usuario = request.user
- 409:     if not (discente_existe(usuario)):
+ 409:     if not ((not (discente_existe(usuario)))):
  410:         messages.error(request, 'Não há um discente relacionado ao usuário.')
  411:         return redirecionar(request)
  412:     discente = usuario.discente
  413:     turma = SugestaoTurma.objects.get(pk=pk)
--------------------------------------------------------------------------------
[0.01091 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 774] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  414:     
  415:     (choques_componentes, choques_horarios, houve_choques) = \
  416:         solicitacao_verificar_choques(discente, turma)
  417:     
- 418:     if houve_choques:
+ 418:     if not houve_choques:
  419:         messages.error(request, 
  420:             ((((('A turma ' + str(turma)) + ' tem choque com: ') + criar_string(list(choques_componentes))) + \
  421:             ', nos horários: ') + criar_string(list(choques_horarios))) + '.')
  422:         return redirecionar(request)
--------------------------------------------------------------------------------
[0.01168 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 775] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  422:         return redirecionar(request)
  423:     
  424:     (resultado, created) = solicitacao_incluir(discente, turma)
  425:     
- 426:     if created:
+ 426:     if not created:
  427:         messages.success(request, ('Solicitação de Interesse na Turma ' + \
  428:             str(resultado.turma)) + ' cadastrada com sucesso.')
  429:     else:
  430:         messages.error(request, ('Já existe Solicitação de Interesse na Turma ' + \
--------------------------------------------------------------------------------
[0.01044 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 776] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  487:     em cada horário.
  488:     '''
  489:     tt = []
  490:     n = 7
- 491:     if turno == 'N':
+ 491:     if not (turno == 'N'):
  492:         n = 5
  493:     
  494:     for i in range(1, n):
  495:         horarios = Horario.objects.filter(turno=turno, ordem=i).order_by('dia')
--------------------------------------------------------------------------------
[0.01123 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 777] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  497:         for h in horarios:
  498:             turmas_por_horario = []
  499:             for t in turmas:
  500:                 horarios_solicitacao = list(t.turma.horarios.all())
- 501:                 if h in horarios_solicitacao:
+ 501:                 if not (h in horarios_solicitacao):
  502:                     turmas_por_horario.append(t.turma)
  503:             th = TurmaHorario(h, turmas_por_horario)
  504:             turmas_horario.append(th)
  505:         tt.append(turmas_horario)
--------------------------------------------------------------------------------
[0.01043 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 778] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  497:         for h in horarios:
  498:             turmas_por_horario = []
  499:             for t in turmas:
  500:                 horarios_solicitacao = list(t.turma.horarios.all())
- 501:                 if h in horarios_solicitacao:
+ 501:                 if h not in horarios_solicitacao:
  502:                     turmas_por_horario.append(t.turma)
  503:             th = TurmaHorario(h, turmas_por_horario)
  504:             turmas_horario.append(th)
  505:         tt.append(turmas_horario)
--------------------------------------------------------------------------------
[0.01083 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 779] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  527:     docente = Docente.objects.get(pk=docente_id)
  528:     existe_docente = False
  529:     houve_choque = False
  530:     for v in vinculos:
- 531:         if docente == v['docente']:
+ 531:         if not (docente == v['docente']):
  532:             existe_docente = True
  533:             break
  534:     
  535:     if not existe_docente:
--------------------------------------------------------------------------------
[0.01155 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 780] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  531:         if docente == v['docente']:
  532:             existe_docente = True
  533:             break
  534:     
- 535:     if not existe_docente:
+ 535:     if not ((not existe_docente)):
  536:         horarios_list = converte_desc_horario(horarios)
  537:         (choques_docente, houve_choque) = existe_choques_docente(docente, horarios_list, componente_id, codigo_turma)
  538:         if not houve_choque:
  539:             vinculo = {'docente': docente, 'horarios': horarios, 'carga_horaria': carga_horaria}
--------------------------------------------------------------------------------
[0.01134 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 781] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  534:     
  535:     if not existe_docente:
  536:         horarios_list = converte_desc_horario(horarios)
  537:         (choques_docente, houve_choque) = existe_choques_docente(docente, horarios_list, componente_id, codigo_turma)
- 538:         if not houve_choque:
+ 538:         if not ((not houve_choque)):
  539:             vinculo = {'docente': docente, 'horarios': horarios, 'carga_horaria': carga_horaria}
  540:             vinculos.append(vinculo)
  541:             print(vinculo)
  542:         else:
--------------------------------------------------------------------------------
[0.01007 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 782] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  566: 
  567: 
  568: def carregar_vinculos(vinculos_docente):
  569:     vinculos = []
- 570:     if (vinculos_docente is not None and vinculos_docente != ''):
+ 570:     if not ((vinculos_docente is not None and vinculos_docente != '')):
  571:         vds = json.loads(vinculos_docente)
  572:         for v in vds['vinculos']:
  573:             docente_id = v['docente']
  574:             horarios = v['horarios']
--------------------------------------------------------------------------------
[0.01182 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 783] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  602:         
  603:         for ds in docente_sugestoes:
  604:             vinculos_existentes = ds.vinculodocentesugestao_set.all()
  605:             existe = vinculos_existentes.filter(docente__id=docente.id)
- 606:             if existe:
+ 606:             if not existe:
  607:                 choque_docente.append((horario.dia + horario.turno) + horario.ordem)
  608:     
  609:     if choque_docente:
  610:         return (choque_docente, True)
--------------------------------------------------------------------------------
[0.01017 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 784] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  605:             existe = vinculos_existentes.filter(docente__id=docente.id)
  606:             if existe:
  607:                 choque_docente.append((horario.dia + horario.turno) + horario.ordem)
  608:     
- 609:     if choque_docente:
+ 609:     if not choque_docente:
  610:         return (choque_docente, True)
  611:     return (None, False)
  612: 
  613: 
--------------------------------------------------------------------------------
[0.00982 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 785] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  611:     return (None, False)
  612: 
  613: 
  614: def adicionar_vinculo_docente(sugestao, docente, carga_horaria, horarios):
- 615:     if (docente is not None and sugestao is not None and \
- 616:         not (VinculoDocenteSugestao.objects.filter(sugestao=sugestao, docente=docente).exists())):
+ 615:     if not ((docente is not None and sugestao is not None and \
+ 616:         not (VinculoDocenteSugestao.objects.filter(sugestao=sugestao, docente=docente).exists()))):
  617:         vinculo = VinculoDocenteSugestao(
  618:             docente=docente, sugestao=sugestao, carga_horaria=carga_horaria, descricao_horario=horarios)
  619:         vinculo.save()
  620:         horarios_docente = converte_desc_horario(horarios)
--------------------------------------------------------------------------------
[0.01351 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 786] COI core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  625:     for vinculo in vinculos:
  626:         adicionar_vinculo_docente(sugestao, vinculo['docente'], vinculo['carga_horaria'], vinculo['horarios'])
  627: 
  628: def remover_vinculo_docente(sugestao, docente):
- 629:     if (docente is not None and sugestao is not None and \
- 630:         VinculoDocenteSugestao.objects.filter(sugestao__id=sugestao, docente__id=docente).exists()):
+ 629:     if not ((docente is not None and sugestao is not None and \
+ 630:         VinculoDocenteSugestao.objects.filter(sugestao__id=sugestao, docente__id=docente).exists())):
  631:         vinculo = VinculoDocenteSugestao.objects.get(
  632:             docente__id=docente, sugestao__id=sugestao)
  633:         vinculo.delete()
--------------------------------------------------------------------------------
[0.00965 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 787] DDL core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  240:     return str_result
  241: 
  242: 
  243: 
- 244: @permission_required('core.change_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 245: def sugestao_editar(request, pk, estrutura, template_name='core/sugestao/editar.html'):sugestao = get_object_or_404(SugestaoTurma, pk=pk)
+ 244: def sugestao_editar(request, pk, estrutura, template_name='core/sugestao/editar.html'):
+ 245:     sugestao = get_object_or_404(SugestaoTurma, pk=pk)
  246:     if not (verificar_permissoes(request, sugestao, estrutura)):
  247:         messages.error(request, 'Você não tem permissão de Editar esta Sugestão de Turma.')
  248:         return redirecionar(request)
  249:     form_sugestao = SugestaoTurmaForm((request.POST or None), instance=sugestao, estrutura=estrutura)
--------------------------------------------------------------------------------
[0.01017 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 788] DDL core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  268:         {'form': form_sugestao, 'vinculos': vinculos})
  269: 
  270: 
  271: 
- 272: @permission_required('core.delete_sugestaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 273: def sugestao_deletar(request, pk, estrutura, template_name='core/sugestao/confirm_delete.html'):sugestao = get_object_or_404(SugestaoTurma, pk=pk)
+ 272: def sugestao_deletar(request, pk, estrutura, template_name='core/sugestao/confirm_delete.html'):
+ 273:     sugestao = get_object_or_404(SugestaoTurma, pk=pk)
  274:     if not (verificar_permissoes(request, sugestao, estrutura)):
  275:         messages.error(request, 'Você não tem permissão de Excluir esta Sugestão de Turma.')
  276:         return redirecionar(request)
  277:     if request.method == 'POST':
--------------------------------------------------------------------------------
[0.01071 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 789] DDL core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  284:     return render(request, template_name, {'object': sugestao})
  285: 
  286: 
  287: 
- 288: @permission_required('core.delete_solicitacaoturma', login_url='/core/usuario/logar', raise_exception=True)
- 289: def solicitacao_discente_deletar(request, pk, template_name='core/sugestao/solicitacao_confirm_delete.html'):solicitacao = get_object_or_404(SolicitacaoTurma, pk=pk)
+ 288: def solicitacao_discente_deletar(request, pk, template_name='core/sugestao/solicitacao_confirm_delete.html'):
+ 289:     solicitacao = get_object_or_404(SolicitacaoTurma, pk=pk)
  290:     if not (tem_permissao(request, solicitacao)):
  291:         messages.error(request, 'Você não tem permissão de Excluir esta Solicitacao de Turma.')
  292:         return redirecionar(request)
  293:     if request.method == 'POST':
--------------------------------------------------------------------------------
[0.00981 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 790] EHD core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  278:         try:
  279:             sugestao.delete()
  280:             messages.success(request, 'Sugestão de Turma excluída com sucesso.')
  281:         except ProtectedError as err:
- 282:             messages.error(request, 'Sugestão de Turma não pode ser excluída. Erro {0}'.format(err))
+ 282:             raise
  283:         return redirecionar(request)
  284:     return render(request, template_name, {'object': sugestao})
  285: 
  286: 
--------------------------------------------------------------------------------
[0.01741 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 791] EHD core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  400:     try:
  401:         docente = usuario.docente
  402:         return docente is not None
  403:     except ObjectDoesNotExist:
- 404:         return False
+ 404:         raise
  405: 
  406: 
  407: def atualizar_solicitacao(request, pk):
  408:     usuario = request.user
--------------------------------------------------------------------------------
[0.01190 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 792] EHD core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  442:     try:
  443:         discente = usuario.discente
  444:         return discente is not None
  445:     except ObjectDoesNotExist:
- 446:         return False
+ 446:         raise
  447: 
  448: 
  449: def discente_grade_horarios(discente, ano, periodo):
  450:     solicitacoes = get_solicitacoes(discente, ano, periodo)
--------------------------------------------------------------------------------
[0.01089 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 793] EXS core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  278:         try:
  279:             sugestao.delete()
  280:             messages.success(request, 'Sugestão de Turma excluída com sucesso.')
  281:         except ProtectedError as err:
- 282:             messages.error(request, 'Sugestão de Turma não pode ser excluída. Erro {0}'.format(err))
+ 282:             pass
  283:         return redirecionar(request)
  284:     return render(request, template_name, {'object': sugestao})
  285: 
  286: 
--------------------------------------------------------------------------------
[0.01196 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 794] EXS core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  400:     try:
  401:         docente = usuario.docente
  402:         return docente is not None
  403:     except ObjectDoesNotExist:
- 404:         return False
+ 404:         pass
  405: 
  406: 
  407: def atualizar_solicitacao(request, pk):
  408:     usuario = request.user
--------------------------------------------------------------------------------
[0.01034 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 795] EXS core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  442:     try:
  443:         discente = usuario.discente
  444:         return discente is not None
  445:     except ObjectDoesNotExist:
- 446:         return False
+ 446:         pass
  447: 
  448: 
  449: def discente_grade_horarios(discente, ano, periodo):
  450:     solicitacoes = get_solicitacoes(discente, ano, periodo)
--------------------------------------------------------------------------------
[0.00939 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 796] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
   32:     semestres = atualiza_semestres(semestres)
   33:     ano_periodo_atual = get_periodo_ativo()
   34:     ano_periodo_prox = get_periodo_planejado()
   35:     ano_periodo = request.GET.getlist('ano_periodo')
-  36:     if (ano_periodo is None or ano_periodo == []):
+  36:     if (ano_periodo is None and ano_periodo == []):
   37:         ano_periodo = ano_periodo_prox
   38:     elif ano_periodo_atual.is_same_as(ano_periodo[0]):
   39:         ano_periodo = ano_periodo_atual
   40:     else:
--------------------------------------------------------------------------------
[0.01013 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 797] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
   41:         ano_periodo = ano_periodo_prox
   42:     
   43:     docente_sel = request.GET.getlist('docente_sel')
   44:     docente_objDocenteNone
-  45:     if (docente_sel is not None and docente_sel != []):
+  45:     if (docente_sel is not None or docente_sel != []):
   46:         docente_sel = docente_sel[0]
   47:         docente_obj = Docente.objects.filter(nome=docente_sel).first()
   48:     else:
   49:         docente_sel = ''
--------------------------------------------------------------------------------
[0.01256 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 798] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  106:         if form_sugestao.is_valid():
  107:             sugestao_turma = form_sugestao.save(commit=False)
  108:             carregar_dados(request, sugestao_turma, estrutura)
  109:             horarios_list = converte_desc_horario(sugestao_turma.descricao_horario)
- 110:             if (not (verificar_existencia(form_sugestao, sugestao_turma)) and \
+ 110:             if (not (verificar_existencia(form_sugestao, sugestao_turma)) or \
  111:                 not (verificar_choques(form_sugestao, sugestao_turma, horarios_list))):
  112:                 sugestao_turma.save()
  113:                 vinculos_docente_salvar(sugestao_turma, vinculos)
  114:                 atualizar_horarios(sugestao_turma, horarios_list)
--------------------------------------------------------------------------------
[0.01014 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 799] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  181:         sugestoes = horario.sugestoes.all().filter(
  182:             ano=periodo_letivo.ano, periodo=periodo_letivo.periodo)
  183:         if sugestoes:
  184:             for s in sugestoes:
- 185:                 if (s.codigo_turma == sugestao_turma.codigo_turma and s.componente == sugestao_turma.componente):
+ 185:                 if (s.codigo_turma == sugestao_turma.codigo_turma or s.componente == sugestao_turma.componente):
  186:                     break
  187:                 if (sugestao_turma.local is not None and s.local == sugestao_turma.local):
  188:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
  189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
--------------------------------------------------------------------------------
[0.01021 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 800] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  183:         if sugestoes:
  184:             for s in sugestoes:
  185:                 if (s.codigo_turma == sugestao_turma.codigo_turma and s.componente == sugestao_turma.componente):
  186:                     break
- 187:                 if (sugestao_turma.local is not None and s.local == sugestao_turma.local):
+ 187:                 if (sugestao_turma.local is not None or s.local == sugestao_turma.local):
  188:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
  189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
  190:                 if (sugestao_turma.docente is not None and s.docente == sugestao_turma.docente):
  191:                     
--------------------------------------------------------------------------------
[0.01147 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 801] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  186:                     break
  187:                 if (sugestao_turma.local is not None and s.local == sugestao_turma.local):
  188:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
  189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
- 190:                 if (sugestao_turma.docente is not None and s.docente == sugestao_turma.docente):
+ 190:                 if (sugestao_turma.docente is not None or s.docente == sugestao_turma.docente):
  191:                     
  192:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
  193:                     choque_docente.append((horario.dia + horario.turno) + horario.ordem)
  194:                 
--------------------------------------------------------------------------------
[0.00969 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 802] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  193:                     choque_docente.append((horario.dia + horario.turno) + horario.ordem)
  194:                 
  195:                 verificar_choques_semestre(form_sugestao, horario, s, sugestao_turma, choques_componentes_semestre, choques_semestres)
  196:     
- 197:     if (choques_horarios or choque_docente or choques_componentes or choques_semestres):
+ 197:     if (choques_horarios and choque_docente and choques_componentes and choques_semestres):
  198:         if choques_componentes:
  199:             form_sugestao.add_error('componente', 
  200:                 ('Choque com os Componentes Curriculares: ' + \
  201:                 criar_string(list(choques_componentes))) + '.')
--------------------------------------------------------------------------------
[0.00896 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 803] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  218: 
  219: 
  220: def verificar_choques_semestre(form_sugestao, horario, sugestao_existente, nova_sugestao, choques_componentes_semestre, choques_semestres):
  221:     checked = form_sugestao.cleaned_data['checked']
- 222:     if (sugestao_existente.semestre == nova_sugestao.semestre and \
- 223:         sugestao_existente.curso == nova_sugestao.curso and \
+ 222:     if (sugestao_existente.semestre == nova_sugestao.semestre or \
+ 223:         sugestao_existente.curso == nova_sugestao.curso or \
  224:         (nova_sugestao.semestre != 0 or \
  225:         (nova_sugestao.semestre == 0 and checked))):
  226:         choques_componentes_semestre.add(
  227:             (str(sugestao_existente.componente.codigo) + ' - ') + \
--------------------------------------------------------------------------------
[0.00951 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 804] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  220: def verificar_choques_semestre(form_sugestao, horario, sugestao_existente, nova_sugestao, choques_componentes_semestre, choques_semestres):
  221:     checked = form_sugestao.cleaned_data['checked']
  222:     if (sugestao_existente.semestre == nova_sugestao.semestre and \
  223:         sugestao_existente.curso == nova_sugestao.curso and \
- 224:         (nova_sugestao.semestre != 0 or \
+ 224:         (nova_sugestao.semestre != 0 and \
  225:         (nova_sugestao.semestre == 0 and checked))):
  226:         choques_componentes_semestre.add(
  227:             (str(sugestao_existente.componente.codigo) + ' - ') + \
  228:             sugestao_existente.componente.nome)
--------------------------------------------------------------------------------
[0.01005 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 805] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  221:     checked = form_sugestao.cleaned_data['checked']
  222:     if (sugestao_existente.semestre == nova_sugestao.semestre and \
  223:         sugestao_existente.curso == nova_sugestao.curso and \
  224:         (nova_sugestao.semestre != 0 or \
- 225:         (nova_sugestao.semestre == 0 and checked))):
+ 225:         (nova_sugestao.semestre == 0 or checked))):
  226:         choques_componentes_semestre.add(
  227:             (str(sugestao_existente.componente.codigo) + ' - ') + \
  228:             sugestao_existente.componente.nome)
  229:         choques_semestres.append((horario.dia + horario.turno) + horario.ordem)
--------------------------------------------------------------------------------
[0.01007 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 806] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  233:     str_result = ''
  234:     tam = len(colecao)
  235:     for (index, s) in enumerate(colecao, start=1):
  236:         str_result += s.__str__()
- 237:         if (tam > 1 and index < tam):
+ 237:         if (tam > 1 or index < tam):
  238:             str_result += ', '
  239:     str_result += ''
  240:     return str_result
  241: 
--------------------------------------------------------------------------------
[0.01069 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 807] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  245: def sugestao_editar(request, pk, estrutura, template_name='core/sugestao/editar.html'):sugestao = get_object_or_404(SugestaoTurma, pk=pk)
  246:     if not (verificar_permissoes(request, sugestao, estrutura)):
  247:         messages.error(request, 'Você não tem permissão de Editar esta Sugestão de Turma.')
  248:         return redirecionar(request)
- 249:     form_sugestao = SugestaoTurmaForm((request.POST or None), instance=sugestao, estrutura=estrutura)
+ 249:     form_sugestao = SugestaoTurmaForm((request.POST and None), instance=sugestao, estrutura=estrutura)
  250:     vinculos_docente = request.POST.get('vinculos_docente')
  251:     if vinculos_docente is not None:
  252:         vinculos = carregar_vinculos(vinculos_docente)
  253:     else:
--------------------------------------------------------------------------------
[0.00953 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 808] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  299: 
  300: def redirecionar(request):
  301:     url = request.GET.get('next', '/')
  302:     parsed_uri = urlparse(url)
- 303:     if (parsed_uri.netloc == '' or parsed_uri.netloc in DOMAINS_WHITELIST):
+ 303:     if (parsed_uri.netloc == '' and parsed_uri.netloc in DOMAINS_WHITELIST):
  304:         return HttpResponseRedirect(url)
  305:     return HttpResponseRedirect('/core')
  306: 
  307: 
--------------------------------------------------------------------------------
[0.00983 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 809] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  358:     funcao = get_funcao_by_siape(siape)
  359:     id_unidade_designacao = funcao[0].id_unidade_designacao
  360:     test_chefe2 = departamento.id_unidade == id_unidade_designacao
  361:     
- 362:     return (grupo_chefes in grupos and test_chefe1 and test_chefe2)
+ 362:     return (grupo_chefes in grupos or test_chefe1 or test_chefe2)
  363: 
  364: 
  365: def is_coordenador(usuario, curso):
  366:     '''
--------------------------------------------------------------------------------
[0.00906 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 810] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  385:     for funcao in funcoes:
  386:         
  387:         
  388:         
- 389:         test_coordenador2 = (test_coordenador2 or 'COORDENADOR DE CURSO' == funcao.atividade)
+ 389:         test_coordenador2 = (test_coordenador2 and 'COORDENADOR DE CURSO' == funcao.atividade)
  390:     
  391:     return (grupo_chefes in grupos and (test_coordenador1 and test_coordenador2))
  392: 
  393: 
--------------------------------------------------------------------------------
[0.01030 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 811] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  387:         
  388:         
  389:         test_coordenador2 = (test_coordenador2 or 'COORDENADOR DE CURSO' == funcao.atividade)
  390:     
- 391:     return (grupo_chefes in grupos and (test_coordenador1 and test_coordenador2))
+ 391:     return (grupo_chefes in grupos or (test_coordenador1 and test_coordenador2))
  392: 
  393: 
  394: def docente_existe(usuario):
  395:     '''
--------------------------------------------------------------------------------
[0.01004 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 812] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  387:         
  388:         
  389:         test_coordenador2 = (test_coordenador2 or 'COORDENADOR DE CURSO' == funcao.atividade)
  390:     
- 391:     return (grupo_chefes in grupos and (test_coordenador1 and test_coordenador2))
+ 391:     return (grupo_chefes in grupos and (test_coordenador1 or test_coordenador2))
  392: 
  393: 
  394: def docente_existe(usuario):
  395:     '''
--------------------------------------------------------------------------------
[0.00957 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 813] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  566: 
  567: 
  568: def carregar_vinculos(vinculos_docente):
  569:     vinculos = []
- 570:     if (vinculos_docente is not None and vinculos_docente != ''):
+ 570:     if (vinculos_docente is not None or vinculos_docente != ''):
  571:         vds = json.loads(vinculos_docente)
  572:         for v in vds['vinculos']:
  573:             docente_id = v['docente']
  574:             horarios = v['horarios']
--------------------------------------------------------------------------------
[0.00988 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 814] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  611:     return (None, False)
  612: 
  613: 
  614: def adicionar_vinculo_docente(sugestao, docente, carga_horaria, horarios):
- 615:     if (docente is not None and sugestao is not None and \
+ 615:     if (docente is not None or sugestao is not None or \
  616:         not (VinculoDocenteSugestao.objects.filter(sugestao=sugestao, docente=docente).exists())):
  617:         vinculo = VinculoDocenteSugestao(
  618:             docente=docente, sugestao=sugestao, carga_horaria=carga_horaria, descricao_horario=horarios)
  619:         vinculo.save()
--------------------------------------------------------------------------------
[0.00995 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 815] LCR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  625:     for vinculo in vinculos:
  626:         adicionar_vinculo_docente(sugestao, vinculo['docente'], vinculo['carga_horaria'], vinculo['horarios'])
  627: 
  628: def remover_vinculo_docente(sugestao, docente):
- 629:     if (docente is not None and sugestao is not None and \
+ 629:     if (docente is not None or sugestao is not None or \
  630:         VinculoDocenteSugestao.objects.filter(sugestao__id=sugestao, docente__id=docente).exists()):
  631:         vinculo = VinculoDocenteSugestao.objects.get(
  632:             docente__id=docente, sugestao__id=sugestao)
  633:         vinculo.delete()
--------------------------------------------------------------------------------
[0.01050 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 816] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
   32:     semestres = atualiza_semestres(semestres)
   33:     ano_periodo_atual = get_periodo_ativo()
   34:     ano_periodo_prox = get_periodo_planejado()
   35:     ano_periodo = request.GET.getlist('ano_periodo')
-  36:     if (ano_periodo is None or ano_periodo == []):
+  36:     if (ano_periodo is None or ano_periodo != []):
   37:         ano_periodo = ano_periodo_prox
   38:     elif ano_periodo_atual.is_same_as(ano_periodo[0]):
   39:         ano_periodo = ano_periodo_atual
   40:     else:
--------------------------------------------------------------------------------
[0.01228 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 817] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
   41:         ano_periodo = ano_periodo_prox
   42:     
   43:     docente_sel = request.GET.getlist('docente_sel')
   44:     docente_objDocenteNone
-  45:     if (docente_sel is not None and docente_sel != []):
+  45:     if (docente_sel is not None and docente_sel == []):
   46:         docente_sel = docente_sel[0]
   47:         docente_obj = Docente.objects.filter(nome=docente_sel).first()
   48:     else:
   49:         docente_sel = ''
--------------------------------------------------------------------------------
[0.00957 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 818] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
   97: 
   98: def sugestao_incluir(request, estrutura, sugestao_manter_link):
   99:     periodo_letivo = get_periodo_planejado()
  100:     vinculos = []
- 101:     if request.method == 'POST':
+ 101:     if request.method != 'POST':
  102:         form_sugestao = SugestaoTurmaForm(request.POST, estrutura=estrutura)
  103:         vinculos_docente = request.POST.get('vinculos_docente')
  104:         vinculos = carregar_vinculos(vinculos_docente)
  105:         
--------------------------------------------------------------------------------
[0.01021 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 819] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  181:         sugestoes = horario.sugestoes.all().filter(
  182:             ano=periodo_letivo.ano, periodo=periodo_letivo.periodo)
  183:         if sugestoes:
  184:             for s in sugestoes:
- 185:                 if (s.codigo_turma == sugestao_turma.codigo_turma and s.componente == sugestao_turma.componente):
+ 185:                 if (s.codigo_turma != sugestao_turma.codigo_turma and s.componente == sugestao_turma.componente):
  186:                     break
  187:                 if (sugestao_turma.local is not None and s.local == sugestao_turma.local):
  188:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
  189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
--------------------------------------------------------------------------------
[0.00939 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 820] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  181:         sugestoes = horario.sugestoes.all().filter(
  182:             ano=periodo_letivo.ano, periodo=periodo_letivo.periodo)
  183:         if sugestoes:
  184:             for s in sugestoes:
- 185:                 if (s.codigo_turma == sugestao_turma.codigo_turma and s.componente == sugestao_turma.componente):
+ 185:                 if (s.codigo_turma == sugestao_turma.codigo_turma and s.componente != sugestao_turma.componente):
  186:                     break
  187:                 if (sugestao_turma.local is not None and s.local == sugestao_turma.local):
  188:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
  189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
--------------------------------------------------------------------------------
[0.01217 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 821] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  183:         if sugestoes:
  184:             for s in sugestoes:
  185:                 if (s.codigo_turma == sugestao_turma.codigo_turma and s.componente == sugestao_turma.componente):
  186:                     break
- 187:                 if (sugestao_turma.local is not None and s.local == sugestao_turma.local):
+ 187:                 if (sugestao_turma.local is not None and s.local != sugestao_turma.local):
  188:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
  189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
  190:                 if (sugestao_turma.docente is not None and s.docente == sugestao_turma.docente):
  191:                     
--------------------------------------------------------------------------------
[0.01007 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 822] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  186:                     break
  187:                 if (sugestao_turma.local is not None and s.local == sugestao_turma.local):
  188:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
  189:                     choques_horarios.append((horario.dia + horario.turno) + horario.ordem)
- 190:                 if (sugestao_turma.docente is not None and s.docente == sugestao_turma.docente):
+ 190:                 if (sugestao_turma.docente is not None and s.docente != sugestao_turma.docente):
  191:                     
  192:                     choques_componentes.add((str(s.componente.codigo) + ' - ') + s.componente.nome)
  193:                     choque_docente.append((horario.dia + horario.turno) + horario.ordem)
  194:                 
--------------------------------------------------------------------------------
[0.01060 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 823] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  218: 
  219: 
  220: def verificar_choques_semestre(form_sugestao, horario, sugestao_existente, nova_sugestao, choques_componentes_semestre, choques_semestres):
  221:     checked = form_sugestao.cleaned_data['checked']
- 222:     if (sugestao_existente.semestre == nova_sugestao.semestre and \
+ 222:     if (sugestao_existente.semestre != nova_sugestao.semestre and \
  223:         sugestao_existente.curso == nova_sugestao.curso and \
  224:         (nova_sugestao.semestre != 0 or \
  225:         (nova_sugestao.semestre == 0 and checked))):
  226:         choques_componentes_semestre.add(
--------------------------------------------------------------------------------
[0.01095 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 824] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  219: 
  220: def verificar_choques_semestre(form_sugestao, horario, sugestao_existente, nova_sugestao, choques_componentes_semestre, choques_semestres):
  221:     checked = form_sugestao.cleaned_data['checked']
  222:     if (sugestao_existente.semestre == nova_sugestao.semestre and \
- 223:         sugestao_existente.curso == nova_sugestao.curso and \
+ 223:         sugestao_existente.curso != nova_sugestao.curso and \
  224:         (nova_sugestao.semestre != 0 or \
  225:         (nova_sugestao.semestre == 0 and checked))):
  226:         choques_componentes_semestre.add(
  227:             (str(sugestao_existente.componente.codigo) + ' - ') + \
--------------------------------------------------------------------------------
[0.01141 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 825] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  220: def verificar_choques_semestre(form_sugestao, horario, sugestao_existente, nova_sugestao, choques_componentes_semestre, choques_semestres):
  221:     checked = form_sugestao.cleaned_data['checked']
  222:     if (sugestao_existente.semestre == nova_sugestao.semestre and \
  223:         sugestao_existente.curso == nova_sugestao.curso and \
- 224:         (nova_sugestao.semestre != 0 or \
+ 224:         (nova_sugestao.semestre == 0 or \
  225:         (nova_sugestao.semestre == 0 and checked))):
  226:         choques_componentes_semestre.add(
  227:             (str(sugestao_existente.componente.codigo) + ' - ') + \
  228:             sugestao_existente.componente.nome)
--------------------------------------------------------------------------------
[0.00893 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 826] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  221:     checked = form_sugestao.cleaned_data['checked']
  222:     if (sugestao_existente.semestre == nova_sugestao.semestre and \
  223:         sugestao_existente.curso == nova_sugestao.curso and \
  224:         (nova_sugestao.semestre != 0 or \
- 225:         (nova_sugestao.semestre == 0 and checked))):
+ 225:         (nova_sugestao.semestre != 0 and checked))):
  226:         choques_componentes_semestre.add(
  227:             (str(sugestao_existente.componente.codigo) + ' - ') + \
  228:             sugestao_existente.componente.nome)
  229:         choques_semestres.append((horario.dia + horario.turno) + horario.ordem)
--------------------------------------------------------------------------------
[0.01219 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 827] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  233:     str_result = ''
  234:     tam = len(colecao)
  235:     for (index, s) in enumerate(colecao, start=1):
  236:         str_result += s.__str__()
- 237:         if (tam > 1 and index < tam):
+ 237:         if (tam < 1 and index < tam):
  238:             str_result += ', '
  239:     str_result += ''
  240:     return str_result
  241: 
--------------------------------------------------------------------------------
[0.00952 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 828] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  233:     str_result = ''
  234:     tam = len(colecao)
  235:     for (index, s) in enumerate(colecao, start=1):
  236:         str_result += s.__str__()
- 237:         if (tam > 1 and index < tam):
+ 237:         if (tam >= 1 and index < tam):
  238:             str_result += ', '
  239:     str_result += ''
  240:     return str_result
  241: 
--------------------------------------------------------------------------------
[0.00931 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 829] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  233:     str_result = ''
  234:     tam = len(colecao)
  235:     for (index, s) in enumerate(colecao, start=1):
  236:         str_result += s.__str__()
- 237:         if (tam > 1 and index < tam):
+ 237:         if (tam > 1 and index > tam):
  238:             str_result += ', '
  239:     str_result += ''
  240:     return str_result
  241: 
--------------------------------------------------------------------------------
[0.01041 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 830] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  233:     str_result = ''
  234:     tam = len(colecao)
  235:     for (index, s) in enumerate(colecao, start=1):
  236:         str_result += s.__str__()
- 237:         if (tam > 1 and index < tam):
+ 237:         if (tam > 1 and index <= tam):
  238:             str_result += ', '
  239:     str_result += ''
  240:     return str_result
  241: 
--------------------------------------------------------------------------------
[0.00954 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 831] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  273: def sugestao_deletar(request, pk, estrutura, template_name='core/sugestao/confirm_delete.html'):sugestao = get_object_or_404(SugestaoTurma, pk=pk)
  274:     if not (verificar_permissoes(request, sugestao, estrutura)):
  275:         messages.error(request, 'Você não tem permissão de Excluir esta Sugestão de Turma.')
  276:         return redirecionar(request)
- 277:     if request.method == 'POST':
+ 277:     if request.method != 'POST':
  278:         try:
  279:             sugestao.delete()
  280:             messages.success(request, 'Sugestão de Turma excluída com sucesso.')
  281:         except ProtectedError as err:
--------------------------------------------------------------------------------
[0.01283 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 832] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  289: def solicitacao_discente_deletar(request, pk, template_name='core/sugestao/solicitacao_confirm_delete.html'):solicitacao = get_object_or_404(SolicitacaoTurma, pk=pk)
  290:     if not (tem_permissao(request, solicitacao)):
  291:         messages.error(request, 'Você não tem permissão de Excluir esta Solicitacao de Turma.')
  292:         return redirecionar(request)
- 293:     if request.method == 'POST':
+ 293:     if request.method != 'POST':
  294:         solicitacao.delete()
  295:         messages.success(request, 'Solicitação de Turma excluída com sucesso.')
  296:         return redirecionar(request)
  297:     return render(request, template_name, {'object': solicitacao})
--------------------------------------------------------------------------------
[0.00923 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 833] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  299: 
  300: def redirecionar(request):
  301:     url = request.GET.get('next', '/')
  302:     parsed_uri = urlparse(url)
- 303:     if (parsed_uri.netloc == '' or parsed_uri.netloc in DOMAINS_WHITELIST):
+ 303:     if (parsed_uri.netloc != '' or parsed_uri.netloc in DOMAINS_WHITELIST):
  304:         return HttpResponseRedirect(url)
  305:     return HttpResponseRedirect('/core')
  306: 
  307: 
--------------------------------------------------------------------------------
[0.02736 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 834] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  322: 
  323: def tem_permissao(request, solicitacao):
  324:     
  325:     usuario = request.user
- 326:     if usuario == solicitacao.usuario:
+ 326:     if usuario != solicitacao.usuario:
  327:         return True
  328:     return False
  329: 
  330: 
--------------------------------------------------------------------------------
[0.00937 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 835] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  334:     :param usuario: Usuário autenticado.
  335:     :param sugestao: Sugestão de Turma.
  336:     :return: True se o usuário for o criador da Sugestão de Turma.
  337:     '''
- 338:     return usuario == sugestao.criador
+ 338:     return usuario != sugestao.criador
  339: 
  340: 
  341: def is_chefe(usuario, departamento):
  342:     '''
--------------------------------------------------------------------------------
[0.00998 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 836] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  351:     grupo_chefes = Group.objects.get(name='Chefes')
  352:     grupos = usuario.groups.all()
  353:     
  354:     id_unidade_lotacao = usuario.docente.id_unidade_lotacao
- 355:     test_chefe1 = departamento.id_unidade == id_unidade_lotacao
+ 355:     test_chefe1 = departamento.id_unidade != id_unidade_lotacao
  356:     
  357:     siape = usuario.docente.siape
  358:     funcao = get_funcao_by_siape(siape)
  359:     id_unidade_designacao = funcao[0].id_unidade_designacao
--------------------------------------------------------------------------------
[0.00952 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 837] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  356:     
  357:     siape = usuario.docente.siape
  358:     funcao = get_funcao_by_siape(siape)
  359:     id_unidade_designacao = funcao[0].id_unidade_designacao
- 360:     test_chefe2 = departamento.id_unidade == id_unidade_designacao
+ 360:     test_chefe2 = departamento.id_unidade != id_unidade_designacao
  361:     
  362:     return (grupo_chefes in grupos and test_chefe1 and test_chefe2)
  363: 
  364: 
--------------------------------------------------------------------------------
[0.00915 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 838] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  377:     
  378:     siape = usuario.docente.siape
  379:     test_coordenador1 = False
  380:     if curso.coordenador:
- 381:         test_coordenador1 = curso.coordenador.siape == siape
+ 381:         test_coordenador1 = curso.coordenador.siape != siape
  382:     
  383:     funcoes = get_funcao_by_siape(siape)
  384:     test_coordenador2 = False
  385:     for funcao in funcoes:
--------------------------------------------------------------------------------
[0.00915 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 839] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  385:     for funcao in funcoes:
  386:         
  387:         
  388:         
- 389:         test_coordenador2 = (test_coordenador2 or 'COORDENADOR DE CURSO' == funcao.atividade)
+ 389:         test_coordenador2 = (test_coordenador2 or 'COORDENADOR DE CURSO' != funcao.atividade)
  390:     
  391:     return (grupo_chefes in grupos and (test_coordenador1 and test_coordenador2))
  392: 
  393: 
--------------------------------------------------------------------------------
[0.00929 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 840] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  487:     em cada horário.
  488:     '''
  489:     tt = []
  490:     n = 7
- 491:     if turno == 'N':
+ 491:     if turno != 'N':
  492:         n = 5
  493:     
  494:     for i in range(1, n):
  495:         horarios = Horario.objects.filter(turno=turno, ordem=i).order_by('dia')
--------------------------------------------------------------------------------
[0.00935 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 841] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  527:     docente = Docente.objects.get(pk=docente_id)
  528:     existe_docente = False
  529:     houve_choque = False
  530:     for v in vinculos:
- 531:         if docente == v['docente']:
+ 531:         if docente != v['docente']:
  532:             existe_docente = True
  533:             break
  534:     
  535:     if not existe_docente:
--------------------------------------------------------------------------------
[0.00921 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 842] ROR core.visoes.suggest_view: 
--------------------------------------------------------------------------------
  566: 
  567: 
  568: def carregar_vinculos(vinculos_docente):
  569:     vinculos = []
- 570:     if (vinculos_docente is not None and vinculos_docente != ''):
+ 570:     if (vinculos_docente is not None and vinculos_docente == ''):
  571:         vds = json.loads(vinculos_docente)
  572:         for v in vds['vinculos']:
  573:             docente_id = v['docente']
  574:             horarios = v['horarios']
--------------------------------------------------------------------------------
[0.01000 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 843] AOR core.visoes.turma_view: 
--------------------------------------------------------------------------------
  27:             PeriodoLetivo.CONSOLIDADO, 
  28:             ano=ano_anterior, 
  29:             periodo=periodo_anterior).first()
  30:         
- 31:         ano_anterior = ano_periodo_atual.ano - 1
+ 31:         ano_anterior = ano_periodo_atual.ano + 1
  32:         periodo_anterior = 2
  33:         ano_periodo_anterior2 = get_periodo_letivo(
  34:             PeriodoLetivo.CONSOLIDADO, 
  35:             ano=ano_anterior, periodo=periodo_anterior).first()
--------------------------------------------------------------------------------
[0.00884 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 844] AOR core.visoes.turma_view: 
--------------------------------------------------------------------------------
  33:         ano_periodo_anterior2 = get_periodo_letivo(
  34:             PeriodoLetivo.CONSOLIDADO, 
  35:             ano=ano_anterior, periodo=periodo_anterior).first()
  36:     else:
- 37:         ano_anterior = ano_periodo_atual.ano - 1
+ 37:         ano_anterior = ano_periodo_atual.ano + 1
  38:         periodo_anterior = 2
  39:         ano_periodo_anterior1 = get_periodo_letivo(
  40:             PeriodoLetivo.CONSOLIDADO, 
  41:             ano=ano_anterior, 
--------------------------------------------------------------------------------
[0.00870 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 845] COI core.visoes.turma_view: 
--------------------------------------------------------------------------------
  19:     
  20:     ano_periodo_atual = get_periodo_ativo()
  21:     ano_periodo_anterior1 = None
  22:     ano_periodo_anterior2 = None
- 23:     if ano_periodo_atual.periodo == 2:
+ 23:     if not (ano_periodo_atual.periodo == 2):
  24:         ano_anterior = ano_periodo_atual.ano
  25:         periodo_anterior = 1
  26:         ano_periodo_anterior1 = get_periodo_letivo(
  27:             PeriodoLetivo.CONSOLIDADO, 
--------------------------------------------------------------------------------
[0.01008 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 846] COI core.visoes.turma_view: 
--------------------------------------------------------------------------------
  41:             ano=ano_anterior, 
  42:             periodo=periodo_anterior).first()
  43:         
  44:         periodo_anterior = 1
- 45:         if ano_anterior == 2020:
+ 45:         if not (ano_anterior == 2020):
  46:             periodo_anterior = 6
  47:         
  48:         ano_periodo_anterior2 = get_periodo_letivo(
  49:             PeriodoLetivo.CONSOLIDADO, 
--------------------------------------------------------------------------------
[0.01057 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 847] ROR core.visoes.turma_view: 
--------------------------------------------------------------------------------
  19:     
  20:     ano_periodo_atual = get_periodo_ativo()
  21:     ano_periodo_anterior1 = None
  22:     ano_periodo_anterior2 = None
- 23:     if ano_periodo_atual.periodo == 2:
+ 23:     if ano_periodo_atual.periodo != 2:
  24:         ano_anterior = ano_periodo_atual.ano
  25:         periodo_anterior = 1
  26:         ano_periodo_anterior1 = get_periodo_letivo(
  27:             PeriodoLetivo.CONSOLIDADO, 
--------------------------------------------------------------------------------
[0.01200 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 848] ROR core.visoes.turma_view: 
--------------------------------------------------------------------------------
  41:             ano=ano_anterior, 
  42:             periodo=periodo_anterior).first()
  43:         
  44:         periodo_anterior = 1
- 45:         if ano_anterior == 2020:
+ 45:         if ano_anterior != 2020:
  46:             periodo_anterior = 6
  47:         
  48:         ano_periodo_anterior2 = get_periodo_letivo(
  49:             PeriodoLetivo.CONSOLIDADO, 
--------------------------------------------------------------------------------
[0.01471 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 849] AOR core.visoes.user_view: 
--------------------------------------------------------------------------------
   38:     matricula = form_usuario.cleaned_data.get('matricula')
   39:     if Docente.objects.filter(siape=matricula).exists():
   40:         docente = Docente.objects.get(siape=matricula)
   41:         if docente.usuario:
-  42:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(docente.usuario)) + ' <') + docente.usuario.email) + '>')
+  42:             messages.error(request, ((('Já existe usuário para a matricula informada: ' - str(docente.usuario)) + ' <') + docente.usuario.email) + '>')
   43:             raise ValidationError('Já existe usuário para a matricula informada!')
   44:     elif Discente.objects.filter(matricula=matricula).exists():
   45:         discente = Discente.objects.get(matricula=matricula)
   46:         if discente.usuario:
--------------------------------------------------------------------------------
[0.01097 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 850] AOR core.visoes.user_view: 
--------------------------------------------------------------------------------
   38:     matricula = form_usuario.cleaned_data.get('matricula')
   39:     if Docente.objects.filter(siape=matricula).exists():
   40:         docente = Docente.objects.get(siape=matricula)
   41:         if docente.usuario:
-  42:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(docente.usuario)) + ' <') + docente.usuario.email) + '>')
+  42:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(docente.usuario)) - ' <') + docente.usuario.email) + '>')
   43:             raise ValidationError('Já existe usuário para a matricula informada!')
   44:     elif Discente.objects.filter(matricula=matricula).exists():
   45:         discente = Discente.objects.get(matricula=matricula)
   46:         if discente.usuario:
--------------------------------------------------------------------------------
[0.01054 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 851] AOR core.visoes.user_view: 
--------------------------------------------------------------------------------
   38:     matricula = form_usuario.cleaned_data.get('matricula')
   39:     if Docente.objects.filter(siape=matricula).exists():
   40:         docente = Docente.objects.get(siape=matricula)
   41:         if docente.usuario:
-  42:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(docente.usuario)) + ' <') + docente.usuario.email) + '>')
+  42:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(docente.usuario)) + ' <') - docente.usuario.email) + '>')
   43:             raise ValidationError('Já existe usuário para a matricula informada!')
   44:     elif Discente.objects.filter(matricula=matricula).exists():
   45:         discente = Discente.objects.get(matricula=matricula)
   46:         if discente.usuario:
--------------------------------------------------------------------------------
[0.00989 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 852] AOR core.visoes.user_view: 
--------------------------------------------------------------------------------
   38:     matricula = form_usuario.cleaned_data.get('matricula')
   39:     if Docente.objects.filter(siape=matricula).exists():
   40:         docente = Docente.objects.get(siape=matricula)
   41:         if docente.usuario:
-  42:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(docente.usuario)) + ' <') + docente.usuario.email) + '>')
+  42:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(docente.usuario)) + ' <') + docente.usuario.email) - '>')
   43:             raise ValidationError('Já existe usuário para a matricula informada!')
   44:     elif Discente.objects.filter(matricula=matricula).exists():
   45:         discente = Discente.objects.get(matricula=matricula)
   46:         if discente.usuario:
--------------------------------------------------------------------------------
[0.00981 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 853] AOR core.visoes.user_view: 
--------------------------------------------------------------------------------
   43:             raise ValidationError('Já existe usuário para a matricula informada!')
   44:     elif Discente.objects.filter(matricula=matricula).exists():
   45:         discente = Discente.objects.get(matricula=matricula)
   46:         if discente.usuario:
-  47:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(discente.usuario)) + ' <') + discente.usuario.email) + '>')
+  47:             messages.error(request, ((('Já existe usuário para a matricula informada: ' - str(discente.usuario)) + ' <') + discente.usuario.email) + '>')
   48:             raise ValidationError('Já existe usuário para a matricula informada!')
   49: 
   50: 
   51: def check_email(request, form_usuario):
--------------------------------------------------------------------------------
[0.00952 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 854] AOR core.visoes.user_view: 
--------------------------------------------------------------------------------
   43:             raise ValidationError('Já existe usuário para a matricula informada!')
   44:     elif Discente.objects.filter(matricula=matricula).exists():
   45:         discente = Discente.objects.get(matricula=matricula)
   46:         if discente.usuario:
-  47:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(discente.usuario)) + ' <') + discente.usuario.email) + '>')
+  47:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(discente.usuario)) - ' <') + discente.usuario.email) + '>')
   48:             raise ValidationError('Já existe usuário para a matricula informada!')
   49: 
   50: 
   51: def check_email(request, form_usuario):
--------------------------------------------------------------------------------
[0.02269 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 855] AOR core.visoes.user_view: 
--------------------------------------------------------------------------------
   43:             raise ValidationError('Já existe usuário para a matricula informada!')
   44:     elif Discente.objects.filter(matricula=matricula).exists():
   45:         discente = Discente.objects.get(matricula=matricula)
   46:         if discente.usuario:
-  47:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(discente.usuario)) + ' <') + discente.usuario.email) + '>')
+  47:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(discente.usuario)) + ' <') - discente.usuario.email) + '>')
   48:             raise ValidationError('Já existe usuário para a matricula informada!')
   49: 
   50: 
   51: def check_email(request, form_usuario):
--------------------------------------------------------------------------------
[0.01074 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 856] AOR core.visoes.user_view: 
--------------------------------------------------------------------------------
   43:             raise ValidationError('Já existe usuário para a matricula informada!')
   44:     elif Discente.objects.filter(matricula=matricula).exists():
   45:         discente = Discente.objects.get(matricula=matricula)
   46:         if discente.usuario:
-  47:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(discente.usuario)) + ' <') + discente.usuario.email) + '>')
+  47:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(discente.usuario)) + ' <') + discente.usuario.email) - '>')
   48:             raise ValidationError('Já existe usuário para a matricula informada!')
   49: 
   50: 
   51: def check_email(request, form_usuario):
--------------------------------------------------------------------------------
[0.01006 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 857] COI core.visoes.user_view: 
--------------------------------------------------------------------------------
   23: 
   24: 
   25: def check_usuario(usuario, form_usuario, g):
   26:     matricula = form_usuario.cleaned_data.get('matricula')
-  27:     if (g.name == 'Docentes' and Docente.objects.filter(siape=matricula).exists()):
+  27:     if not ((g.name == 'Docentes' and Docente.objects.filter(siape=matricula).exists())):
   28:         docente = Docente.objects.get(siape=matricula)
   29:         docente.usuario = usuario
   30:         docente.save()
   31:     elif (g.name == 'Discentes' and Discente.objects.filter(matricula=matricula).exists()):
--------------------------------------------------------------------------------
[0.01025 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 858] COI core.visoes.user_view: 
--------------------------------------------------------------------------------
   27:     if (g.name == 'Docentes' and Docente.objects.filter(siape=matricula).exists()):
   28:         docente = Docente.objects.get(siape=matricula)
   29:         docente.usuario = usuario
   30:         docente.save()
-  31:     elif (g.name == 'Discentes' and Discente.objects.filter(matricula=matricula).exists()):
+  31:     elif not ((g.name == 'Discentes' and Discente.objects.filter(matricula=matricula).exists())):
   32:         discente = Discente.objects.get(matricula=matricula)
   33:         discente.usuario = usuario
   34:         discente.save()
   35: 
--------------------------------------------------------------------------------
[0.01801 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 859] COI core.visoes.user_view: 
--------------------------------------------------------------------------------
   35: 
   36: 
   37: def check_user_exists(request, form_usuario):
   38:     matricula = form_usuario.cleaned_data.get('matricula')
-  39:     if Docente.objects.filter(siape=matricula).exists():
+  39:     if not (Docente.objects.filter(siape=matricula).exists()):
   40:         docente = Docente.objects.get(siape=matricula)
   41:         if docente.usuario:
   42:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(docente.usuario)) + ' <') + docente.usuario.email) + '>')
   43:             raise ValidationError('Já existe usuário para a matricula informada!')
--------------------------------------------------------------------------------
[0.01038 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 860] COI core.visoes.user_view: 
--------------------------------------------------------------------------------
   37: def check_user_exists(request, form_usuario):
   38:     matricula = form_usuario.cleaned_data.get('matricula')
   39:     if Docente.objects.filter(siape=matricula).exists():
   40:         docente = Docente.objects.get(siape=matricula)
-  41:         if docente.usuario:
+  41:         if not (docente.usuario):
   42:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(docente.usuario)) + ' <') + docente.usuario.email) + '>')
   43:             raise ValidationError('Já existe usuário para a matricula informada!')
   44:     elif Discente.objects.filter(matricula=matricula).exists():
   45:         discente = Discente.objects.get(matricula=matricula)
--------------------------------------------------------------------------------
[0.01134 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 861] COI core.visoes.user_view: 
--------------------------------------------------------------------------------
   40:         docente = Docente.objects.get(siape=matricula)
   41:         if docente.usuario:
   42:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(docente.usuario)) + ' <') + docente.usuario.email) + '>')
   43:             raise ValidationError('Já existe usuário para a matricula informada!')
-  44:     elif Discente.objects.filter(matricula=matricula).exists():
+  44:     elif not (Discente.objects.filter(matricula=matricula).exists()):
   45:         discente = Discente.objects.get(matricula=matricula)
   46:         if discente.usuario:
   47:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(discente.usuario)) + ' <') + discente.usuario.email) + '>')
   48:             raise ValidationError('Já existe usuário para a matricula informada!')
--------------------------------------------------------------------------------
[0.01023 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 862] COI core.visoes.user_view: 
--------------------------------------------------------------------------------
   42:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(docente.usuario)) + ' <') + docente.usuario.email) + '>')
   43:             raise ValidationError('Já existe usuário para a matricula informada!')
   44:     elif Discente.objects.filter(matricula=matricula).exists():
   45:         discente = Discente.objects.get(matricula=matricula)
-  46:         if discente.usuario:
+  46:         if not (discente.usuario):
   47:             messages.error(request, ((('Já existe usuário para a matricula informada: ' + str(discente.usuario)) + ' <') + discente.usuario.email) + '>')
   48:             raise ValidationError('Já existe usuário para a matricula informada!')
   49: 
   50: 
--------------------------------------------------------------------------------
[0.01071 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 863] COI core.visoes.user_view: 
--------------------------------------------------------------------------------
   49: 
   50: 
   51: def check_email(request, form_usuario):
   52:     email = form_usuario.cleaned_data.get('email')
-  53:     if User.objects.filter(email=email).exists():
+  53:     if not (User.objects.filter(email=email).exists()):
   54:         msg = 'O e-mail informado já foi cadastrado!'
   55:         messages.error(request, msg)
   56:         form_usuario.add_error('email', msg)
   57:         raise ValidationError('Email já existe!')
--------------------------------------------------------------------------------
[0.01018 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 864] COI core.visoes.user_view: 
--------------------------------------------------------------------------------
   59: 
   60: def check_grupos(request, form_usuario, usuario):
   61:     matricula = form_usuario.cleaned_data.get('matricula')
   62:     grupos = []
-  63:     if Docente.objects.filter(siape=matricula).exists():
+  63:     if not (Docente.objects.filter(siape=matricula).exists()):
   64:         grupos.append(get_grupo_docentes())
   65:         check_gestor(grupos, matricula)
   66:         return grupos
   67:     
--------------------------------------------------------------------------------
[0.01039 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 865] COI core.visoes.user_view: 
--------------------------------------------------------------------------------
   64:         grupos.append(get_grupo_docentes())
   65:         check_gestor(grupos, matricula)
   66:         return grupos
   67:     
-  68:     elif Discente.objects.filter(matricula=matricula).exists():
+  68:     elif not (Discente.objects.filter(matricula=matricula).exists()):
   69:         check_discente_ativo(form_usuario, grupos, matricula)
   70:         return grupos
   71:     
   72:     
--------------------------------------------------------------------------------
[0.03028 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 866] COI core.visoes.user_view: 
--------------------------------------------------------------------------------
   77: 
   78: 
   79: def check_discente_ativo(form_usuario, grupos, matricula):
   80:     discente = Discente.objects.get(matricula=matricula)
-  81:     if (discente.status == 'ATIVO' or discente.status == 'ATIVO - FORMANDO'):
+  81:     if not ((discente.status == 'ATIVO' or discente.status == 'ATIVO - FORMANDO')):
   82:         grupos.append(get_grupo_discentes())
   83:     else:
   84:         msg = 'A matrícula do discente informada não está ATIVA!'
   85:         form_usuario.add_error('matricula', msg)
--------------------------------------------------------------------------------
[0.00997 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 867] COI core.visoes.user_view: 
--------------------------------------------------------------------------------
   86: 
   87: 
   88: def check_gestor(grupos, matricula):
   89:     hoje = date.today()
-  90:     if FuncaoGratificada.objects.filter(siape=matricula, inicio__lte=hoje, fim__gt=hoje).exists():
+  90:     if not (FuncaoGratificada.objects.filter(siape=matricula, inicio__lte=hoje, fim__gt=hoje).exists()):
   91:         fgs = FuncaoGratificada.objects.filter(siape=matricula, inicio__lte=hoje, fim__gt=hoje)
   92:         for fg in fgs:
   93:             if fg.atividade == 'CHEFE DE DEPARTAMENTO':
   94:                 grupos.append(get_grupo_chefes())
--------------------------------------------------------------------------------
[0.00986 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 868] COI core.visoes.user_view: 
--------------------------------------------------------------------------------
   89:     hoje = date.today()
   90:     if FuncaoGratificada.objects.filter(siape=matricula, inicio__lte=hoje, fim__gt=hoje).exists():
   91:         fgs = FuncaoGratificada.objects.filter(siape=matricula, inicio__lte=hoje, fim__gt=hoje)
   92:         for fg in fgs:
-  93:             if fg.atividade == 'CHEFE DE DEPARTAMENTO':
+  93:             if not (fg.atividade == 'CHEFE DE DEPARTAMENTO'):
   94:                 grupos.append(get_grupo_chefes())
   95:             if fg.atividade == 'COORDENADOR DE CURSO':
   96:                 grupos.append(get_grupo_coordenadores())
   97: 
--------------------------------------------------------------------------------
[0.01098 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 869] COI core.visoes.user_view: 
--------------------------------------------------------------------------------
   91:         fgs = FuncaoGratificada.objects.filter(siape=matricula, inicio__lte=hoje, fim__gt=hoje)
   92:         for fg in fgs:
   93:             if fg.atividade == 'CHEFE DE DEPARTAMENTO':
   94:                 grupos.append(get_grupo_chefes())
-  95:             if fg.atividade == 'COORDENADOR DE CURSO':
+  95:             if not (fg.atividade == 'COORDENADOR DE CURSO'):
   96:                 grupos.append(get_grupo_coordenadores())
   97: 
   98: 
   99: def get_grupo_docentes():
--------------------------------------------------------------------------------
[0.01558 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 870] LCR core.visoes.user_view: 
--------------------------------------------------------------------------------
   23: 
   24: 
   25: def check_usuario(usuario, form_usuario, g):
   26:     matricula = form_usuario.cleaned_data.get('matricula')
-  27:     if (g.name == 'Docentes' and Docente.objects.filter(siape=matricula).exists()):
+  27:     if (g.name == 'Docentes' or Docente.objects.filter(siape=matricula).exists()):
   28:         docente = Docente.objects.get(siape=matricula)
   29:         docente.usuario = usuario
   30:         docente.save()
   31:     elif (g.name == 'Discentes' and Discente.objects.filter(matricula=matricula).exists()):
--------------------------------------------------------------------------------
[0.01318 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 871] LCR core.visoes.user_view: 
--------------------------------------------------------------------------------
   27:     if (g.name == 'Docentes' and Docente.objects.filter(siape=matricula).exists()):
   28:         docente = Docente.objects.get(siape=matricula)
   29:         docente.usuario = usuario
   30:         docente.save()
-  31:     elif (g.name == 'Discentes' and Discente.objects.filter(matricula=matricula).exists()):
+  31:     elif (g.name == 'Discentes' or Discente.objects.filter(matricula=matricula).exists()):
   32:         discente = Discente.objects.get(matricula=matricula)
   33:         discente.usuario = usuario
   34:         discente.save()
   35: 
--------------------------------------------------------------------------------
[0.01265 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 872] LCR core.visoes.user_view: 
--------------------------------------------------------------------------------
   77: 
   78: 
   79: def check_discente_ativo(form_usuario, grupos, matricula):
   80:     discente = Discente.objects.get(matricula=matricula)
-  81:     if (discente.status == 'ATIVO' or discente.status == 'ATIVO - FORMANDO'):
+  81:     if (discente.status == 'ATIVO' and discente.status == 'ATIVO - FORMANDO'):
   82:         grupos.append(get_grupo_discentes())
   83:     else:
   84:         msg = 'A matrícula do discente informada não está ATIVA!'
   85:         form_usuario.add_error('matricula', msg)
--------------------------------------------------------------------------------
[0.01028 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 873] ROR core.visoes.user_view: 
--------------------------------------------------------------------------------
   23: 
   24: 
   25: def check_usuario(usuario, form_usuario, g):
   26:     matricula = form_usuario.cleaned_data.get('matricula')
-  27:     if (g.name == 'Docentes' and Docente.objects.filter(siape=matricula).exists()):
+  27:     if (g.name != 'Docentes' and Docente.objects.filter(siape=matricula).exists()):
   28:         docente = Docente.objects.get(siape=matricula)
   29:         docente.usuario = usuario
   30:         docente.save()
   31:     elif (g.name == 'Discentes' and Discente.objects.filter(matricula=matricula).exists()):
--------------------------------------------------------------------------------
[0.01014 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 874] ROR core.visoes.user_view: 
--------------------------------------------------------------------------------
   27:     if (g.name == 'Docentes' and Docente.objects.filter(siape=matricula).exists()):
   28:         docente = Docente.objects.get(siape=matricula)
   29:         docente.usuario = usuario
   30:         docente.save()
-  31:     elif (g.name == 'Discentes' and Discente.objects.filter(matricula=matricula).exists()):
+  31:     elif (g.name != 'Discentes' and Discente.objects.filter(matricula=matricula).exists()):
   32:         discente = Discente.objects.get(matricula=matricula)
   33:         discente.usuario = usuario
   34:         discente.save()
   35: 
--------------------------------------------------------------------------------
[0.01019 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 875] ROR core.visoes.user_view: 
--------------------------------------------------------------------------------
   77: 
   78: 
   79: def check_discente_ativo(form_usuario, grupos, matricula):
   80:     discente = Discente.objects.get(matricula=matricula)
-  81:     if (discente.status == 'ATIVO' or discente.status == 'ATIVO - FORMANDO'):
+  81:     if (discente.status != 'ATIVO' or discente.status == 'ATIVO - FORMANDO'):
   82:         grupos.append(get_grupo_discentes())
   83:     else:
   84:         msg = 'A matrícula do discente informada não está ATIVA!'
   85:         form_usuario.add_error('matricula', msg)
--------------------------------------------------------------------------------
[0.00976 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 876] ROR core.visoes.user_view: 
--------------------------------------------------------------------------------
   77: 
   78: 
   79: def check_discente_ativo(form_usuario, grupos, matricula):
   80:     discente = Discente.objects.get(matricula=matricula)
-  81:     if (discente.status == 'ATIVO' or discente.status == 'ATIVO - FORMANDO'):
+  81:     if (discente.status == 'ATIVO' or discente.status != 'ATIVO - FORMANDO'):
   82:         grupos.append(get_grupo_discentes())
   83:     else:
   84:         msg = 'A matrícula do discente informada não está ATIVA!'
   85:         form_usuario.add_error('matricula', msg)
--------------------------------------------------------------------------------
[0.00942 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 877] ROR core.visoes.user_view: 
--------------------------------------------------------------------------------
   89:     hoje = date.today()
   90:     if FuncaoGratificada.objects.filter(siape=matricula, inicio__lte=hoje, fim__gt=hoje).exists():
   91:         fgs = FuncaoGratificada.objects.filter(siape=matricula, inicio__lte=hoje, fim__gt=hoje)
   92:         for fg in fgs:
-  93:             if fg.atividade == 'CHEFE DE DEPARTAMENTO':
+  93:             if fg.atividade != 'CHEFE DE DEPARTAMENTO':
   94:                 grupos.append(get_grupo_chefes())
   95:             if fg.atividade == 'COORDENADOR DE CURSO':
   96:                 grupos.append(get_grupo_coordenadores())
   97: 
--------------------------------------------------------------------------------
[0.01001 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
   - [# 878] ROR core.visoes.user_view: 
--------------------------------------------------------------------------------
   91:         fgs = FuncaoGratificada.objects.filter(siape=matricula, inicio__lte=hoje, fim__gt=hoje)
   92:         for fg in fgs:
   93:             if fg.atividade == 'CHEFE DE DEPARTAMENTO':
   94:                 grupos.append(get_grupo_chefes())
-  95:             if fg.atividade == 'COORDENADOR DE CURSO':
+  95:             if fg.atividade != 'COORDENADOR DE CURSO':
   96:                 grupos.append(get_grupo_coordenadores())
   97: 
   98: 
   99: def get_grupo_docentes():
--------------------------------------------------------------------------------
[0.00937 s] killed by setUpClass (core.tests.test_a_povoamento.ATests)
[*] Mutation score [3055.93510 s]: 99.9%
   - all: 878
   - killed: 760 (86.6%)
   - survived: 1 (0.1%)
   - incompetent: 109 (12.4%)
   - timeout: 8 (0.9%)
